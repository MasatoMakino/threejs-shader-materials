(()=>{"use strict";var e,n={721:(e,n,t)=>{var i=t(753);class a{static getChunkName(){return""}static getChunk(){return""}static getDefines(){return{}}static registerChunk(){i.vxI&&null==i.vxI[this.getChunkName()]&&(i.vxI[this.getChunkName()]=this.getChunk())}static getUniform(){return{}}}class r extends a{static registerChunk(){s.registerChunk(),o.registerChunk()}static getDefines(){return{USE_EXPANSION:!1}}static getUniform(){return{expansionStrength:{value:0}}}}class s extends a{static getChunkName(){return"__expansion_uniform_chunk"}static getChunk(){return"\n    #ifdef USE_EXPANSION\n      uniform float expansionStrength;\n    #endif\n    "}}class o extends a{static getChunkName(){return"__expansion_vertex_chunk"}static getChunk(){return"\n    #ifdef USE_EXPANSION\n      transformed += normal * expansionStrength;\n    #endif\n    "}}var l,u=t(710);class c extends a{static registerChunk(){super.registerChunk(),d.registerChunk(),p.registerChunk(),m.registerChunk()}static getUniform(){return u.LlO.merge([super.getUniform(),{hasMap:{value:!1},map:{value:null}}])}static getMap(e){return e.uniforms.map.value}static setMap(e,n){e.uniforms.map.value=n,e.uniforms.hasMap.value=null!=n}}class d extends a{static getChunkName(){return"map_uniform_chunk"}static getChunk(){return"\n      uniform bool hasMap;\n      uniform sampler2D map;\n    "}}class p extends a{static getChunkName(){return"map_fragment_chunk"}static getChunk(){return"\n      if( hasMap ){\n        vec4 texelColor = texture2D( map, mapUV );\n        diffuseColor *= texelColor;\n      }\n    "}}class m extends a{static getChunkName(){return"__ShaderMaterial__map_fragment_begin_chunk"}static getChunk(){return"\n      vec2 mapUV = uvPosition;\n    "}}class h extends a{static registerChunk(){g.registerChunk(),f.registerChunk(),_.registerChunk(),v.registerChunk(),C.registerChunk()}static getDefines(){return{USE_MESH_POSITION:!1}}}class g extends a{static getChunkName(){return"mesh_phong_uniform"}static getChunk(){return"\n      uniform vec3 diffuse;\n      uniform vec3 emissive;\n      uniform vec3 specular;\n      uniform float shininess;\n      uniform float opacity;\n      uniform bool hasAlphaMap;\n      uniform sampler2D alphaMap;\n    "}}class f extends a{static getChunkName(){return"mesh_phong_diffuse_color"}static getChunk(){return"\n    vec4 diffuseColor = vec4( diffuse, opacity );\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n    vec3 totalEmissiveRadiance = emissive;\n    "}}class _ extends a{static getChunkName(){return"mesh_phong_switching_alpha_map"}static getChunk(){return"\n      if( hasAlphaMap ){\n        diffuseColor.a *= texture2D( alphaMap, mapUV ).g;\n      }\n    "}}class v extends a{static getChunkName(){return"mesh_position_varying"}static getChunk(){return"\n    #ifdef USE_MESH_POSITION\n    varying vec3 meshPosition;\n    #endif\n    "}}class C extends a{static getChunkName(){return"mesh_position_vertex"}static getChunk(){return"\n    #ifdef USE_MESH_POSITION\n    meshPosition = position;\n    #endif\n    "}}class x extends a{static registerChunk(){k.registerChunk(),M.registerChunk()}static getDefines(){return{USE_SURFACE_NORMAL:!1}}static getUniform(){return{}}}class k extends a{static getChunkName(){return"surface_normal_varying_chunk"}static getChunk(){return"\n    #ifdef USE_SURFACE_NORMAL\n      varying vec3 surfaceNormal;\n    #endif\n    "}}class M extends a{static getChunkName(){return"surface_normal_vertex_chunk"}static getChunk(){return"\n    #ifdef USE_SURFACE_NORMAL\n      surfaceNormal = normalize( transformedNormal );\n    #endif\n    "}}!function(e){e[e.vertical=4]="vertical",e[e.horizontal=3]="horizontal",e[e.radial=5]="radial"}(l||(l={}));class y extends u.BKk{constructor(e,n,t){super(t),this._opacity=1,t??={},e??="\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n//added by threejs-shader-materials\nvarying vec2 uvPosition;\n#include <mesh_position_varying>\n#include <surface_normal_varying_chunk>\n#include <__expansion_uniform_chunk>\n\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n    #include <mesh_position_vertex>\n    uvPosition = uv;\n\n    #include <uv_vertex>\n    #include <color_vertex>\n    #include <morphcolor_vertex>\n    #include <batching_vertex>\n    \n    #include <beginnormal_vertex>\n    #include <morphnormal_vertex>\n    #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n    #include <defaultnormal_vertex>\n    \n    #include <surface_normal_vertex_chunk>\n\n    #include <normal_vertex>\n    \n    #include <begin_vertex>\n    \n    #include <__expansion_vertex_chunk>\n    \n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n    #include <project_vertex>\n    #include <logdepthbuf_vertex>\n    #include <clipping_planes_vertex>\n    \n    vViewPosition = - mvPosition.xyz;\n\n    #include <worldpos_vertex>\n    #include <envmap_vertex>\n    #include <shadowmap_vertex>\n    #include <fog_vertex>\n\n}",n??="\n#define PHONG\n\n#include <mesh_phong_uniform>\n\n//added by threejs-shader-materials\n#include <mesh_position_varying>\nvarying vec2 uvPosition;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n// #include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n    #include <clipping_planes_fragment>\n    \n    #include <mesh_phong_diffuse_color>\n    \n    #include <logdepthbuf_fragment>\n    #include <__ShaderMaterial__map_fragment_begin_chunk>\n    #include <map_fragment>\n    #include <color_fragment>\n    // #include <alphamap_fragment>\n    #include <mesh_phong_switching_alpha_map>\n    #include <alphatest_fragment>\n    #include <alphahash_fragment>\n    #include <specularmap_fragment>\n    #include <normal_fragment_begin>\n    #include <normal_fragment_maps>\n    #include <emissivemap_fragment>\n\n    // accumulation\n    #include <lights_phong_fragment>\n    #include <lights_fragment_begin>\n    #include <lights_fragment_maps>\n    #include <lights_fragment_end>\n\n    // modulation\n    #include <aomap_fragment>\n\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n    \n    #include <envmap_fragment>\n    #include <opaque_fragment>\n    #include <tonemapping_fragment>\n    #include <colorspace_fragment>\n    #include <fog_fragment>\n    #include <premultiplied_alpha_fragment>\n    #include <dithering_fragment>\n\n}",this.initChunks(),this.initUniforms(),this.initDefines(),this.vertexShader=e,this.fragmentShader=n,this.initDefaultSetting(t)}static getBasicUniforms(){return u.LlO.merge([i.fCn.common,i.fCn.specularmap,i.fCn.envmap,i.fCn.aomap,i.fCn.lightmap,i.fCn.emissivemap,i.fCn.bumpmap,i.fCn.normalmap,i.fCn.displacementmap,i.fCn.gradientmap,i.fCn.fog,i.fCn.lights,{emissive:{value:new u.Q1f(0)},specular:{value:new u.Q1f(1118481)},shininess:{value:30},hasAlphaMap:{value:!1}},x.getUniform(),r.getUniform(),c.getUniform()])}initChunks(){h.registerChunk(),x.registerChunk(),r.registerChunk(),c.registerChunk()}initUniforms(){this.uniforms=u.LlO.merge([y.getBasicUniforms(),r.getUniform(),{}])}initDefines(){this.defines=Object.assign({},h.getDefines(),x.getDefines(),r.getDefines(),this.defines)}initDefaultSetting(e){this.uniformOpacity=this._opacity,this.lights=!0,null==e?.transparent&&(this.transparent=!0)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get opacity(){return this.uniformOpacity}get uniformOpacity(){return this._opacity}set opacity(e){this.uniformOpacity=e}set uniformOpacity(e){this._opacity=e,this.uniforms?.opacity&&(this.uniforms.opacity.value=e)}get emissive(){return this.uniforms.emissive.value}set emissive(e){this.uniforms.emissive.value=e}get map(){return c.getMap(this)}set map(e){c.setMap(this,e),this.onSetMap(e)}onSetMap(e){}get alphaMap(){return this.uniforms.alphaMap.value}set alphaMap(e){this.uniforms.alphaMap.value=e,this.uniforms.hasAlphaMap.value=null!=e,this.onSetAlphaMap(e)}onSetAlphaMap(e){}startGlow(){this.alphaTest=0,this.depthWrite=!1,this.blending=u.EZo}}u.BKk,u.BKk,u.BKk;var S=t(603);class U extends y{get expansionStrength(){return this.uniforms.expansionStrength.value}set expansionStrength(e){this.uniforms.expansionStrength.value=e}constructor(e){super(null,null,e)}initDefines(){super.initDefines(),this.defines.USE_EXPANSION=!0}}class w{static initColorGUI(e,n,t="color"){const i={},a=n[t];return i[t]=a.getHex(),e.addColor(i,t).onChange((e=>{a.setHex(e)})),i}static initColorNodeGUI(e,n,t="color"){const i={},a=n[t];return i[t]=a.value.getHex(),e.addColor(i,t).onChange((e=>{a.value.setHex(e)})),i}static initBasicMaterialGUI(e,n,t="Material"){const i=e.addFolder(t);return this.initMaterialFolder(i,n),i.open(),i}static initMaterialGUI(e,n,t="Material"){const i=this.initBasicMaterialGUI(e,n,t);this.initColorGUI(i,n,"emissive")}static initMaterialFolder(e,n,t=!1){this.initColorGUI(e,n),e.add(n,"transparent");const i=t?"opacity":"uniformOpacity";e.add(n,i,0,1)}static initSpriteMaterialGUI(e,n,t="Material"){const i=e.addFolder(t);this.initMaterialFolder(i,n),i.open()}static initGridMaterialGUI(e,n){this.initMaterialGUI(e,n);const t={mask:"",alphaMap:""},i=e.addFolder("WavyGridMaterial");return i.add(n,"isReversed"),i.add(n,"division",2,256).step(1),i.add(n,"divisionScaleX",0,4).step(1),i.add(t,"mask",{none:"",earth:"./textures/landmask.png"}).onChange((e=>{n.maskTexture=""===e?null:(new u.Tap).load(e)})),i.add(t,"alphaMap",{none:"",earth:"./textures/landmask.png"}).onChange((e=>{n.alphaMap=""===e?null:(new u.Tap).load(e)})),i.open(),i}static initWavyMaterialGUI(e,n){const t=this.initGridMaterialGUI(e,n).addFolder("WavyAnimation");t.add(n,"isAnimate"),t.add(n,"speed",-2,2),t.add(n,"waveFrequency",0,1),t.add(n,"wavePow",0,4),t.add(n,"direction",{horizontal:l.horizontal,vertical:l.vertical,radial:l.radial}),t.add(n,"raisedBottom",0,1),t.open()}static initAnimationGUI(e,n,t="Animation"){const i=e.addFolder(t);i.add(n,"isAnimate"),i.add(n,"speed",-2,2),i.open()}static initRimGUI(e,n,t="Rim Effect Material"){const i=e.addFolder(t);w.initColorGUI(i,n,"rimColor"),i.add(n,"rimStrength",0,4).step(.01),i.add(n,"rimPow",0,4).step(.01),w.initColorGUI(i,n,"insideColor"),i.add(n,"insideStrength",0,4).step(.01),i.add(n,"insidePow",0,8).step(.01),i.open()}static initExpansionGUI(e,n,t="ExpansionMaterial"){const i=e.addFolder("ExpansionMaterial");i.add(n,"expansionStrength",-12,12).step(.01),i.open()}static initFBMTilingGUI(e,n,t="FBM Tiling"){const i=e.addFolder("FBM Tiling");i.add(n,"tiles",1,8).step(1),i.add(n,"hashLoop",2,16).step(1),i.add(n,"amp",0,2).step(.01),i.open()}static initSkyGUI(e,n,t,i){const a={turbidity:10,rayleigh:.15,mieCoefficient:.005,mieDirectionalG:.8,inclination:.07,azimuth:.25,exposure:.75},r=4e5;function s(){const e=n.material.uniforms;e.turbidity.value=a.turbidity,e.rayleigh.value=a.rayleigh,e.mieCoefficient.value=a.mieCoefficient,e.mieDirectionalG.value=a.mieDirectionalG;const s=Math.PI*(a.inclination-.5),o=2*Math.PI*(a.azimuth-.5);t.position.x=r*Math.cos(o),t.position.y=r*Math.sin(o)*Math.sin(s),t.position.z=r*Math.sin(o)*Math.cos(s),e.sunPosition.value.copy(t.position),i.toneMappingExposure=a.exposure}s();const o=e.addFolder("Sky");o.add(a,"turbidity",1,20,.1).onChange(s),o.add(a,"rayleigh",0,4,.001).onChange(s),o.add(a,"mieCoefficient",0,.1,.001).onChange(s),o.add(a,"mieDirectionalG",0,1,.001).onChange(s),o.add(a,"inclination",0,1,1e-4).onChange(s),o.add(a,"azimuth",0,1,1e-4).onChange(s),o.add(a,"exposure",0,1,1e-4).onChange(s),o.open()}}var b=t(580),I=t(785);class O{static initScene(){return new u.Z58}static initLight(e){const n=new u.$p8(16777215,Math.PI);return e.add(n),n}static initCamera(e,n,t,i=400){const a=new u.ubm(45,n/t,1,i);return a.position.set(0,0,100),a.updateMatrixWorld(!1),e.add(a),a}static initControl(e,n){let t;null!=n&&(t=n.domElement);const i=new b.N(e,t);return i.update(),i}static initRenderer(e,n,t=0,a=!0){const r=new i.JeP({antialias:a});return r.setClearColor(new u.Q1f(t)),r.setSize(e,n),r.setPixelRatio(window.devicePixelRatio),r.domElement.style.backgroundColor="#"+t.toString(16).padStart(6,"0"),document.body.appendChild(r.domElement),console.log("three.js revision: ",u.sPf),r}static initHelper(e){const n=new u.IzY(30);e.add(n)}static initSky(e,n,t){t.toneMapping=u.FV;const i=new u.eaF(new u.Gu$(2e4,16,8),new u.V9B({color:16777215}));i.position.y=-7e5,i.visible=!1,e.add(i);const a=new I.m;a.scale.setScalar(45e3),e.add(a),w.initSkyGUI(n,a,i,t)}}var N=t(638);class G{constructor(){const e=O.initScene();e.fog=new u.jUj(0,80,160),O.initLight(e);const n=O.initCamera(e,640,480),t=O.initRenderer(640,480);O.initControl(n,t),O.initHelper(e);const i=this.initObject(e);S.w.on("tick",(i=>{t.render(e,n)})),this.initGUI(i)}initObject(e){const n=new u.HiM(65535,7e4);n.position.set(10,20,30),e.add(n);const t=new u.F1l(n);e.add(t);const i=new u.O3Y(10,4,32,32),a=new u.O3Y(10,4,32,32),r=new U({fog:void 0!==e.fog});r.color=new u.Q1f(16711680);const s=new u.eaF(i,r),o=new u.eaF(a,r);return s.position.x=-25,o.position.x=25,e.add(s),e.add(o),r}initGUI(e){const n=new N.Ay;w.initMaterialGUI(n,e),w.initExpansionGUI(n,e)}}window.onload=()=>{new G}}},t={};function i(e){var a=t[e];if(void 0!==a)return a.exports;var r=t[e]={exports:{}};return n[e](r,r.exports,i),r.exports}i.m=n,e=[],i.O=(n,t,a,r)=>{if(!t){var s=1/0;for(c=0;c<e.length;c++){for(var[t,a,r]=e[c],o=!0,l=0;l<t.length;l++)(!1&r||s>=r)&&Object.keys(i.O).every((e=>i.O[e](t[l])))?t.splice(l--,1):(o=!1,r<s&&(s=r));if(o){e.splice(c--,1);var u=a();void 0!==u&&(n=u)}}return n}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[t,a,r]},i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),i.j=357,(()=>{var e={357:0};i.O.j=n=>0===e[n];var n=(n,t)=>{var a,r,[s,o,l]=t,u=0;if(s.some((n=>0!==e[n]))){for(a in o)i.o(o,a)&&(i.m[a]=o[a]);if(l)var c=l(i)}for(n&&n(t);u<s.length;u++)r=s[u],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(c)},t=self.webpackChunk_masatomakino_threejs_shader_materials=self.webpackChunk_masatomakino_threejs_shader_materials||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var a=i.O(void 0,[121],(()=>i(721)));a=i.O(a)})();
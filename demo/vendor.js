/*! For license information please see vendor.js.LICENSE.txt */
"use strict";(self.webpackChunk_masatomakino_threejs_shader_materials=self.webpackChunk_masatomakino_threejs_shader_materials||[]).push([[121],{9:t=>{var e=Object.prototype.hasOwnProperty,i="~";function n(){}function r(t,e,i){this.fn=t,this.context=e,this.once=i||!1}function s(t,e,n,s,a){if("function"!=typeof n)throw new TypeError("The listener must be a function");var o=new r(n,s||t,a),l=i?i+e:e;return t._events[l]?t._events[l].fn?t._events[l]=[t._events[l],o]:t._events[l].push(o):(t._events[l]=o,t._eventsCount++),t}function a(t,e){0==--t._eventsCount?t._events=new n:delete t._events[e]}function o(){this._events=new n,this._eventsCount=0}Object.create&&(n.prototype=Object.create(null),(new n).__proto__||(i=!1)),o.prototype.eventNames=function(){var t,n,r=[];if(0===this._eventsCount)return r;for(n in t=this._events)e.call(t,n)&&r.push(i?n.slice(1):n);return Object.getOwnPropertySymbols?r.concat(Object.getOwnPropertySymbols(t)):r},o.prototype.listeners=function(t){var e=i?i+t:t,n=this._events[e];if(!n)return[];if(n.fn)return[n.fn];for(var r=0,s=n.length,a=new Array(s);r<s;r++)a[r]=n[r].fn;return a},o.prototype.listenerCount=function(t){var e=i?i+t:t,n=this._events[e];return n?n.fn?1:n.length:0},o.prototype.emit=function(t,e,n,r,s,a){var o=i?i+t:t;if(!this._events[o])return!1;var l,h,c=this._events[o],u=arguments.length;if(c.fn){switch(c.once&&this.removeListener(t,c.fn,void 0,!0),u){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,e),!0;case 3:return c.fn.call(c.context,e,n),!0;case 4:return c.fn.call(c.context,e,n,r),!0;case 5:return c.fn.call(c.context,e,n,r,s),!0;case 6:return c.fn.call(c.context,e,n,r,s,a),!0}for(h=1,l=new Array(u-1);h<u;h++)l[h-1]=arguments[h];c.fn.apply(c.context,l)}else{var d,p=c.length;for(h=0;h<p;h++)switch(c[h].once&&this.removeListener(t,c[h].fn,void 0,!0),u){case 1:c[h].fn.call(c[h].context);break;case 2:c[h].fn.call(c[h].context,e);break;case 3:c[h].fn.call(c[h].context,e,n);break;case 4:c[h].fn.call(c[h].context,e,n,r);break;default:if(!l)for(d=1,l=new Array(u-1);d<u;d++)l[d-1]=arguments[d];c[h].fn.apply(c[h].context,l)}}return!0},o.prototype.on=function(t,e,i){return s(this,t,e,i,!1)},o.prototype.once=function(t,e,i){return s(this,t,e,i,!0)},o.prototype.removeListener=function(t,e,n,r){var s=i?i+t:t;if(!this._events[s])return this;if(!e)return a(this,s),this;var o=this._events[s];if(o.fn)o.fn!==e||r&&!o.once||n&&o.context!==n||a(this,s);else{for(var l=0,h=[],c=o.length;l<c;l++)(o[l].fn!==e||r&&!o[l].once||n&&o[l].context!==n)&&h.push(o[l]);h.length?this._events[s]=1===h.length?h[0]:h:a(this,s)}return this},o.prototype.removeAllListeners=function(t){var e;return t?(e=i?i+t:t,this._events[e]&&a(this,e)):(this._events=new n,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=i,o.EventEmitter=o,t.exports=o},603:(t,e,i)=>{i.d(e,{w:()=>a});var n,r=i(9);class s{constructor(t,e){this.timestamp=t,this.delta=e}}class a{static initialize(){null==this._dispatcher&&(this._dispatcher=new r),this.start()}static reset(){this._dispatcher.removeAllListeners(),this.stop(),this.start()}static start(){n._id||(this._lastUpdateTimestamp=void 0,n.onTick(performance.now()))}static stop(){cancelAnimationFrame(n._id),this._id=void 0,this._lastUpdateTimestamp=void 0}static addListener(t,e){this._dispatcher.on(t,e)}static hasListener(t,e){return this._dispatcher.listeners(t).includes(e)}static removeListener(t,e){this._dispatcher.removeListener(t,e)}static emit(t,e){this._dispatcher.emit(t,e)}static emitTickEvent(t){null==n._lastUpdateTimestamp&&(n._lastUpdateTimestamp=t);const e=t-n._lastUpdateTimestamp;this._dispatcher.emit("onBeforeTick",new s(t,e)),this._dispatcher.emit("tick",new s(t,e)),this._dispatcher.emit("onAfterTick",new s(t,e)),n._lastUpdateTimestamp=t}}n=a,a.on=n.addListener,a.off=n.removeListener,a.onTick=t=>{n.emitTickEvent(t),n._id=requestAnimationFrame(n.onTick)},a.initialize()},638:(t,e,i)=>{i.d(e,{Ay:()=>_});class n{constructor(t,e,i,r,s="div"){this.parent=t,this.object=e,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(s),this.domElement.classList.add("controller"),this.domElement.classList.add(r),this.$name=document.createElement("div"),this.$name.classList.add("name"),n.nextNameID=n.nextNameID||0,this.$name.id="lil-gui-name-"+ ++n.nextNameID,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",(t=>t.stopPropagation())),this.domElement.addEventListener("keyup",(t=>t.stopPropagation())),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(t){return this._name=t,this.$name.textContent=t,this}onChange(t){return this._onChange=t,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(t=!0){return this.disable(!t)}disable(t=!0){return t===this._disabled||(this._disabled=t,this.domElement.classList.toggle("disabled",t),this.$disable.toggleAttribute("disabled",t)),this}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(t){const e=this.parent.add(this.object,this.property,t);return e.name(this._name),this.destroy(),e}min(t){return this}max(t){return this}step(t){return this}decimals(t){return this}listen(t=!0){return this._listening=t,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const t=this.save();t!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=t}getValue(){return this.object[this.property]}setValue(t){return this.getValue()!==t&&(this.object[this.property]=t,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(t){return this.setValue(t),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class r extends n{constructor(t,e,i){super(t,e,i,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",(()=>{this.setValue(this.$input.checked),this._callOnFinishChange()})),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function s(t){let e,i;return(e=t.match(/(#|0x)?([a-f0-9]{6})/i))?i=e[2]:(e=t.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?i=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=t.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(i=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),!!i&&"#"+i}const a={isPrimitive:!0,match:t=>"number"==typeof t,fromHexString:t=>parseInt(t.substring(1),16),toHexString:t=>"#"+t.toString(16).padStart(6,0)},o={isPrimitive:!1,match:t=>Array.isArray(t),fromHexString(t,e,i=1){const n=a.fromHexString(t);e[0]=(n>>16&255)/255*i,e[1]=(n>>8&255)/255*i,e[2]=(255&n)/255*i},toHexString:([t,e,i],n=1)=>a.toHexString(t*(n=255/n)<<16^e*n<<8^i*n<<0)},l={isPrimitive:!1,match:t=>Object(t)===t,fromHexString(t,e,i=1){const n=a.fromHexString(t);e.r=(n>>16&255)/255*i,e.g=(n>>8&255)/255*i,e.b=(255&n)/255*i},toHexString:({r:t,g:e,b:i},n=1)=>a.toHexString(t*(n=255/n)<<16^e*n<<8^i*n<<0)},h=[{isPrimitive:!0,match:t=>"string"==typeof t,fromHexString:s,toHexString:s},a,o,l];class c extends n{constructor(t,e,i,n){var r;super(t,e,i,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(r=this.initialValue,h.find((t=>t.match(r)))),this._rgbScale=n,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",(()=>{this._setValueFromHexString(this.$input.value)})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$text.addEventListener("input",(()=>{const t=s(this.$text.value);t&&this._setValueFromHexString(t)})),this.$text.addEventListener("focus",(()=>{this._textFocused=!0,this.$text.select()})),this.$text.addEventListener("blur",(()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()})),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(t){if(this._format.isPrimitive){const e=this._format.fromHexString(t);this.setValue(e)}else this._format.fromHexString(t,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(t){return this._setValueFromHexString(t),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class u extends n{constructor(t,e,i){super(t,e,i,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",(t=>{t.preventDefault(),this.getValue().call(this.object),this._callOnChange()})),this.$button.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$disable=this.$button}}class d extends n{constructor(t,e,i,n,r,s){super(t,e,i,"number"),this._initInput(),this.min(n),this.max(r);const a=void 0!==s;this.step(a?s:this._getImplicitStep(),a),this.updateDisplay()}decimals(t){return this._decimals=t,this.updateDisplay(),this}min(t){return this._min=t,this._onUpdateMinMax(),this}max(t){return this._max=t,this._onUpdateMinMax(),this}step(t,e=!0){return this._step=t,this._stepExplicit=e,this}updateDisplay(){const t=this.getValue();if(this._hasSlider){let e=(t-this._min)/(this._max-this._min);e=Math.max(0,Math.min(e,1)),this.$fill.style.width=100*e+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?t:t.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=t=>{const e=parseFloat(this.$input.value);isNaN(e)||(this._snapClampSetValue(e+t),this.$input.value=this.getValue())};let e,i,n,r,s,a=!1;const o=t=>{if(a){const n=t.clientX-e,r=t.clientY-i;Math.abs(r)>5?(t.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(n)>5&&l()}if(!a){const e=t.clientY-n;s-=e*this._step*this._arrowKeyMultiplier(t),r+s>this._max?s=this._max-r:r+s<this._min&&(s=this._min-r),this._snapClampSetValue(r+s)}n=t.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",o),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",(()=>{let t=parseFloat(this.$input.value);isNaN(t)||(this._stepExplicit&&(t=this._snap(t)),this.setValue(this._clamp(t)))})),this.$input.addEventListener("keydown",(e=>{"Enter"===e.key&&this.$input.blur(),"ArrowUp"===e.code&&(e.preventDefault(),t(this._step*this._arrowKeyMultiplier(e))),"ArrowDown"===e.code&&(e.preventDefault(),t(this._step*this._arrowKeyMultiplier(e)*-1))})),this.$input.addEventListener("wheel",(e=>{this._inputFocused&&(e.preventDefault(),t(this._step*this._normalizeMouseWheel(e)))}),{passive:!1}),this.$input.addEventListener("mousedown",(t=>{e=t.clientX,i=n=t.clientY,a=!0,r=this.getValue(),s=0,window.addEventListener("mousemove",o),window.addEventListener("mouseup",l)})),this.$input.addEventListener("focus",(()=>{this._inputFocused=!0})),this.$input.addEventListener("blur",(()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()}))}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const t=t=>{const e=this.$slider.getBoundingClientRect();let i=(n=t,r=e.left,s=e.right,a=this._min,(n-r)/(s-r)*(this._max-a)+a);var n,r,s,a;this._snapClampSetValue(i)},e=e=>{t(e.clientX)},i=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",e),window.removeEventListener("mouseup",i)};let n,r,s=!1;const a=e=>{e.preventDefault(),this._setDraggingStyle(!0),t(e.touches[0].clientX),s=!1},o=e=>{if(s){const t=e.touches[0].clientX-n,i=e.touches[0].clientY-r;Math.abs(t)>Math.abs(i)?a(e):(window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l))}else e.preventDefault(),t(e.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l)},h=this._callOnFinishChange.bind(this);let c;this.$slider.addEventListener("mousedown",(n=>{this._setDraggingStyle(!0),t(n.clientX),window.addEventListener("mousemove",e),window.addEventListener("mouseup",i)})),this.$slider.addEventListener("touchstart",(t=>{t.touches.length>1||(this._hasScrollBar?(n=t.touches[0].clientX,r=t.touches[0].clientY,s=!0):a(t),window.addEventListener("touchmove",o,{passive:!1}),window.addEventListener("touchend",l))}),{passive:!1}),this.$slider.addEventListener("wheel",(t=>{if(Math.abs(t.deltaX)<Math.abs(t.deltaY)&&this._hasScrollBar)return;t.preventDefault();const e=this._normalizeMouseWheel(t)*this._step;this._snapClampSetValue(this.getValue()+e),this.$input.value=this.getValue(),clearTimeout(c),c=setTimeout(h,400)}),{passive:!1})}_setDraggingStyle(t,e="horizontal"){this.$slider&&this.$slider.classList.toggle("active",t),document.body.classList.toggle("lil-gui-dragging",t),document.body.classList.toggle(`lil-gui-${e}`,t)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(t){let{deltaX:e,deltaY:i}=t;return Math.floor(t.deltaY)!==t.deltaY&&t.wheelDelta&&(e=0,i=-t.wheelDelta/120,i*=this._stepExplicit?1:10),e+-i}_arrowKeyMultiplier(t){let e=this._stepExplicit?1:10;return t.shiftKey?e*=10:t.altKey&&(e/=10),e}_snap(t){let e=0;return this._hasMin?e=this._min:this._hasMax&&(e=this._max),t-=e,t=Math.round(t/this._step)*this._step,t+=e,parseFloat(t.toPrecision(15))}_clamp(t){return t<this._min&&(t=this._min),t>this._max&&(t=this._max),t}_snapClampSetValue(t){this.setValue(this._clamp(this._snap(t)))}get _hasScrollBar(){const t=this.parent.root.$children;return t.scrollHeight>t.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class p extends n{constructor(t,e,i,n){super(t,e,i,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",(()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()})),this.$select.addEventListener("focus",(()=>{this.$display.classList.add("focus")})),this.$select.addEventListener("blur",(()=>{this.$display.classList.remove("focus")})),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(n)}options(t){return this._values=Array.isArray(t)?t:Object.values(t),this._names=Array.isArray(t)?t:Object.keys(t),this.$select.replaceChildren(),this._names.forEach((t=>{const e=document.createElement("option");e.textContent=t,this.$select.appendChild(e)})),this.updateDisplay(),this}updateDisplay(){const t=this.getValue(),e=this._values.indexOf(t);return this.$select.selectedIndex=e,this.$display.textContent=-1===e?t:this._names[e],this}}class m extends n{constructor(t,e,i){super(t,e,i,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",(()=>{this.setValue(this.$input.value)})),this.$input.addEventListener("keydown",(t=>{"Enter"===t.code&&this.$input.blur()})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}var f=700!=i.j?'.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: " ";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: "lil-gui";\n  content: "↕";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  width: 100%;\n  text-align: left;\n  background: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: "lil-gui";\n  content: "▾";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: "▸";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: "Empty";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: "lil-gui";\n  content: "✓";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  border: none;\n}\n.lil-gui .controller button {\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n}\n@media (hover: hover) {\n  .lil-gui .controller button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui .controller button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui .controller button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: "lil-gui";\n  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");\n}':null;let g=!1;class _{constructor({parent:t,autoPlace:e=void 0===t,container:i,width:n,title:r="Controls",closeFolders:s=!1,injectStyles:a=!0,touchStyles:o=!0}={}){if(this.parent=t,this.root=t?t.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("button"),this.$title.classList.add("title"),this.$title.setAttribute("aria-expanded",!0),this.$title.addEventListener("click",(()=>this.openAnimated(this._closed))),this.$title.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),o&&this.domElement.classList.add("allow-touch-styles"),!g&&a&&(function(t){const e=document.createElement("style");e.innerHTML=t;const i=document.querySelector("head link[rel=stylesheet], head style");i?document.head.insertBefore(e,i):document.head.appendChild(e)}(f),g=!0),i?i.appendChild(this.domElement):e&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),n&&this.domElement.style.setProperty("--width",n+"px"),this._closeFolders=s}add(t,e,i,n,s){if(Object(i)===i)return new p(this,t,e,i);const a=t[e];switch(typeof a){case"number":return new d(this,t,e,i,n,s);case"boolean":return new r(this,t,e);case"string":return new m(this,t,e);case"function":return new u(this,t,e)}console.error("gui.add failed\n\tproperty:",e,"\n\tobject:",t,"\n\tvalue:",a)}addColor(t,e,i=1){return new c(this,t,e,i)}addFolder(t){const e=new _({parent:this,title:t});return this.root._closeFolders&&e.close(),e}load(t,e=!0){return t.controllers&&this.controllers.forEach((e=>{e instanceof u||e._name in t.controllers&&e.load(t.controllers[e._name])})),e&&t.folders&&this.folders.forEach((e=>{e._title in t.folders&&e.load(t.folders[e._title])})),this}save(t=!0){const e={controllers:{},folders:{}};return this.controllers.forEach((t=>{if(!(t instanceof u)){if(t._name in e.controllers)throw new Error(`Cannot save GUI with duplicate property "${t._name}"`);e.controllers[t._name]=t.save()}})),t&&this.folders.forEach((t=>{if(t._title in e.folders)throw new Error(`Cannot save GUI with duplicate folder "${t._title}"`);e.folders[t._title]=t.save()})),e}open(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(t){this._closed!==t&&(this._closed=t,this._callOnOpenClose(this))}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((()=>{const e=this.$children.clientHeight;this.$children.style.height=e+"px",this.domElement.classList.add("transition");const i=t=>{t.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",i))};this.$children.addEventListener("transitionend",i);const n=t?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!t),requestAnimationFrame((()=>{this.$children.style.height=n+"px"}))})),this}title(t){return this._title=t,this.$title.textContent=t,this}reset(t=!0){return(t?this.controllersRecursive():this.controllers).forEach((t=>t.reset())),this}onChange(t){return this._onChange=t,this}_callOnChange(t){this.parent&&this.parent._callOnChange(t),void 0!==this._onChange&&this._onChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(t){this.parent&&this.parent._callOnFinishChange(t),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onOpenClose(t){return this._onOpenClose=t,this}_callOnOpenClose(t){this.parent&&this.parent._callOnOpenClose(t),void 0!==this._onOpenClose&&this._onOpenClose.call(this,t)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((t=>t.destroy()))}controllersRecursive(){let t=Array.from(this.controllers);return this.folders.forEach((e=>{t=t.concat(e.controllersRecursive())})),t}foldersRecursive(){let t=Array.from(this.folders);return this.folders.forEach((e=>{t=t.concat(e.foldersRecursive())})),t}}},753:(t,e,i)=>{i.d(e,{$EB:()=>c,$p8:()=>dl,BKk:()=>Hn,DXC:()=>No,EZo:()=>u,F1l:()=>bl,FV:()=>v,GJx:()=>A,Gu$:()=>Fo,H2z:()=>Ml,HiM:()=>ul,Ho_:()=>Po,I9Y:()=>le,IzY:()=>Tl,JeP:()=>Ya,LlO:()=>Gn,O3Y:()=>Oo,PTz:()=>Be,Pq0:()=>Fe,Q1f:()=>an,RlV:()=>di,TDQ:()=>Bo,Tap:()=>el,UPV:()=>zo,V9B:()=>cn,YHV:()=>vl,Z58:()=>Za,ZM4:()=>Sl,Zcv:()=>ir,bdM:()=>lr,cj9:()=>oe,dwI:()=>he,eaF:()=>Bn,fCn:()=>cr,hsX:()=>h,iNn:()=>On,jUj:()=>Ka,kBv:()=>r,kxk:()=>go,sPf:()=>n,ubm:()=>qn,vxI:()=>hr,wtR:()=>s});const n="170",r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},s={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},a=1,o=2,l=3,h=1,c=2,u=2,d=100,p=0,m=1,f=2,g=0,_=1,y=2,x=3,v=4,b=5,S=6,T=7,M=301,E=302,w=306,A=1e3,R=1001,C=1002,N=1003,P=1005,I=1006,U=1007,L=1008,D=1009,B=1010,F=1011,O=1012,z=1013,k=1014,V=1015,G=1016,H=1017,W=1018,j=1020,X=35902,$=1021,q=1022,Y=1023,K=1024,Z=1025,J=1026,Q=1027,tt=1028,et=1029,it=1030,nt=1031,rt=1033,st=33776,at=33777,ot=33778,lt=33779,ht=35840,ct=35841,ut=35842,dt=35843,pt=36196,mt=37492,ft=37496,gt=37808,_t=37809,yt=37810,xt=37811,vt=37812,bt=37813,St=37814,Tt=37815,Mt=37816,Et=37817,wt=37818,At=37819,Rt=37820,Ct=37821,Nt=36492,Pt=36494,It=36495,Ut=36283,Lt=36284,Dt=36285,Bt=36286,Ft=2300,Ot=2301,zt=2302,kt="",Vt="srgb",Gt="srgb-linear",Ht="linear",Wt="srgb",jt=7680,Xt=35044,$t="300 es",qt=2e3,Yt=2001;class Kt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const Zt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Jt=1234567;const Qt=Math.PI/180,te=180/Math.PI;function ee(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Zt[255&t]+Zt[t>>8&255]+Zt[t>>16&255]+Zt[t>>24&255]+"-"+Zt[255&e]+Zt[e>>8&255]+"-"+Zt[e>>16&15|64]+Zt[e>>24&255]+"-"+Zt[63&i|128]+Zt[i>>8&255]+"-"+Zt[i>>16&255]+Zt[i>>24&255]+Zt[255&n]+Zt[n>>8&255]+Zt[n>>16&255]+Zt[n>>24&255]).toLowerCase()}function ie(t,e,i){return Math.max(e,Math.min(i,t))}function ne(t,e){return(t%e+e)%e}function re(t,e,i){return(1-i)*t+i*e}function se(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function ae(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const oe={DEG2RAD:Qt,RAD2DEG:te,generateUUID:ee,clamp:ie,euclideanModulo:ne,mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:re,damp:function(t,e,i,n){return re(t,e,1-Math.exp(-i*n))},pingpong:function(t,e=1){return e-Math.abs(ne(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(Jt=t);let e=Jt+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*Qt},radToDeg:function(t){return t*te},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,i,n,r){const s=Math.cos,a=Math.sin,o=s(i/2),l=a(i/2),h=s((e+n)/2),c=a((e+n)/2),u=s((e-n)/2),d=a((e-n)/2),p=s((n-e)/2),m=a((n-e)/2);switch(r){case"XYX":t.set(o*c,l*u,l*d,o*h);break;case"YZY":t.set(l*d,o*c,l*u,o*h);break;case"ZXZ":t.set(l*u,l*d,o*c,o*h);break;case"XZX":t.set(o*c,l*m,l*p,o*h);break;case"YXY":t.set(l*p,o*c,l*m,o*h);break;case"ZYZ":t.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:ae,denormalize:se};class le{constructor(t=0,e=0){le.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(ie(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*i-s*n+t.x,this.y=r*n+s*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class he{constructor(t,e,i,n,r,s,a,o,l){he.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,i,n,r,s,a,o,l)}set(t,e,i,n,r,s,a,o,l){const h=this.elements;return h[0]=t,h[1]=n,h[2]=a,h[3]=e,h[4]=r,h[5]=o,h[6]=i,h[7]=s,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],h=i[4],c=i[7],u=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],_=n[1],y=n[4],x=n[7],v=n[2],b=n[5],S=n[8];return r[0]=s*m+a*_+o*v,r[3]=s*f+a*y+o*b,r[6]=s*g+a*x+o*S,r[1]=l*m+h*_+c*v,r[4]=l*f+h*y+c*b,r[7]=l*g+h*x+c*S,r[2]=u*m+d*_+p*v,r[5]=u*f+d*y+p*b,r[8]=u*g+d*x+p*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8];return e*s*h-e*a*l-i*r*h+i*a*o+n*r*l-n*s*o}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=h*s-a*l,u=a*o-h*r,d=l*r-s*o,p=e*c+i*u+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=c*m,t[1]=(n*l-h*i)*m,t[2]=(a*i-n*s)*m,t[3]=u*m,t[4]=(h*e-n*o)*m,t[5]=(n*r-a*e)*m,t[6]=d*m,t[7]=(i*o-l*e)*m,t[8]=(s*e-i*r)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+t,-n*l,n*o,-n*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(ce.makeScale(t,e)),this}rotate(t){return this.premultiply(ce.makeRotation(-t)),this}translate(t,e){return this.premultiply(ce.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const ce=new he;function ue(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function de(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function pe(){const t=de("canvas");return t.style.display="block",t}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const me={};function fe(t){t in me||(me[t]=!0,console.warn(t))}const ge={enabled:!0,workingColorSpace:Gt,spaces:{},convert:function(t,e,i){return!1!==this.enabled&&e!==i&&e&&i?(this.spaces[e].transfer===Wt&&(t.r=_e(t.r),t.g=_e(t.g),t.b=_e(t.b)),this.spaces[e].primaries!==this.spaces[i].primaries&&(t.applyMatrix3(this.spaces[e].toXYZ),t.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===Wt&&(t.r=ye(t.r),t.g=ye(t.g),t.b=ye(t.b)),t):t},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return t===kt?Ht:this.spaces[t].transfer},getLuminanceCoefficients:function(t,e=this.workingColorSpace){return t.fromArray(this.spaces[e].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,e,i){return t.copy(this.spaces[e].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace}};function _e(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function ye(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const xe=[.64,.33,.3,.6,.15,.06],ve=[.2126,.7152,.0722],be=[.3127,.329],Se=(new he).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Te=(new he).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);let Me;ge.define({[Gt]:{primaries:xe,whitePoint:be,transfer:Ht,toXYZ:Se,fromXYZ:Te,luminanceCoefficients:ve,workingColorSpaceConfig:{unpackColorSpace:Vt},outputColorSpaceConfig:{drawingBufferColorSpace:Vt}},[Vt]:{primaries:xe,whitePoint:be,transfer:Wt,toXYZ:Se,fromXYZ:Te,luminanceCoefficients:ve,outputColorSpaceConfig:{drawingBufferColorSpace:Vt}}});class Ee{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Me&&(Me=de("canvas")),Me.width=t.width,Me.height=t.height;const i=Me.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Me}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=de("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),r=n.data;for(let t=0;t<r.length;t++)r[t]=255*_e(r[t]/255);return i.putImageData(n,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*_e(e[t]/255)):e[t]=_e(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let we=0;class Ae{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:we++}),this.uuid=ee(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)n[e].isDataTexture?t.push(Re(n[e].image)):t.push(Re(n[e]))}else t=Re(n);i.url=t}return e||(t.images[this.uuid]=i),i}}function Re(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Ee.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ce=0;class Ne extends Kt{constructor(t=Ne.DEFAULT_IMAGE,e=Ne.DEFAULT_MAPPING,i=1001,n=1001,r=1006,s=1008,a=Y,o=D,l=Ne.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ce++}),this.uuid=ee(),this.name="",this.source=new Ae(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new he,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case A:t.x=t.x-Math.floor(t.x);break;case R:t.x=t.x<0?0:1;break;case C:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case A:t.y=t.y-Math.floor(t.y);break;case R:t.y=t.y<0?0:1;break;case C:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Ne.DEFAULT_IMAGE=null,Ne.DEFAULT_MAPPING=300,Ne.DEFAULT_ANISOTROPY=1;class Pe{constructor(t=0,e=0,i=0,n=1){Pe.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*e+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*e+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*e+s[7]*i+s[11]*n+s[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,r;const s=.01,a=.1,o=t.elements,l=o[0],h=o[4],c=o[8],u=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(h-u)<s&&Math.abs(c-m)<s&&Math.abs(p-f)<s){if(Math.abs(h+u)<a&&Math.abs(c+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,_=(g+1)/2,y=(h+u)/4,x=(c+m)/4,v=(p+f)/4;return t>o&&t>_?t<s?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(t),n=y/i,r=x/i):o>_?o<s?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(o),i=y/n,r=v/n):_<s?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(_),i=x/r,n=v/r),this.set(i,n,r,e),this}let _=Math.sqrt((f-p)*(f-p)+(c-m)*(c-m)+(u-h)*(u-h));return Math.abs(_)<.001&&(_=1),this.x=(f-p)/_,this.y=(c-m)/_,this.z=(u-h)/_,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ie extends Kt{constructor(t=1,e=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Pe(0,0,t,e),this.scissorTest=!1,this.viewport=new Pe(0,0,t,e);const n={width:t,height:e,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:I,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const r=new Ne(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const s=i.count;for(let t=0;t<s;t++)this.textures[t]=r.clone(),this.textures[t].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=t,this.textures[n].image.height=e,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,i=t.textures.length;e<i;e++)this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Ae(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ue extends Ie{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class Le extends Ne{constructor(t=null,e=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=N,this.minFilter=N,this.wrapR=R,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class De extends Ne{constructor(t=null,e=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=N,this.minFilter=N,this.wrapR=R,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Be{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,r,s,a){let o=i[n+0],l=i[n+1],h=i[n+2],c=i[n+3];const u=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=h,void(t[e+3]=c);if(1===a)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(c!==m||o!==u||l!==d||h!==p){let t=1-a;const e=o*u+l*d+h*p+c*m,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const r=Math.sqrt(n),s=Math.atan2(r,e*i);t=Math.sin(t*s)/r,a=Math.sin(a*s)/r}const r=a*i;if(o=o*t+u*r,l=l*t+d*r,h=h*t+p*r,c=c*t+m*r,t===1-a){const t=1/Math.sqrt(o*o+l*l+h*h+c*c);o*=t,l*=t,h*=t,c*=t}}t[e]=o,t[e+1]=l,t[e+2]=h,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,n,r,s){const a=i[n],o=i[n+1],l=i[n+2],h=i[n+3],c=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=a*p+h*c+o*d-l*u,t[e+1]=o*p+h*u+l*c-a*d,t[e+2]=l*p+h*d+a*u-o*c,t[e+3]=h*p-a*c-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,n=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(i/2),h=a(n/2),c=a(r/2),u=o(i/2),d=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],h=e[6],c=e[10],u=i+a+c;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(h-o)*t,this._y=(r-l)*t,this._z=(s-n)*t}else if(i>a&&i>c){const t=2*Math.sqrt(1+i-a-c);this._w=(h-o)/t,this._x=.25*t,this._y=(n+s)/t,this._z=(r+l)/t}else if(a>c){const t=2*Math.sqrt(1+a-i-c);this._w=(r-l)/t,this._x=(n+s)/t,this._y=.25*t,this._z=(o+h)/t}else{const t=2*Math.sqrt(1+c-i-a);this._w=(s-n)/t,this._x=(r+l)/t,this._y=(o+h)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ie(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,h=e._w;return this._x=i*h+s*a+n*l-r*o,this._y=n*h+s*o+r*a-i*l,this._z=r*h+s*l+i*o-n*a,this._w=s*h-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,r=this._z,s=this._w;let a=s*t._w+i*t._x+n*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const l=Math.sqrt(o),h=Math.atan2(l,a),c=Math.sin((1-e)*h)/l,u=Math.sin(e*h)/l;return this._w=s*c+this._w*u,this._x=i*c+this._x*u,this._y=n*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(t),n*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Fe{constructor(t=0,e=0,i=0){Fe.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ze.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ze.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=t.elements,s=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=2*(s*n-a*i),h=2*(a*e-r*n),c=2*(r*i-s*e);return this.x=e+o*l+s*c-a*h,this.y=i+o*h+a*l-r*c,this.z=n+o*c+r*h-s*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Oe.copy(this).projectOnVector(t),this.sub(Oe)}reflect(t){return this.sub(Oe.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(ie(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Oe=new Fe,ze=new Be;class ke{constructor(t=new Fe(1/0,1/0,1/0),e=new Fe(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(Ge.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(Ge.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=Ge.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i){const n=i.getAttribute("position");if(!0===e&&void 0!==n&&!0!==t.isInstancedMesh)for(let e=0,i=n.count;e<i;e++)!0===t.isMesh?t.getVertexPosition(e,Ge):Ge.fromBufferAttribute(n,e),Ge.applyMatrix4(t.matrixWorld),this.expandByPoint(Ge);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),He.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),He.copy(i.boundingBox)),He.applyMatrix4(t.matrixWorld),this.union(He)}const n=t.children;for(let t=0,i=n.length;t<i;t++)this.expandByObject(n[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Ge),Ge.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ke),Ze.subVectors(this.max,Ke),We.subVectors(t.a,Ke),je.subVectors(t.b,Ke),Xe.subVectors(t.c,Ke),$e.subVectors(je,We),qe.subVectors(Xe,je),Ye.subVectors(We,Xe);let e=[0,-$e.z,$e.y,0,-qe.z,qe.y,0,-Ye.z,Ye.y,$e.z,0,-$e.x,qe.z,0,-qe.x,Ye.z,0,-Ye.x,-$e.y,$e.x,0,-qe.y,qe.x,0,-Ye.y,Ye.x,0];return!!ti(e,We,je,Xe,Ze)&&(e=[1,0,0,0,1,0,0,0,1],!!ti(e,We,je,Xe,Ze)&&(Je.crossVectors($e,qe),e=[Je.x,Je.y,Je.z],ti(e,We,je,Xe,Ze)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Ge).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(Ge).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ve[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ve[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ve[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ve[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ve[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ve[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ve[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ve[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ve)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Ve=[new Fe,new Fe,new Fe,new Fe,new Fe,new Fe,new Fe,new Fe],Ge=new Fe,He=new ke,We=new Fe,je=new Fe,Xe=new Fe,$e=new Fe,qe=new Fe,Ye=new Fe,Ke=new Fe,Ze=new Fe,Je=new Fe,Qe=new Fe;function ti(t,e,i,n,r){for(let s=0,a=t.length-3;s<=a;s+=3){Qe.fromArray(t,s);const a=r.x*Math.abs(Qe.x)+r.y*Math.abs(Qe.y)+r.z*Math.abs(Qe.z),o=e.dot(Qe),l=i.dot(Qe),h=n.dot(Qe);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>a)return!1}return!0}const ei=new ke,ii=new Fe,ni=new Fe;class ri{constructor(t=new Fe,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):ei.setFromPoints(t).getCenter(i);let n=0;for(let e=0,r=t.length;e<r;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ii.subVectors(t,this.center);const e=ii.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.addScaledVector(ii,i/t),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(ni.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ii.copy(t.center).add(ni)),this.expandByPoint(ii.copy(t.center).sub(ni))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const si=new Fe,ai=new Fe,oi=new Fe,li=new Fe,hi=new Fe,ci=new Fe,ui=new Fe;class di{constructor(t=new Fe,e=new Fe(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,si)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=si.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(si.copy(this.origin).addScaledVector(this.direction,e),si.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){ai.copy(t).add(e).multiplyScalar(.5),oi.copy(e).sub(t).normalize(),li.copy(this.origin).sub(ai);const r=.5*t.distanceTo(e),s=-this.direction.dot(oi),a=li.dot(this.direction),o=-li.dot(oi),l=li.lengthSq(),h=Math.abs(1-s*s);let c,u,d,p;if(h>0)if(c=s*o-a,u=s*a-o,p=r*h,c>=0)if(u>=-p)if(u<=p){const t=1/h;c*=t,u*=t,d=c*(c+s*u+2*a)+u*(s*c+u+2*o)+l}else u=r,c=Math.max(0,-(s*u+a)),d=-c*c+u*(u+2*o)+l;else u=-r,c=Math.max(0,-(s*u+a)),d=-c*c+u*(u+2*o)+l;else u<=-p?(c=Math.max(0,-(-s*r+a)),u=c>0?-r:Math.min(Math.max(-r,-o),r),d=-c*c+u*(u+2*o)+l):u<=p?(c=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(c=Math.max(0,-(s*r+a)),u=c>0?r:Math.min(Math.max(-r,-o),r),d=-c*c+u*(u+2*o)+l);else u=s>0?-r:r,c=Math.max(0,-(s*u+a)),d=-c*c+u*(u+2*o)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,c),n&&n.copy(ai).addScaledVector(oi,u),d}intersectSphere(t,e){si.subVectors(t.center,this.origin);const i=si.dot(this.direction),n=si.dot(si)-i*i,r=t.radius*t.radius;if(n>r)return null;const s=Math.sqrt(r-n),a=i-s,o=i+s;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,r,s,a,o;const l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return l>=0?(i=(t.min.x-u.x)*l,n=(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,n=(t.min.x-u.x)*l),h>=0?(r=(t.min.y-u.y)*h,s=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,s=(t.min.y-u.y)*h),i>s||r>n?null:((r>i||isNaN(i))&&(i=r),(s<n||isNaN(n))&&(n=s),c>=0?(a=(t.min.z-u.z)*c,o=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,o=(t.min.z-u.z)*c),i>o||a>n?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,si)}intersectTriangle(t,e,i,n,r){hi.subVectors(e,t),ci.subVectors(i,t),ui.crossVectors(hi,ci);let s,a=this.direction.dot(ui);if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}li.subVectors(this.origin,t);const o=s*this.direction.dot(ci.crossVectors(li,ci));if(o<0)return null;const l=s*this.direction.dot(hi.cross(li));if(l<0)return null;if(o+l>a)return null;const h=-s*li.dot(ui);return h<0?null:this.at(h/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class pi{constructor(t,e,i,n,r,s,a,o,l,h,c,u,d,p,m,f){pi.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,i,n,r,s,a,o,l,h,c,u,d,p,m,f)}set(t,e,i,n,r,s,a,o,l,h,c,u,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new pi).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/mi.setFromMatrixColumn(t,0).length(),r=1/mi.setFromMatrixColumn(t,1).length(),s=1/mi.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*s,e[9]=i[9]*s,e[10]=i[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,r=t.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),h=Math.cos(r),c=Math.sin(r);if("XYZ"===t.order){const t=s*h,i=s*c,n=a*h,r=a*c;e[0]=o*h,e[4]=-o*c,e[8]=l,e[1]=i+n*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=n+i*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*h,i=o*c,n=l*h,r=l*c;e[0]=t+r*a,e[4]=n*a-i,e[8]=s*l,e[1]=s*c,e[5]=s*h,e[9]=-a,e[2]=i*a-n,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*h,i=o*c,n=l*h,r=l*c;e[0]=t-r*a,e[4]=-s*c,e[8]=n+i*a,e[1]=i+n*a,e[5]=s*h,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*h,i=s*c,n=a*h,r=a*c;e[0]=o*h,e[4]=n*l-i,e[8]=t*l+r,e[1]=o*c,e[5]=r*l+t,e[9]=i*l-n,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*h,e[4]=r-t*c,e[8]=n*c+i,e[1]=c,e[5]=s*h,e[9]=-a*h,e[2]=-l*h,e[6]=i*c+n,e[10]=t-r*c}else if("XZY"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*h,e[4]=-c,e[8]=l*h,e[1]=t*c+r,e[5]=s*h,e[9]=i*c-n,e[2]=n*c-i,e[6]=a*h,e[10]=r*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(gi,t,_i)}lookAt(t,e,i){const n=this.elements;return vi.subVectors(t,e),0===vi.lengthSq()&&(vi.z=1),vi.normalize(),yi.crossVectors(i,vi),0===yi.lengthSq()&&(1===Math.abs(i.z)?vi.x+=1e-4:vi.z+=1e-4,vi.normalize(),yi.crossVectors(i,vi)),yi.normalize(),xi.crossVectors(vi,yi),n[0]=yi.x,n[4]=xi.x,n[8]=vi.x,n[1]=yi.y,n[5]=xi.y,n[9]=vi.y,n[2]=yi.z,n[6]=xi.z,n[10]=vi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],_=i[3],y=i[7],x=i[11],v=i[15],b=n[0],S=n[4],T=n[8],M=n[12],E=n[1],w=n[5],A=n[9],R=n[13],C=n[2],N=n[6],P=n[10],I=n[14],U=n[3],L=n[7],D=n[11],B=n[15];return r[0]=s*b+a*E+o*C+l*U,r[4]=s*S+a*w+o*N+l*L,r[8]=s*T+a*A+o*P+l*D,r[12]=s*M+a*R+o*I+l*B,r[1]=h*b+c*E+u*C+d*U,r[5]=h*S+c*w+u*N+d*L,r[9]=h*T+c*A+u*P+d*D,r[13]=h*M+c*R+u*I+d*B,r[2]=p*b+m*E+f*C+g*U,r[6]=p*S+m*w+f*N+g*L,r[10]=p*T+m*A+f*P+g*D,r[14]=p*M+m*R+f*I+g*B,r[3]=_*b+y*E+x*C+v*U,r[7]=_*S+y*w+x*N+v*L,r[11]=_*T+y*A+x*P+v*D,r[15]=_*M+y*R+x*I+v*B,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],h=t[2],c=t[6],u=t[10],d=t[14];return t[3]*(+r*o*c-n*l*c-r*a*u+i*l*u+n*a*d-i*o*d)+t[7]*(+e*o*d-e*l*u+r*s*u-n*s*d+n*l*h-r*o*h)+t[11]*(+e*l*c-e*a*d-r*s*c+i*s*d+r*a*h-i*l*h)+t[15]*(-n*a*h-e*o*c+e*a*u+n*s*c-i*s*u+i*o*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=t[9],u=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],_=c*f*l-m*u*l+m*o*d-a*f*d-c*o*g+a*u*g,y=p*u*l-h*f*l-p*o*d+s*f*d+h*o*g-s*u*g,x=h*m*l-p*c*l+p*a*d-s*m*d-h*a*g+s*c*g,v=p*c*o-h*m*o-p*a*u+s*m*u+h*a*f-s*c*f,b=e*_+i*y+n*x+r*v;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/b;return t[0]=_*S,t[1]=(m*u*r-c*f*r-m*n*d+i*f*d+c*n*g-i*u*g)*S,t[2]=(a*f*r-m*o*r+m*n*l-i*f*l-a*n*g+i*o*g)*S,t[3]=(c*o*r-a*u*r-c*n*l+i*u*l+a*n*d-i*o*d)*S,t[4]=y*S,t[5]=(h*f*r-p*u*r+p*n*d-e*f*d-h*n*g+e*u*g)*S,t[6]=(p*o*r-s*f*r-p*n*l+e*f*l+s*n*g-e*o*g)*S,t[7]=(s*u*r-h*o*r+h*n*l-e*u*l-s*n*d+e*o*d)*S,t[8]=x*S,t[9]=(p*c*r-h*m*r-p*i*d+e*m*d+h*i*g-e*c*g)*S,t[10]=(s*m*r-p*a*r+p*i*l-e*m*l-s*i*g+e*a*g)*S,t[11]=(h*a*r-s*c*r-h*i*l+e*c*l+s*i*d-e*a*d)*S,t[12]=v*S,t[13]=(h*m*n-p*c*n+p*i*u-e*m*u-h*i*f+e*c*f)*S,t[14]=(p*a*n-s*m*n-p*i*o+e*m*o+s*i*f-e*a*f)*S,t[15]=(s*c*n-h*a*n+h*i*o-e*c*o-s*i*u+e*a*u)*S,this}scale(t){const e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),r=1-i,s=t.x,a=t.y,o=t.z,l=r*s,h=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,h*a+i,h*o-n*s,0,l*o-n*a,h*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,r,s){return this.set(1,i,r,0,t,1,s,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,h=s+s,c=a+a,u=r*l,d=r*h,p=r*c,m=s*h,f=s*c,g=a*c,_=o*l,y=o*h,x=o*c,v=i.x,b=i.y,S=i.z;return n[0]=(1-(m+g))*v,n[1]=(d+x)*v,n[2]=(p-y)*v,n[3]=0,n[4]=(d-x)*b,n[5]=(1-(u+g))*b,n[6]=(f+_)*b,n[7]=0,n[8]=(p+y)*S,n[9]=(f-_)*S,n[10]=(1-(u+m))*S,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let r=mi.set(n[0],n[1],n[2]).length();const s=mi.set(n[4],n[5],n[6]).length(),a=mi.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],fi.copy(this);const o=1/r,l=1/s,h=1/a;return fi.elements[0]*=o,fi.elements[1]*=o,fi.elements[2]*=o,fi.elements[4]*=l,fi.elements[5]*=l,fi.elements[6]*=l,fi.elements[8]*=h,fi.elements[9]*=h,fi.elements[10]*=h,e.setFromRotationMatrix(fi),i.x=r,i.y=s,i.z=a,this}makePerspective(t,e,i,n,r,s,a=2e3){const o=this.elements,l=2*r/(e-t),h=2*r/(i-n),c=(e+t)/(e-t),u=(i+n)/(i-n);let d,p;if(a===qt)d=-(s+r)/(s-r),p=-2*s*r/(s-r);else{if(a!==Yt)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-s/(s-r),p=-s*r/(s-r)}return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=h,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,i,n,r,s,a=2e3){const o=this.elements,l=1/(e-t),h=1/(i-n),c=1/(s-r),u=(e+t)*l,d=(i+n)*h;let p,m;if(a===qt)p=(s+r)*c,m=-2*c;else{if(a!==Yt)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=r*c,m=-1*c}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=m,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const mi=new Fe,fi=new pi,gi=new Fe(0,0,0),_i=new Fe(1,1,1),yi=new Fe,xi=new Fe,vi=new Fe,bi=new pi,Si=new Be;class Ti{constructor(t=0,e=0,i=0,n=Ti.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],h=n[9],c=n[2],u=n[6],d=n[10];switch(e){case"XYZ":this._y=Math.asin(ie(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ie(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(ie(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-ie(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(ie(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-ie(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return bi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(bi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Si.setFromEuler(this),this.setFromQuaternion(Si,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ti.DEFAULT_ORDER="XYZ";class Mi{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let Ei=0;const wi=new Fe,Ai=new Be,Ri=new pi,Ci=new Fe,Ni=new Fe,Pi=new Fe,Ii=new Be,Ui=new Fe(1,0,0),Li=new Fe(0,1,0),Di=new Fe(0,0,1),Bi={type:"added"},Fi={type:"removed"},Oi={type:"childadded",child:null},zi={type:"childremoved",child:null};class ki extends Kt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ei++}),this.uuid=ee(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ki.DEFAULT_UP.clone();const t=new Fe,e=new Ti,i=new Be,n=new Fe(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new pi},normalMatrix:{value:new he}}),this.matrix=new pi,this.matrixWorld=new pi,this.matrixAutoUpdate=ki.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ki.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Mi,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ai.setFromAxisAngle(t,e),this.quaternion.multiply(Ai),this}rotateOnWorldAxis(t,e){return Ai.setFromAxisAngle(t,e),this.quaternion.premultiply(Ai),this}rotateX(t){return this.rotateOnAxis(Ui,t)}rotateY(t){return this.rotateOnAxis(Li,t)}rotateZ(t){return this.rotateOnAxis(Di,t)}translateOnAxis(t,e){return wi.copy(t).applyQuaternion(this.quaternion),this.position.add(wi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ui,t)}translateY(t){return this.translateOnAxis(Li,t)}translateZ(t){return this.translateOnAxis(Di,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ri.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Ci.copy(t):Ci.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Ni.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ri.lookAt(Ni,Ci,this.up):Ri.lookAt(Ci,Ni,this.up),this.quaternion.setFromRotationMatrix(Ri),n&&(Ri.extractRotation(n.matrixWorld),Ai.setFromRotationMatrix(Ri),this.quaternion.premultiply(Ai.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Bi),Oi.child=t,this.dispatchEvent(Oi),Oi.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Fi),zi.child=t,this.dispatchEvent(zi),zi.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ri.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ri.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ri),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Bi),Oi.child=t,this.dispatchEvent(Oi),Oi.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const n=this.children;for(let r=0,s=n.length;r<s;r++)n[r].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ni,t,Pi),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ni,Ii,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(n.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),null!==this.boundingBox&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];r(t.shapes,n)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(r(t.materials,this.material[i]));n.material=e}else n.material=r(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(r(t.animations,i))}}if(e){const e=s(t.geometries),n=s(t.materials),r=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),h=s(t.animations),c=s(t.nodes);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),h.length>0&&(i.animations=h),c.length>0&&(i.nodes=c)}return i.object=n,i;function s(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}ki.DEFAULT_UP=new Fe(0,1,0),ki.DEFAULT_MATRIX_AUTO_UPDATE=!0,ki.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Vi=new Fe,Gi=new Fe,Hi=new Fe,Wi=new Fe,ji=new Fe,Xi=new Fe,$i=new Fe,qi=new Fe,Yi=new Fe,Ki=new Fe,Zi=new Pe,Ji=new Pe,Qi=new Pe;class tn{constructor(t=new Fe,e=new Fe,i=new Fe){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),Vi.subVectors(t,e),n.cross(Vi);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(t,e,i,n,r){Vi.subVectors(n,e),Gi.subVectors(i,e),Hi.subVectors(t,e);const s=Vi.dot(Vi),a=Vi.dot(Gi),o=Vi.dot(Hi),l=Gi.dot(Gi),h=Gi.dot(Hi),c=s*l-a*a;if(0===c)return r.set(0,0,0),null;const u=1/c,d=(l*o-a*h)*u,p=(s*h-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,i,n){return null!==this.getBarycoord(t,e,i,n,Wi)&&Wi.x>=0&&Wi.y>=0&&Wi.x+Wi.y<=1}static getInterpolation(t,e,i,n,r,s,a,o){return null===this.getBarycoord(t,e,i,n,Wi)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,Wi.x),o.addScaledVector(s,Wi.y),o.addScaledVector(a,Wi.z),o)}static getInterpolatedAttribute(t,e,i,n,r,s){return Zi.setScalar(0),Ji.setScalar(0),Qi.setScalar(0),Zi.fromBufferAttribute(t,e),Ji.fromBufferAttribute(t,i),Qi.fromBufferAttribute(t,n),s.setScalar(0),s.addScaledVector(Zi,r.x),s.addScaledVector(Ji,r.y),s.addScaledVector(Qi,r.z),s}static isFrontFacing(t,e,i,n){return Vi.subVectors(i,e),Gi.subVectors(t,e),Vi.cross(Gi).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Vi.subVectors(this.c,this.b),Gi.subVectors(this.a,this.b),.5*Vi.cross(Gi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return tn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return tn.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,n,r){return tn.getInterpolation(t,this.a,this.b,this.c,e,i,n,r)}containsPoint(t){return tn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return tn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,r=this.c;let s,a;ji.subVectors(n,i),Xi.subVectors(r,i),qi.subVectors(t,i);const o=ji.dot(qi),l=Xi.dot(qi);if(o<=0&&l<=0)return e.copy(i);Yi.subVectors(t,n);const h=ji.dot(Yi),c=Xi.dot(Yi);if(h>=0&&c<=h)return e.copy(n);const u=o*c-h*l;if(u<=0&&o>=0&&h<=0)return s=o/(o-h),e.copy(i).addScaledVector(ji,s);Ki.subVectors(t,r);const d=ji.dot(Ki),p=Xi.dot(Ki);if(p>=0&&d<=p)return e.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(Xi,a);const f=h*p-d*c;if(f<=0&&c-h>=0&&d-p>=0)return $i.subVectors(r,n),a=(c-h)/(c-h+(d-p)),e.copy(n).addScaledVector($i,a);const g=1/(f+m+u);return s=m*g,a=u*g,e.copy(i).addScaledVector(ji,s).addScaledVector(Xi,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const en={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},nn={h:0,s:0,l:0},rn={h:0,s:0,l:0};function sn(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}class an{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(void 0===e&&void 0===i){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Vt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,ge.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n=ge.workingColorSpace){return this.r=t,this.g=e,this.b=i,ge.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n=ge.workingColorSpace){if(t=ne(t,1),e=ie(e,0,1),i=ie(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=sn(r,n,t+1/3),this.g=sn(r,n,t),this.b=sn(r,n,t-1/3)}return ge.toWorkingColorSpace(this,n),this}setStyle(t,e=Vt){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const s=n[1],a=n[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const i=n[1],r=i.length;if(3===r)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,e);if(6===r)return this.setHex(parseInt(i,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Vt){const i=en[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=_e(t.r),this.g=_e(t.g),this.b=_e(t.b),this}copyLinearToSRGB(t){return this.r=ye(t.r),this.g=ye(t.g),this.b=ye(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Vt){return ge.fromWorkingColorSpace(on.copy(this),t),65536*Math.round(ie(255*on.r,0,255))+256*Math.round(ie(255*on.g,0,255))+Math.round(ie(255*on.b,0,255))}getHexString(t=Vt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ge.workingColorSpace){ge.fromWorkingColorSpace(on.copy(this),e);const i=on.r,n=on.g,r=on.b,s=Math.max(i,n,r),a=Math.min(i,n,r);let o,l;const h=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=h<=.5?t/(s+a):t/(2-s-a),s){case i:o=(n-r)/t+(n<r?6:0);break;case n:o=(r-i)/t+2;break;case r:o=(i-n)/t+4}o/=6}return t.h=o,t.s=l,t.l=h,t}getRGB(t,e=ge.workingColorSpace){return ge.fromWorkingColorSpace(on.copy(this),e),t.r=on.r,t.g=on.g,t.b=on.b,t}getStyle(t=Vt){ge.fromWorkingColorSpace(on.copy(this),t);const e=on.r,i=on.g,n=on.b;return t!==Vt?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*i)},${Math.round(255*n)})`}offsetHSL(t,e,i){return this.getHSL(nn),this.setHSL(nn.h+t,nn.s+e,nn.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(nn),t.getHSL(rn);const i=re(nn.h,rn.h,e),n=re(nn.s,rn.s,e),r=re(nn.l,rn.l,e);return this.setHSL(i,n,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,n=this.b,r=t.elements;return this.r=r[0]*e+r[3]*i+r[6]*n,this.g=r[1]*e+r[4]*i+r[7]*n,this.b=r[2]*e+r[5]*i+r[8]*n,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const on=new an;an.NAMES=en;let ln=0;class hn extends Kt{static get type(){return"Material"}get type(){return this.constructor.type}set type(t){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ln++}),this.uuid=ee(),this.name="",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=d,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new an(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=jt,this.stencilZFail=jt,this.stencilZPass=jt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),204!==this.blendSrc&&(i.blendSrc=this.blendSrc),205!==this.blendDst&&(i.blendDst=this.blendDst),this.blendEquation!==d&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==jt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==jt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==jt&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),e){const e=n(t.textures),r=n(t.images);e.length>0&&(i.textures=e),r.length>0&&(i.images=r)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class cn extends hn{static get type(){return"MeshBasicMaterial"}constructor(t){super(),this.isMeshBasicMaterial=!0,this.color=new an(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=p,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const un=new Fe,dn=new le;class pn{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=i,this.usage=Xt,this.updateRanges=[],this.gpuType=V,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)dn.fromBufferAttribute(this,e),dn.applyMatrix3(t),this.setXY(e,dn.x,dn.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)un.fromBufferAttribute(this,e),un.applyMatrix3(t),this.setXYZ(e,un.x,un.y,un.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)un.fromBufferAttribute(this,e),un.applyMatrix4(t),this.setXYZ(e,un.x,un.y,un.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)un.fromBufferAttribute(this,e),un.applyNormalMatrix(t),this.setXYZ(e,un.x,un.y,un.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)un.fromBufferAttribute(this,e),un.transformDirection(t),this.setXYZ(e,un.x,un.y,un.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=se(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=ae(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=se(e,this.array)),e}setX(t,e){return this.normalized&&(e=ae(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=se(e,this.array)),e}setY(t,e){return this.normalized&&(e=ae(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=se(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ae(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=se(e,this.array)),e}setW(t,e){return this.normalized&&(e=ae(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=ae(e,this.array),i=ae(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=ae(e,this.array),i=ae(i,this.array),n=ae(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t*=this.itemSize,this.normalized&&(e=ae(e,this.array),i=ae(i,this.array),n=ae(n,this.array),r=ae(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Xt&&(t.usage=this.usage),t}}class mn extends pn{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class fn extends pn{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class gn extends pn{constructor(t,e,i){super(new Float32Array(t),e,i)}}let _n=0;const yn=new pi,xn=new ki,vn=new Fe,bn=new ke,Sn=new ke,Tn=new Fe;class Mn extends Kt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_n++}),this.uuid=ee(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ue(t)?fn:mn)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new he).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return yn.makeRotationFromQuaternion(t),this.applyMatrix4(yn),this}rotateX(t){return yn.makeRotationX(t),this.applyMatrix4(yn),this}rotateY(t){return yn.makeRotationY(t),this.applyMatrix4(yn),this}rotateZ(t){return yn.makeRotationZ(t),this.applyMatrix4(yn),this}translate(t,e,i){return yn.makeTranslation(t,e,i),this.applyMatrix4(yn),this}scale(t,e,i){return yn.makeScale(t,e,i),this.applyMatrix4(yn),this}lookAt(t){return xn.lookAt(t),xn.updateMatrix(),this.applyMatrix4(xn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(vn).negate(),this.translate(vn.x,vn.y,vn.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}this.setAttribute("position",new gn(e,3))}else{for(let i=0,n=e.count;i<n;i++){const n=t[i];e.setXYZ(i,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ke);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new Fe(-1/0,-1/0,-1/0),new Fe(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];bn.setFromBufferAttribute(i),this.morphTargetsRelative?(Tn.addVectors(this.boundingBox.min,bn.min),this.boundingBox.expandByPoint(Tn),Tn.addVectors(this.boundingBox.max,bn.max),this.boundingBox.expandByPoint(Tn)):(this.boundingBox.expandByPoint(bn.min),this.boundingBox.expandByPoint(bn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ri);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new Fe,1/0);if(t){const i=this.boundingSphere.center;if(bn.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Sn.setFromBufferAttribute(i),this.morphTargetsRelative?(Tn.addVectors(bn.min,Sn.min),bn.expandByPoint(Tn),Tn.addVectors(bn.max,Sn.max),bn.expandByPoint(Tn)):(bn.expandByPoint(Sn.min),bn.expandByPoint(Sn.max))}bn.getCenter(i);let n=0;for(let e=0,r=t.count;e<r;e++)Tn.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(Tn));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],a=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)Tn.fromBufferAttribute(s,e),a&&(vn.fromBufferAttribute(t,e),Tn.add(vn)),n=Math.max(n,i.distanceToSquared(Tn))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=e.position,n=e.normal,r=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new pn(new Float32Array(4*i.count),4));const s=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<i.count;t++)a[t]=new Fe,o[t]=new Fe;const l=new Fe,h=new Fe,c=new Fe,u=new le,d=new le,p=new le,m=new Fe,f=new Fe;function g(t,e,n){l.fromBufferAttribute(i,t),h.fromBufferAttribute(i,e),c.fromBufferAttribute(i,n),u.fromBufferAttribute(r,t),d.fromBufferAttribute(r,e),p.fromBufferAttribute(r,n),h.sub(l),c.sub(l),d.sub(u),p.sub(u);const s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(m.copy(h).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(s),f.copy(c).multiplyScalar(d.x).addScaledVector(h,-p.x).multiplyScalar(s),a[t].add(m),a[e].add(m),a[n].add(m),o[t].add(f),o[e].add(f),o[n].add(f))}let _=this.groups;0===_.length&&(_=[{start:0,count:t.count}]);for(let e=0,i=_.length;e<i;++e){const i=_[e],n=i.start;for(let e=n,r=n+i.count;e<r;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const y=new Fe,x=new Fe,v=new Fe,b=new Fe;function S(t){v.fromBufferAttribute(n,t),b.copy(v);const e=a[t];y.copy(e),y.sub(v.multiplyScalar(v.dot(e))).normalize(),x.crossVectors(b,e);const i=x.dot(o[t])<0?-1:1;s.setXYZW(t,y.x,y.y,y.z,i)}for(let e=0,i=_.length;e<i;++e){const i=_[e],n=i.start;for(let e=n,r=n+i.count;e<r;e+=3)S(t.getX(e+0)),S(t.getX(e+1)),S(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new pn(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new Fe,r=new Fe,s=new Fe,a=new Fe,o=new Fe,l=new Fe,h=new Fe,c=new Fe;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),m=t.getX(u+2);n.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,m),h.subVectors(s,r),c.subVectors(n,r),h.cross(c),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),a.add(h),o.add(h),l.add(h),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)n.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),h.subVectors(s,r),c.subVectors(n,r),h.cross(c),i.setXYZ(t+0,h.x,h.y,h.z),i.setXYZ(t+1,h.x,h.y,h.z),i.setXYZ(t+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Tn.fromBufferAttribute(t,e),Tn.normalize(),t.setXYZ(e,Tn.x,Tn.y,Tn.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,r=t.normalized,s=new i.constructor(e.length*n);let a=0,o=0;for(let r=0,l=e.length;r<l;r++){a=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*n;for(let t=0;t<n;t++)s[o++]=i[a++]}return new pn(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Mn,i=this.index.array,n=this.attributes;for(const r in n){const s=t(n[r],i);e.setAttribute(r,s)}const r=this.morphAttributes;for(const n in r){const s=[],a=r[n];for(let e=0,n=a.length;e<n;e++){const n=t(a[e],i);s.push(n)}e.morphAttributes[n]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,i=s.length;t<i;t++){const i=s[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let r=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],s=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];s.push(n.toJSON(t.data))}s.length>0&&(n[e]=s,r=!0)}r&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const r=t.morphAttributes;for(const t in r){const i=[],n=r[t];for(let t=0,r=n.length;t<r;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const En=new pi,wn=new di,An=new ri,Rn=new Fe,Cn=new Fe,Nn=new Fe,Pn=new Fe,In=new Fe,Un=new Fe,Ln=new Fe,Dn=new Fe;class Bn extends ki{constructor(t=new Mn,e=new cn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,s=i.morphTargetsRelative;e.fromBufferAttribute(n,t);const a=this.morphTargetInfluences;if(r&&a){Un.set(0,0,0);for(let i=0,n=r.length;i<n;i++){const n=a[i],o=r[i];0!==n&&(In.fromBufferAttribute(o,t),s?Un.addScaledVector(In,n):Un.addScaledVector(In.sub(e),n))}e.add(Un)}return e}raycast(t,e){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0!==n){if(null===i.boundingSphere&&i.computeBoundingSphere(),An.copy(i.boundingSphere),An.applyMatrix4(r),wn.copy(t.ray).recast(t.near),!1===An.containsPoint(wn.origin)){if(null===wn.intersectSphere(An,Rn))return;if(wn.origin.distanceToSquared(Rn)>(t.far-t.near)**2)return}En.copy(r).invert(),wn.copy(t.ray).applyMatrix4(En),null!==i.boundingBox&&!1===wn.intersectsBox(i.boundingBox)||this._computeIntersections(t,e,wn)}}_computeIntersections(t,e,i){let n;const r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,c=r.attributes.normal,u=r.groups,d=r.drawRange;if(null!==a)if(Array.isArray(s))for(let r=0,o=u.length;r<o;r++){const o=u[r],p=s[o.materialIndex];for(let r=Math.max(o.start,d.start),s=Math.min(a.count,Math.min(o.start+o.count,d.start+d.count));r<s;r+=3)n=Fn(this,p,t,i,l,h,c,a.getX(r),a.getX(r+1),a.getX(r+2)),n&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=o.materialIndex,e.push(n))}else for(let r=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);r<o;r+=3)n=Fn(this,s,t,i,l,h,c,a.getX(r),a.getX(r+1),a.getX(r+2)),n&&(n.faceIndex=Math.floor(r/3),e.push(n));else if(void 0!==o)if(Array.isArray(s))for(let r=0,a=u.length;r<a;r++){const a=u[r],p=s[a.materialIndex];for(let r=Math.max(a.start,d.start),s=Math.min(o.count,Math.min(a.start+a.count,d.start+d.count));r<s;r+=3)n=Fn(this,p,t,i,l,h,c,r,r+1,r+2),n&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=a.materialIndex,e.push(n))}else for(let r=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);r<a;r+=3)n=Fn(this,s,t,i,l,h,c,r,r+1,r+2),n&&(n.faceIndex=Math.floor(r/3),e.push(n))}}function Fn(t,e,i,n,r,s,a,o,l,c){t.getVertexPosition(o,Cn),t.getVertexPosition(l,Nn),t.getVertexPosition(c,Pn);const u=function(t,e,i,n,r,s,a,o){let l;if(l=e.side===h?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,0===e.side,o),null===l)return null;Dn.copy(o),Dn.applyMatrix4(t.matrixWorld);const c=i.ray.origin.distanceTo(Dn);return c<i.near||c>i.far?null:{distance:c,point:Dn.clone(),object:t}}(t,e,i,n,Cn,Nn,Pn,Ln);if(u){const t=new Fe;tn.getBarycoord(Ln,Cn,Nn,Pn,t),r&&(u.uv=tn.getInterpolatedAttribute(r,o,l,c,t,new le)),s&&(u.uv1=tn.getInterpolatedAttribute(s,o,l,c,t,new le)),a&&(u.normal=tn.getInterpolatedAttribute(a,o,l,c,t,new Fe),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const e={a:o,b:l,c,normal:new Fe,materialIndex:0};tn.getNormal(Cn,Nn,Pn,e.normal),u.face=e,u.barycoord=t}return u}class On extends Mn{constructor(t=1,e=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const a=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],h=[],c=[];let u=0,d=0;function p(t,e,i,n,r,s,p,m,f,g,_){const y=s/f,x=p/g,v=s/2,b=p/2,S=m/2,T=f+1,M=g+1;let E=0,w=0;const A=new Fe;for(let s=0;s<M;s++){const a=s*x-b;for(let o=0;o<T;o++){const u=o*y-v;A[t]=u*n,A[e]=a*r,A[i]=S,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[i]=m>0?1:-1,h.push(A.x,A.y,A.z),c.push(o/f),c.push(1-s/g),E+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const i=u+e+T*t,n=u+e+T*(t+1),r=u+(e+1)+T*(t+1),s=u+(e+1)+T*t;o.push(i,n,s),o.push(n,r,s),w+=6}a.addGroup(d,w,_),d+=w,u+=E}p("z","y","x",-1,-1,i,e,t,s,r,0),p("z","y","x",1,-1,i,e,-t,s,r,1),p("x","z","y",1,1,t,i,e,n,s,2),p("x","z","y",1,-1,t,i,-e,n,s,3),p("x","y","z",1,-1,t,e,i,n,r,4),p("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new gn(l,3)),this.setAttribute("normal",new gn(h,3)),this.setAttribute("uv",new gn(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new On(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function zn(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[i][n]=null):e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}function kn(t){const e={};for(let i=0;i<t.length;i++){const n=zn(t[i]);for(const t in n)e[t]=n[t]}return e}function Vn(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:ge.workingColorSpace}const Gn={clone:zn,merge:kn};class Hn extends hn{static get type(){return"ShaderMaterial"}constructor(t){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=zn(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let i=0;i<t.length;i++)e.push(t[i].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class Wn extends ki{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new pi,this.projectionMatrix=new pi,this.projectionMatrixInverse=new pi,this.coordinateSystem=qt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const jn=new Fe,Xn=new le,$n=new le;class qn extends Wn{constructor(t=50,e=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*te*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Qt*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*te*Math.atan(Math.tan(.5*Qt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,i){jn.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(jn.x,jn.y).multiplyScalar(-t/jn.z),jn.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(jn.x,jn.y).multiplyScalar(-t/jn.z)}getViewSize(t,e){return this.getViewBounds(t,Xn,$n),e.subVectors($n,Xn)}setViewOffset(t,e,i,n,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Qt*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*n/t,e-=s.offsetY*i/a,n*=s.width/t,i*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Yn=-90;class Kn extends ki{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new qn(Yn,1,t,e);n.layers=this.layers,this.add(n);const r=new qn(Yn,1,t,e);r.layers=this.layers,this.add(r);const s=new qn(Yn,1,t,e);s.layers=this.layers,this.add(s);const a=new qn(Yn,1,t,e);a.layers=this.layers,this.add(a);const o=new qn(Yn,1,t,e);o.layers=this.layers,this.add(o);const l=new qn(Yn,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[i,n,r,s,a,o]=e;for(const t of e)this.remove(t);if(t===qt)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==Yt)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,s,a,o,l,h]=this.children,c=t.getRenderTarget(),u=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0,n),t.render(e,r),t.setRenderTarget(i,1,n),t.render(e,s),t.setRenderTarget(i,2,n),t.render(e,a),t.setRenderTarget(i,3,n),t.render(e,o),t.setRenderTarget(i,4,n),t.render(e,l),i.texture.generateMipmaps=m,t.setRenderTarget(i,5,n),t.render(e,h),t.setRenderTarget(c,u,d),t.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Zn extends Ne{constructor(t,e,i,n,r,s,a,o,l,h){super(t=void 0!==t?t:[],e=void 0!==e?e:M,i,n,r,s,a,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Jn extends Ue{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},n=[i,i,i,i,i,i];this.texture=new Zn(n,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:I}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={tEquirect:{value:null}},n="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new On(5,5,5),a=new Hn({name:"CubemapFromEquirect",uniforms:zn(i),vertexShader:n,fragmentShader:r,side:h,blending:0});a.uniforms.tEquirect.value=e;const o=new Bn(s,a),l=e.minFilter;return e.minFilter===L&&(e.minFilter=I),new Kn(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,i,n){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,i,n);t.setRenderTarget(r)}}const Qn=new Fe,tr=new Fe,er=new he;class ir{constructor(t=new Fe(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=Qn.subVectors(i,e).cross(tr.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const i=t.delta(Qn),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:e.copy(t.start).addScaledVector(i,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||er.getNormalMatrix(t),n=this.coplanarPoint(Qn).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const nr=new ri,rr=new Fe;class sr{constructor(t=new ir,e=new ir,i=new ir,n=new ir,r=new ir,s=new ir){this.planes=[t,e,i,n,r,s]}set(t,e,i,n,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,e=2e3){const i=this.planes,n=t.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],h=n[5],c=n[6],u=n[7],d=n[8],p=n[9],m=n[10],f=n[11],g=n[12],_=n[13],y=n[14],x=n[15];if(i[0].setComponents(o-r,u-l,f-d,x-g).normalize(),i[1].setComponents(o+r,u+l,f+d,x+g).normalize(),i[2].setComponents(o+s,u+h,f+p,x+_).normalize(),i[3].setComponents(o-s,u-h,f-p,x-_).normalize(),i[4].setComponents(o-a,u-c,f-m,x-y).normalize(),e===qt)i[5].setComponents(o+a,u+c,f+m,x+y).normalize();else{if(e!==Yt)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);i[5].setComponents(a,c,m,y).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),nr.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),nr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(nr)}intersectsSprite(t){return nr.center.set(0,0,0),nr.radius=.7071067811865476,nr.applyMatrix4(t.matrixWorld),this.intersectsSphere(nr)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(i)<n)return!1;return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(rr.x=n.normal.x>0?t.max.x:t.min.x,rr.y=n.normal.y>0?t.max.y:t.min.y,rr.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(rr)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function ar(){let t=null,e=!1,i=null,n=null;function r(e,s){i(e,s),n=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==i&&(n=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function or(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);const n=e.get(i);n&&(t.deleteBuffer(n.buffer),e.delete(i))},update:function(i,n){if(i.isInterleavedBufferAttribute&&(i=i.data),i.isGLBufferAttribute){const t=e.get(i);return void((!t||t.version<i.version)&&e.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}))}const r=e.get(i);if(void 0===r)e.set(i,function(e,i){const n=e.array,r=e.usage,s=n.byteLength,a=t.createBuffer();let o;if(t.bindBuffer(i,a),t.bufferData(i,n,r),e.onUploadCallback(),n instanceof Float32Array)o=t.FLOAT;else if(n instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(n instanceof Int16Array)o=t.SHORT;else if(n instanceof Uint32Array)o=t.UNSIGNED_INT;else if(n instanceof Int32Array)o=t.INT;else if(n instanceof Int8Array)o=t.BYTE;else if(n instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+n);o=t.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version,size:s}}(i,n));else if(r.version<i.version){if(r.size!==i.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,i,n){const r=i.array,s=i.updateRanges;if(t.bindBuffer(n,e),0===s.length)t.bufferSubData(n,0,r);else{s.sort(((t,e)=>t.start-e.start));let e=0;for(let t=1;t<s.length;t++){const i=s[e],n=s[t];n.start<=i.start+i.count+1?i.count=Math.max(i.count,n.start+n.count-i.start):(++e,s[e]=n)}s.length=e+1;for(let e=0,i=s.length;e<i;e++){const i=s[e];t.bufferSubData(n,i.start*r.BYTES_PER_ELEMENT,r,i.start,i.count)}i.clearUpdateRanges()}i.onUploadCallback()}(r.buffer,i,n),r.version=i.version}}}}class lr extends Mn{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const r=t/2,s=e/2,a=Math.floor(i),o=Math.floor(n),l=a+1,h=o+1,c=t/a,u=e/o,d=[],p=[],m=[],f=[];for(let t=0;t<h;t++){const e=t*u-s;for(let i=0;i<l;i++){const n=i*c-r;p.push(n,-e,0),m.push(0,0,1),f.push(i/a),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const i=e+l*t,n=e+l*(t+1),r=e+1+l*(t+1),s=e+1+l*t;d.push(i,n,s),d.push(n,r,s)}this.setIndex(d),this.setAttribute("position",new gn(p,3)),this.setAttribute("normal",new gn(m,3)),this.setAttribute("uv",new gn(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new lr(t.width,t.height,t.widthSegments,t.heightSegments)}}const hr={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t\n\t\t#else\n\t\t\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},cr={common:{diffuse:{value:new an(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new he},alphaMap:{value:null},alphaMapTransform:{value:new he},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new he}},envmap:{envMap:{value:null},envMapRotation:{value:new he},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new he}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new he}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new he},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new he},normalScale:{value:new le(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new he},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new he}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new he}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new he}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new an(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new an(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new he},alphaTest:{value:0},uvTransform:{value:new he}},sprite:{diffuse:{value:new an(16777215)},opacity:{value:1},center:{value:new le(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new he},alphaMap:{value:null},alphaMapTransform:{value:new he},alphaTest:{value:0}}},ur={basic:{uniforms:kn([cr.common,cr.specularmap,cr.envmap,cr.aomap,cr.lightmap,cr.fog]),vertexShader:hr.meshbasic_vert,fragmentShader:hr.meshbasic_frag},lambert:{uniforms:kn([cr.common,cr.specularmap,cr.envmap,cr.aomap,cr.lightmap,cr.emissivemap,cr.bumpmap,cr.normalmap,cr.displacementmap,cr.fog,cr.lights,{emissive:{value:new an(0)}}]),vertexShader:hr.meshlambert_vert,fragmentShader:hr.meshlambert_frag},phong:{uniforms:kn([cr.common,cr.specularmap,cr.envmap,cr.aomap,cr.lightmap,cr.emissivemap,cr.bumpmap,cr.normalmap,cr.displacementmap,cr.fog,cr.lights,{emissive:{value:new an(0)},specular:{value:new an(1118481)},shininess:{value:30}}]),vertexShader:hr.meshphong_vert,fragmentShader:hr.meshphong_frag},standard:{uniforms:kn([cr.common,cr.envmap,cr.aomap,cr.lightmap,cr.emissivemap,cr.bumpmap,cr.normalmap,cr.displacementmap,cr.roughnessmap,cr.metalnessmap,cr.fog,cr.lights,{emissive:{value:new an(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:hr.meshphysical_vert,fragmentShader:hr.meshphysical_frag},toon:{uniforms:kn([cr.common,cr.aomap,cr.lightmap,cr.emissivemap,cr.bumpmap,cr.normalmap,cr.displacementmap,cr.gradientmap,cr.fog,cr.lights,{emissive:{value:new an(0)}}]),vertexShader:hr.meshtoon_vert,fragmentShader:hr.meshtoon_frag},matcap:{uniforms:kn([cr.common,cr.bumpmap,cr.normalmap,cr.displacementmap,cr.fog,{matcap:{value:null}}]),vertexShader:hr.meshmatcap_vert,fragmentShader:hr.meshmatcap_frag},points:{uniforms:kn([cr.points,cr.fog]),vertexShader:hr.points_vert,fragmentShader:hr.points_frag},dashed:{uniforms:kn([cr.common,cr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:hr.linedashed_vert,fragmentShader:hr.linedashed_frag},depth:{uniforms:kn([cr.common,cr.displacementmap]),vertexShader:hr.depth_vert,fragmentShader:hr.depth_frag},normal:{uniforms:kn([cr.common,cr.bumpmap,cr.normalmap,cr.displacementmap,{opacity:{value:1}}]),vertexShader:hr.meshnormal_vert,fragmentShader:hr.meshnormal_frag},sprite:{uniforms:kn([cr.sprite,cr.fog]),vertexShader:hr.sprite_vert,fragmentShader:hr.sprite_frag},background:{uniforms:{uvTransform:{value:new he},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:hr.background_vert,fragmentShader:hr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new he}},vertexShader:hr.backgroundCube_vert,fragmentShader:hr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:hr.cube_vert,fragmentShader:hr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:hr.equirect_vert,fragmentShader:hr.equirect_frag},distanceRGBA:{uniforms:kn([cr.common,cr.displacementmap,{referencePosition:{value:new Fe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:hr.distanceRGBA_vert,fragmentShader:hr.distanceRGBA_frag},shadow:{uniforms:kn([cr.lights,cr.fog,{color:{value:new an(0)},opacity:{value:1}}]),vertexShader:hr.shadow_vert,fragmentShader:hr.shadow_frag}};ur.physical={uniforms:kn([ur.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new he},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new he},clearcoatNormalScale:{value:new le(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new he},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new he},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new he},sheen:{value:0},sheenColor:{value:new an(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new he},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new he},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new he},transmissionSamplerSize:{value:new le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new he},attenuationDistance:{value:0},attenuationColor:{value:new an(0)},specularColor:{value:new an(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new he},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new he},anisotropyVector:{value:new le},anisotropyMap:{value:null},anisotropyMapTransform:{value:new he}}]),vertexShader:hr.meshphysical_vert,fragmentShader:hr.meshphysical_frag};const dr={r:0,b:0,g:0},pr=new Ti,mr=new pi;function fr(t,e,i,n,r,s,a){const o=new an(0);let l,c,u=!0===s?0:1,d=null,p=0,m=null;function f(t){let n=!0===t.isScene?t.background:null;return n&&n.isTexture&&(n=(t.backgroundBlurriness>0?i:e).get(n)),n}function g(e,i){e.getRGB(dr,Vn(t)),n.buffers.color.setClear(dr.r,dr.g,dr.b,i,a)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),u=e,g(o,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,g(o,u)},render:function(e){let i=!1;const r=f(e);null===r?g(o,u):r&&r.isColor&&(g(r,1),i=!0);const s=t.xr.getEnvironmentBlendMode();"additive"===s?n.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===s&&n.buffers.color.setClear(0,0,0,0,a),(t.autoClear||i)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,i){const n=f(i);n&&(n.isCubeTexture||n.mapping===w)?(void 0===c&&(c=new Bn(new On(1,1,1),new Hn({name:"BackgroundCubeMaterial",uniforms:zn(ur.backgroundCube.uniforms),vertexShader:ur.backgroundCube.vertexShader,fragmentShader:ur.backgroundCube.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),pr.copy(i.backgroundRotation),pr.x*=-1,pr.y*=-1,pr.z*=-1,n.isCubeTexture&&!1===n.isRenderTargetTexture&&(pr.y*=-1,pr.z*=-1),c.material.uniforms.envMap.value=n,c.material.uniforms.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=i.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(mr.makeRotationFromEuler(pr)),c.material.toneMapped=ge.getTransfer(n.colorSpace)!==Wt,d===n&&p===n.version&&m===t.toneMapping||(c.material.needsUpdate=!0,d=n,p=n.version,m=t.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):n&&n.isTexture&&(void 0===l&&(l=new Bn(new lr(2,2),new Hn({name:"BackgroundMaterial",uniforms:zn(ur.background.uniforms),vertexShader:ur.background.vertexShader,fragmentShader:ur.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=n,l.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,l.material.toneMapped=ge.getTransfer(n.colorSpace)!==Wt,!0===n.matrixAutoUpdate&&n.updateMatrix(),l.material.uniforms.uvTransform.value.copy(n.matrix),d===n&&p===n.version&&m===t.toneMapping||(l.material.needsUpdate=!0,d=n,p=n.version,m=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))}}}function gr(t,e){const i=t.getParameter(t.MAX_VERTEX_ATTRIBS),n={},r=h(null);let s=r,a=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function h(t){const e=[],n=[],r=[];for(let t=0;t<i;t++)e[t]=0,n[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function c(){const t=s.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function u(t){d(t,0)}function d(e,i){const n=s.newAttributes,r=s.enabledAttributes,a=s.attributeDivisors;n[e]=1,0===r[e]&&(t.enableVertexAttribArray(e),r[e]=1),a[e]!==i&&(t.vertexAttribDivisor(e,i),a[e]=i)}function p(){const e=s.newAttributes,i=s.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==e[n]&&(t.disableVertexAttribArray(n),i[n]=0)}function m(e,i,n,r,s,a,o){!0===o?t.vertexAttribIPointer(e,i,n,s,a):t.vertexAttribPointer(e,i,n,r,s,a)}function f(){g(),a=!0,s!==r&&(s=r,o(s.object))}function g(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(i,r,l,f,g){let _=!1;const y=function(e,i,r){const s=!0===r.wireframe;let a=n[e.id];void 0===a&&(a={},n[e.id]=a);let o=a[i.id];void 0===o&&(o={},a[i.id]=o);let l=o[s];return void 0===l&&(l=h(t.createVertexArray()),o[s]=l),l}(f,l,r);s!==y&&(s=y,o(s.object)),_=function(t,e,i,n){const r=s.attributes,a=e.attributes;let o=0;const l=i.getAttributes();for(const e in l)if(l[e].location>=0){const i=r[e];let n=a[e];if(void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor)),void 0===i)return!0;if(i.attribute!==n)return!0;if(n&&i.data!==n.data)return!0;o++}return s.attributesNum!==o||s.index!==n}(i,f,l,g),_&&function(t,e,i,n){const r={},a=e.attributes;let o=0;const l=i.getAttributes();for(const e in l)if(l[e].location>=0){let i=a[e];void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor));const n={};n.attribute=i,i&&i.data&&(n.data=i.data),r[e]=n,o++}s.attributes=r,s.attributesNum=o,s.index=n}(i,f,l,g),null!==g&&e.update(g,t.ELEMENT_ARRAY_BUFFER),(_||a)&&(a=!1,function(i,n,r,s){c();const a=s.attributes,o=r.getAttributes(),l=n.defaultAttributeValues;for(const n in o){const r=o[n];if(r.location>=0){let o=a[n];if(void 0===o&&("instanceMatrix"===n&&i.instanceMatrix&&(o=i.instanceMatrix),"instanceColor"===n&&i.instanceColor&&(o=i.instanceColor)),void 0!==o){const n=o.normalized,a=o.itemSize,l=e.get(o);if(void 0===l)continue;const h=l.buffer,c=l.type,p=l.bytesPerElement,f=c===t.INT||c===t.UNSIGNED_INT||o.gpuType===z;if(o.isInterleavedBufferAttribute){const e=o.data,l=e.stride,g=o.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)d(r.location+t,e.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<r.locationSize;t++)u(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,h);for(let t=0;t<r.locationSize;t++)m(r.location+t,a/r.locationSize,c,n,l*p,(g+a/r.locationSize*t)*p,f)}else{if(o.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)d(r.location+t,o.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let t=0;t<r.locationSize;t++)u(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,h);for(let t=0;t<r.locationSize;t++)m(r.location+t,a/r.locationSize,c,n,a*p,a/r.locationSize*t*p,f)}}else if(void 0!==l){const e=l[n];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(r.location,e);break;case 3:t.vertexAttrib3fv(r.location,e);break;case 4:t.vertexAttrib4fv(r.location,e);break;default:t.vertexAttrib1fv(r.location,e)}}}}p()}(i,r,l,f),null!==g&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(g).buffer))},reset:f,resetDefaultState:g,dispose:function(){f();for(const t in n){const e=n[t];for(const t in e){const i=e[t];for(const t in i)l(i[t].object),delete i[t];delete e[t]}delete n[t]}},releaseStatesOfGeometry:function(t){if(void 0===n[t.id])return;const e=n[t.id];for(const t in e){const i=e[t];for(const t in i)l(i[t].object),delete i[t];delete e[t]}delete n[t.id]},releaseStatesOfProgram:function(t){for(const e in n){const i=n[e];if(void 0===i[t.id])continue;const r=i[t.id];for(const t in r)l(r[t].object),delete r[t];delete i[t.id]}},initAttributes:c,enableAttribute:u,disableUnusedAttributes:p}}function _r(t,e,i){let n;function r(e,r,s){0!==s&&(t.drawArraysInstanced(n,e,r,s),i.update(r,n,s))}this.setMode=function(t){n=t},this.render=function(e,r){t.drawArrays(n,e,r),i.update(r,n,1)},this.renderInstances=r,this.renderMultiDraw=function(t,r,s){if(0===s)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,t,0,r,0,s);let a=0;for(let t=0;t<s;t++)a+=r[t];i.update(a,n,1)},this.renderMultiDrawInstances=function(t,s,a,o){if(0===a)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)r(t[e],s[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(n,t,0,s,0,o,0,a);let e=0;for(let t=0;t<a;t++)e+=s[t]*o[t];i.update(e,n,1)}}}function yr(t,e,i,n){let r;function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==i.precision?i.precision:"highp";const o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===i.logarithmicDepthBuffer,h=!0===i.reverseDepthBuffer&&e.has("EXT_clip_control"),c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,textureFormatReadable:function(e){return e===Y||n.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(i){const r=i===G&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(i!==D&&n.convert(i)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&i!==V&&!r)},precision:a,logarithmicDepthBuffer:l,reverseDepthBuffer:h,maxTextures:c,maxVertexTextures:u,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:u>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function xr(t){const e=this;let i=null,n=0,r=!1,s=!1;const a=new ir,o=new he,l={value:null,needsUpdate:!1};function h(t,i,n,r){const s=null!==t?t.length:0;let h=null;if(0!==s){if(h=l.value,!0!==r||null===h){const e=n+4*s,r=i.matrixWorldInverse;o.getNormalMatrix(r),(null===h||h.length<e)&&(h=new Float32Array(e));for(let e=0,i=n;e!==s;++e,i+=4)a.copy(t[e]).applyMatrix4(r,o),a.normal.toArray(h,i),h[i+3]=a.constant}l.value=h,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const i=0!==t.length||e||0!==n||r;return r=e,n=t.length,i},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(t,e){i=h(t,e,0)},this.setState=function(a,o,c){const u=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,m=t.get(a);if(!r||null===u||0===u.length||s&&!p)s?h(null):(l.value!==i&&(l.value=i,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0);else{const t=s?0:n,e=4*t;let r=m.clippingState||null;l.value=r,r=h(u,o,e,c);for(let t=0;t!==e;++t)r[t]=i[t];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function vr(t){let e=new WeakMap;function i(t,e){return 303===e?t.mapping=M:304===e&&(t.mapping=E),t}function n(t){const i=t.target;i.removeEventListener("dispose",n);const r=e.get(i);void 0!==r&&(e.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping;if(303===s||304===s){if(e.has(r))return i(e.get(r).texture,r.mapping);{const s=r.image;if(s&&s.height>0){const a=new Jn(s.height);return a.fromEquirectangularTexture(t,r),e.set(r,a),r.addEventListener("dispose",n),i(a.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}class br extends Wn{constructor(t=-1,e=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-t,s=i+t,a=n+e,o=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Sr=/^(27|83)2$/.test(i.j)?null:[.125,.215,.35,.446,.526,.582],Tr=new br,Mr=new an;let Er=null,wr=0,Ar=0,Rr=!1;const Cr=(1+Math.sqrt(5))/2,Nr=1/Cr,Pr=[new Fe(-Cr,Nr,0),new Fe(Cr,Nr,0),new Fe(-Nr,0,Cr),new Fe(Nr,0,Cr),new Fe(0,Cr,-Nr),new Fe(0,Cr,Nr),new Fe(-1,1,-1),new Fe(1,1,-1),new Fe(-1,1,1),new Fe(1,1,1)];class Ir{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,n=100){Er=this._renderer.getRenderTarget(),wr=this._renderer.getActiveCubeFace(),Ar=this._renderer.getActiveMipmapLevel(),Rr=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,i,n,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Br(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Dr(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Er,wr,Ar),this._renderer.xr.enabled=Rr,t.scissorTest=!1,Lr(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===M||t.mapping===E?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Er=this._renderer.getRenderTarget(),wr=this._renderer.getActiveCubeFace(),Ar=this._renderer.getActiveMipmapLevel(),Rr=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:I,minFilter:I,generateMipmaps:!1,type:G,format:Y,colorSpace:Gt,depthBuffer:!1},n=Ur(t,e,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Ur(t,e,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],i=[],n=[];let r=t;const s=t-4+1+Sr.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);i.push(s);let o=1/s;a>t-4?o=Sr[a-t+4-1]:0===a&&(o=0),n.push(o);const l=1/(s-2),h=-l,c=1+l,u=[h,h,c,h,c,c,h,h,c,c,h,c],d=6,p=6,m=3,f=2,g=1,_=new Float32Array(m*p*d),y=new Float32Array(f*p*d),x=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,i=t>2?0:-1,n=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0];_.set(n,m*p*t),y.set(u,f*p*t);const r=[t,t,t,t,t,t];x.set(r,g*p*t)}const v=new Mn;v.setAttribute("position",new pn(_,m)),v.setAttribute("uv",new pn(y,f)),v.setAttribute("faceIndex",new pn(x,g)),e.push(v),r>4&&r--}return{lodPlanes:e,sizeLods:i,sigmas:n}}(n)),this._blurMaterial=function(t,e,i){const n=new Float32Array(20),r=new Fe(0,1,0);return new Hn({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(n,t,e)}return n}_compileMaterial(t){const e=new Bn(this._lodPlanes[0],t);this._renderer.compile(e,Tr)}_sceneToCubeUV(t,e,i,n){const r=new qn(90,1,e,i),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(Mr),o.toneMapping=g,o.autoClear=!1;const u=new cn({name:"PMREM.Background",side:h,depthWrite:!1,depthTest:!1}),d=new Bn(new On,u);let p=!1;const m=t.background;m?m.isColor&&(u.color.copy(m),t.background=null,p=!0):(u.color.copy(Mr),p=!0);for(let e=0;e<6;e++){const i=e%3;0===i?(r.up.set(0,s[e],0),r.lookAt(a[e],0,0)):1===i?(r.up.set(0,0,s[e]),r.lookAt(0,a[e],0)):(r.up.set(0,s[e],0),r.lookAt(0,0,a[e]));const l=this._cubeSize;Lr(n,i*l,e>2?l:0,l,l),o.setRenderTarget(n),p&&o.render(d,r),o.render(t,r)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=c,o.autoClear=l,t.background=m}_textureToCubeUV(t,e){const i=this._renderer,n=t.mapping===M||t.mapping===E;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=Br()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Dr());const r=n?this._cubemapMaterial:this._equirectMaterial,s=new Bn(this._lodPlanes[0],r);r.uniforms.envMap.value=t;const a=this._cubeSize;Lr(e,0,0,3*a,2*a),i.setRenderTarget(e),i.render(s,Tr)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;const n=this._lodPlanes.length;for(let e=1;e<n;e++){const i=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),r=Pr[(n-e-1)%Pr.length];this._blur(t,e-1,e,i,r)}e.autoClear=i}_blur(t,e,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,i,n,"latitudinal",r),this._halfBlur(s,t,i,i,n,"longitudinal",r)}_halfBlur(t,e,i,n,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const h=new Bn(this._lodPlanes[n],l),c=l.uniforms,u=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<20;++t){const e=t/p,i=Math.exp(-e*e/2);f.push(i),0===t?g+=i:t<m&&(g+=2*i)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;c.envMap.value=t.texture,c.samples.value=m,c.weights.value=f,c.latitudinal.value="latitudinal"===s,a&&(c.poleAxis.value=a);const{_lodMax:_}=this;c.dTheta.value=d,c.mipInt.value=_-i;const y=this._sizeLods[n];Lr(e,3*y*(n>_-4?n-_+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(h,Tr)}}function Ur(t,e,i){const n=new Ue(t,e,i);return n.texture.mapping=w,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Lr(t,e,i,n,r){t.viewport.set(e,i,n,r),t.scissor.set(e,i,n,r)}function Dr(){return new Hn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Br(){return new Hn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Fr(t){let e=new WeakMap,i=null;function n(t){const i=t.target;i.removeEventListener("dispose",n);const r=e.get(i);void 0!==r&&(e.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping,a=303===s||304===s,o=s===M||s===E;if(a||o){let s=e.get(r);const l=void 0!==s?s.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===i&&(i=new Ir(t)),s=a?i.fromEquirectangular(r,s):i.fromCubemap(r,s),s.texture.pmremVersion=r.pmremVersion,e.set(r,s),s.texture;if(void 0!==s)return s.texture;{const l=r.image;return a&&l&&l.height>0||o&&l&&function(t){let e=0;for(let i=0;i<6;i++)void 0!==t[i]&&e++;return 6===e}(l)?(null===i&&(i=new Ir(t)),s=a?i.fromEquirectangular(r):i.fromCubemap(r),s.texture.pmremVersion=r.pmremVersion,e.set(r,s),r.addEventListener("dispose",n),s.texture):null}}}return r},dispose:function(){e=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function Or(t){const e={};function i(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return e[i]=n,n}return{has:function(t){return null!==i(t)},init:function(){i("EXT_color_buffer_float"),i("WEBGL_clip_cull_distance"),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture"),i("WEBGL_render_shared_exponent")},get:function(t){const e=i(t);return null===e&&fe("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function zr(t,e,i,n){const r={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);for(const t in o.morphAttributes){const i=o.morphAttributes[t];for(let t=0,n=i.length;t<n;t++)e.remove(i[t])}o.removeEventListener("dispose",a),delete r[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(t){const i=[],n=t.index,r=t.attributes.position;let a=0;if(null!==n){const t=n.array;a=n.version;for(let e=0,n=t.length;e<n;e+=3){const n=t[e+0],r=t[e+1],s=t[e+2];i.push(n,r,r,s,s,n)}}else{if(void 0===r)return;{const t=r.array;a=r.version;for(let e=0,n=t.length/3-1;e<n;e+=3){const t=e+0,n=e+1,r=e+2;i.push(t,n,n,r,r,t)}}}const o=new(ue(i)?fn:mn)(i,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",a),r[e.id]=!0,i.memory.geometries++),e},update:function(i){const n=i.attributes;for(const i in n)e.update(n[i],t.ARRAY_BUFFER);const r=i.morphAttributes;for(const i in r){const n=r[i];for(let i=0,r=n.length;i<r;i++)e.update(n[i],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&o(t)}else o(t);return s.get(t)}}}function kr(t,e,i){let n,r,s;function a(e,a,o){0!==o&&(t.drawElementsInstanced(n,a,r,e*s,o),i.update(a,n,o))}this.setMode=function(t){n=t},this.setIndex=function(t){r=t.type,s=t.bytesPerElement},this.render=function(e,a){t.drawElements(n,a,r,e*s),i.update(a,n,1)},this.renderInstances=a,this.renderMultiDraw=function(t,s,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,s,0,r,t,0,a);let o=0;for(let t=0;t<a;t++)o+=s[t];i.update(o,n,1)},this.renderMultiDrawInstances=function(t,o,l,h){if(0===l)return;const c=e.get("WEBGL_multi_draw");if(null===c)for(let e=0;e<t.length;e++)a(t[e]/s,o[e],h[e]);else{c.multiDrawElementsInstancedWEBGL(n,o,0,r,t,0,h,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t]*h[t];i.update(e,n,1)}}}function Vr(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(i,n,r){switch(e.calls++,n){case t.TRIANGLES:e.triangles+=r*(i/3);break;case t.LINES:e.lines+=r*(i/2);break;case t.LINE_STRIP:e.lines+=r*(i-1);break;case t.LINE_LOOP:e.lines+=r*i;break;case t.POINTS:e.points+=r*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Gr(t,e,i){const n=new WeakMap,r=new Pe;return{update:function(s,a,o){const l=s.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,c=void 0!==h?h.length:0;let u=n.get(a);if(void 0===u||u.count!==c){void 0!==u&&u.texture.dispose();const d=void 0!==a.morphAttributes.position,p=void 0!==a.morphAttributes.normal,m=void 0!==a.morphAttributes.color,f=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],_=a.morphAttributes.color||[];let y=0;!0===d&&(y=1),!0===p&&(y=2),!0===m&&(y=3);let x=a.attributes.position.count*y,v=1;x>e.maxTextureSize&&(v=Math.ceil(x/e.maxTextureSize),x=e.maxTextureSize);const b=new Float32Array(x*v*4*c),S=new Le(b,x,v,c);S.type=V,S.needsUpdate=!0;const T=4*y;for(let E=0;E<c;E++){const w=f[E],A=g[E],R=_[E],C=x*v*4*E;for(let N=0;N<w.count;N++){const P=N*T;!0===d&&(r.fromBufferAttribute(w,N),b[C+P+0]=r.x,b[C+P+1]=r.y,b[C+P+2]=r.z,b[C+P+3]=0),!0===p&&(r.fromBufferAttribute(A,N),b[C+P+4]=r.x,b[C+P+5]=r.y,b[C+P+6]=r.z,b[C+P+7]=0),!0===m&&(r.fromBufferAttribute(R,N),b[C+P+8]=r.x,b[C+P+9]=r.y,b[C+P+10]=r.z,b[C+P+11]=4===R.itemSize?r.w:1)}}function M(){S.dispose(),n.delete(a),a.removeEventListener("dispose",M)}u={count:c,texture:S,size:new le(x,v)},n.set(a,u),a.addEventListener("dispose",M)}if(!0===s.isInstancedMesh&&null!==s.morphTexture)o.getUniforms().setValue(t,"morphTexture",s.morphTexture,i);else{let I=0;for(let L=0;L<l.length;L++)I+=l[L];const U=a.morphTargetsRelative?1:1-I;o.getUniforms().setValue(t,"morphTargetBaseInfluence",U),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",u.texture,i),o.getUniforms().setValue(t,"morphTargetsTextureSize",u.size)}}}function Hr(t,e,i,n){let r=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(a){const o=n.render.frame,l=a.geometry,h=e.get(a,l);if(r.get(h)!==o&&(e.update(h),r.set(h,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",s)&&a.addEventListener("dispose",s),r.get(a)!==o&&(i.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&i.update(a.instanceColor,t.ARRAY_BUFFER),r.set(a,o))),a.isSkinnedMesh){const t=a.skeleton;r.get(t)!==o&&(t.update(),r.set(t,o))}return h},dispose:function(){r=new WeakMap}}}class Wr extends Ne{constructor(t,e,i,n,r,s,a,o,l,h=1026){if(h!==J&&h!==Q)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===J&&(i=k),void 0===i&&h===Q&&(i=j),super(null,n,r,s,a,o,h,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:N,this.minFilter=void 0!==o?o:N,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}const jr=new Ne,Xr=new Wr(1,1),$r=new Le,qr=new De,Yr=new Zn,Kr=/^(27|83)2$/.test(i.j)?null:[],Zr=/^(27|83)2$/.test(i.j)?null:[],Jr=new Float32Array(16),Qr=new Float32Array(9),ts=new Float32Array(4);function es(t,e,i){const n=t[0];if(n<=0||n>0)return t;const r=e*i;let s=Kr[r];if(void 0===s&&(s=new Float32Array(r),Kr[r]=s),0!==e){n.toArray(s,0);for(let n=1,r=0;n!==e;++n)r+=i,t[n].toArray(s,r)}return s}function is(t,e){if(t.length!==e.length)return!1;for(let i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function ns(t,e){for(let i=0,n=e.length;i<n;i++)t[i]=e[i]}function rs(t,e){let i=Zr[e];void 0===i&&(i=new Int32Array(e),Zr[e]=i);for(let n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function ss(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function as(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(is(i,e))return;t.uniform2fv(this.addr,e),ns(i,e)}}function os(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(is(i,e))return;t.uniform3fv(this.addr,e),ns(i,e)}}function ls(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(is(i,e))return;t.uniform4fv(this.addr,e),ns(i,e)}}function hs(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(is(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),ns(i,e)}else{if(is(i,n))return;ts.set(n),t.uniformMatrix2fv(this.addr,!1,ts),ns(i,n)}}function cs(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(is(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),ns(i,e)}else{if(is(i,n))return;Qr.set(n),t.uniformMatrix3fv(this.addr,!1,Qr),ns(i,n)}}function us(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(is(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),ns(i,e)}else{if(is(i,n))return;Jr.set(n),t.uniformMatrix4fv(this.addr,!1,Jr),ns(i,n)}}function ds(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function ps(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(is(i,e))return;t.uniform2iv(this.addr,e),ns(i,e)}}function ms(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else{if(is(i,e))return;t.uniform3iv(this.addr,e),ns(i,e)}}function fs(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(is(i,e))return;t.uniform4iv(this.addr,e),ns(i,e)}}function gs(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function _s(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(is(i,e))return;t.uniform2uiv(this.addr,e),ns(i,e)}}function ys(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else{if(is(i,e))return;t.uniform3uiv(this.addr,e),ns(i,e)}}function xs(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(is(i,e))return;t.uniform4uiv(this.addr,e),ns(i,e)}}function vs(t,e,i){const n=this.cache,r=i.allocateTextureUnit();let s;n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),this.type===t.SAMPLER_2D_SHADOW?(Xr.compareFunction=515,s=Xr):s=jr,i.setTexture2D(e||s,r)}function bs(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||qr,r)}function Ss(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(e||Yr,r)}function Ts(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||$r,r)}function Ms(t,e){t.uniform1fv(this.addr,e)}function Es(t,e){const i=es(e,this.size,2);t.uniform2fv(this.addr,i)}function ws(t,e){const i=es(e,this.size,3);t.uniform3fv(this.addr,i)}function As(t,e){const i=es(e,this.size,4);t.uniform4fv(this.addr,i)}function Rs(t,e){const i=es(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function Cs(t,e){const i=es(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Ns(t,e){const i=es(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function Ps(t,e){t.uniform1iv(this.addr,e)}function Is(t,e){t.uniform2iv(this.addr,e)}function Us(t,e){t.uniform3iv(this.addr,e)}function Ls(t,e){t.uniform4iv(this.addr,e)}function Ds(t,e){t.uniform1uiv(this.addr,e)}function Bs(t,e){t.uniform2uiv(this.addr,e)}function Fs(t,e){t.uniform3uiv(this.addr,e)}function Os(t,e){t.uniform4uiv(this.addr,e)}function zs(t,e,i){const n=this.cache,r=e.length,s=rs(i,r);is(n,s)||(t.uniform1iv(this.addr,s),ns(n,s));for(let t=0;t!==r;++t)i.setTexture2D(e[t]||jr,s[t])}function ks(t,e,i){const n=this.cache,r=e.length,s=rs(i,r);is(n,s)||(t.uniform1iv(this.addr,s),ns(n,s));for(let t=0;t!==r;++t)i.setTexture3D(e[t]||qr,s[t])}function Vs(t,e,i){const n=this.cache,r=e.length,s=rs(i,r);is(n,s)||(t.uniform1iv(this.addr,s),ns(n,s));for(let t=0;t!==r;++t)i.setTextureCube(e[t]||Yr,s[t])}function Gs(t,e,i){const n=this.cache,r=e.length,s=rs(i,r);is(n,s)||(t.uniform1iv(this.addr,s),ns(n,s));for(let t=0;t!==r;++t)i.setTexture2DArray(e[t]||$r,s[t])}class Hs{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return ss;case 35664:return as;case 35665:return os;case 35666:return ls;case 35674:return hs;case 35675:return cs;case 35676:return us;case 5124:case 35670:return ds;case 35667:case 35671:return ps;case 35668:case 35672:return ms;case 35669:case 35673:return fs;case 5125:return gs;case 36294:return _s;case 36295:return ys;case 36296:return xs;case 35678:case 36198:case 36298:case 36306:case 35682:return vs;case 35679:case 36299:case 36307:return bs;case 35680:case 36300:case 36308:case 36293:return Ss;case 36289:case 36303:case 36311:case 36292:return Ts}}(e.type)}}class Ws{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ms;case 35664:return Es;case 35665:return ws;case 35666:return As;case 35674:return Rs;case 35675:return Cs;case 35676:return Ns;case 5124:case 35670:return Ps;case 35667:case 35671:return Is;case 35668:case 35672:return Us;case 35669:case 35673:return Ls;case 5125:return Ds;case 36294:return Bs;case 36295:return Fs;case 36296:return Os;case 35678:case 36198:case 36298:case 36306:case 35682:return zs;case 35679:case 36299:case 36307:return ks;case 35680:case 36300:case 36308:case 36293:return Vs;case 36289:case 36303:case 36311:case 36292:return Gs}}(e.type)}}class js{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const s=n[r];s.setValue(t,e[s.id],i)}}}const Xs=/(\w+)(\])?(\[|\.)?/g;function $s(t,e){t.seq.push(e),t.map[e.id]=e}function qs(t,e,i){const n=t.name,r=n.length;for(Xs.lastIndex=0;;){const s=Xs.exec(n),a=Xs.lastIndex;let o=s[1];const l="]"===s[2],h=s[3];if(l&&(o|=0),void 0===h||"["===h&&a+2===r){$s(i,void 0===h?new Hs(o,t,e):new Ws(o,t,e));break}{let t=i.map[o];void 0===t&&(t=new js(o),$s(i,t)),i=t}}}class Ys{constructor(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const i=t.getActiveUniform(e,n);qs(i,t.getUniformLocation(e,i.name),this)}}setValue(t,e,i,n){const r=this.map[e];void 0!==r&&r.setValue(t,i,n)}setOptional(t,e,i){const n=e[i];void 0!==n&&this.setValue(t,i,n)}static upload(t,e,i,n){for(let r=0,s=e.length;r!==s;++r){const s=e[r],a=i[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,n)}}static seqWithValue(t,e){const i=[];for(let n=0,r=t.length;n!==r;++n){const r=t[n];r.id in e&&i.push(r)}return i}}function Ks(t,e,i){const n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}const Zs=37297;let Js=0;const Qs=new he;function ta(t,e,i){const n=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(n&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const n=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const i=t.split("\n"),n=[],r=Math.max(e-6,0),s=Math.min(e+6,i.length);for(let t=r;t<s;t++){const r=t+1;n.push(`${r===e?">":" "} ${r}: ${i[t]}`)}return n.join("\n")}(t.getShaderSource(e),n)}return r}function ea(t,e){const i=function(t){ge._getMatrix(Qs,ge.workingColorSpace,t);const e=`mat3( ${Qs.elements.map((t=>t.toFixed(4)))} )`;switch(ge.getTransfer(t)){case Ht:return[e,"LinearTransferOETF"];case Wt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[e,"LinearTransferOETF"]}}(e);return[`vec4 ${t}( vec4 value ) {`,`\treturn ${i[1]}( vec4( value.rgb * ${i[0]}, value.a ) );`,"}"].join("\n")}function ia(t,e){let i;switch(e){case _:i="Linear";break;case y:i="Reinhard";break;case x:i="Cineon";break;case v:i="ACESFilmic";break;case S:i="AgX";break;case T:i="Neutral";break;case b:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}const na=new Fe;function ra(t){return""!==t}function sa(t,e){const i=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function aa(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const oa=/^[ \t]*#include +<([\w\d./]+)>/gm;function la(t){return t.replace(oa,ca)}const ha=new Map;function ca(t,e){let i=hr[e];if(void 0===i){const t=ha.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");i=hr[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return la(i)}const ua=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function da(t){return t.replace(ua,pa)}function pa(t,e,i,n){let r="";for(let t=parseInt(e);t<parseInt(i);t++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function ma(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function fa(t,e,i,n){const r=t.getContext(),s=i.defines;let h=i.vertexShader,c=i.fragmentShader;const u=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===a?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===o?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===l&&(e="SHADOWMAP_TYPE_VSM"),e}(i),d=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case M:case E:e="ENVMAP_TYPE_CUBE";break;case w:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),_=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===E&&(e="ENVMAP_MODE_REFRACTION"),e}(i),y=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case p:e="ENVMAP_BLENDING_MULTIPLY";break;case m:e="ENVMAP_BLENDING_MIX";break;case f:e="ENVMAP_BLENDING_ADD"}return e}(i),x=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const i=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:n,maxMip:i}}(i),v=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ra).join("\n")}(i),b=function(t){const e=[];for(const i in t){const n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(s),S=r.createProgram();let T,A,R=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(T=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,b].filter(ra).join("\n"),T.length>0&&(T+="\n"),A=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,b].filter(ra).join("\n"),A.length>0&&(A+="\n")):(T=[ma(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,b,i.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",i.batching?"#define USE_BATCHING":"",i.batchingColor?"#define USE_BATCHING_COLOR":"",i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.instancingMorph?"#define USE_INSTANCING_MORPH":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+_:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.displacementMap?"#define USE_DISPLACEMENTMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.mapUv?"#define MAP_UV "+i.mapUv:"",i.alphaMapUv?"#define ALPHAMAP_UV "+i.alphaMapUv:"",i.lightMapUv?"#define LIGHTMAP_UV "+i.lightMapUv:"",i.aoMapUv?"#define AOMAP_UV "+i.aoMapUv:"",i.emissiveMapUv?"#define EMISSIVEMAP_UV "+i.emissiveMapUv:"",i.bumpMapUv?"#define BUMPMAP_UV "+i.bumpMapUv:"",i.normalMapUv?"#define NORMALMAP_UV "+i.normalMapUv:"",i.displacementMapUv?"#define DISPLACEMENTMAP_UV "+i.displacementMapUv:"",i.metalnessMapUv?"#define METALNESSMAP_UV "+i.metalnessMapUv:"",i.roughnessMapUv?"#define ROUGHNESSMAP_UV "+i.roughnessMapUv:"",i.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+i.anisotropyMapUv:"",i.clearcoatMapUv?"#define CLEARCOATMAP_UV "+i.clearcoatMapUv:"",i.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+i.clearcoatNormalMapUv:"",i.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+i.clearcoatRoughnessMapUv:"",i.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+i.iridescenceMapUv:"",i.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+i.iridescenceThicknessMapUv:"",i.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+i.sheenColorMapUv:"",i.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+i.sheenRoughnessMapUv:"",i.specularMapUv?"#define SPECULARMAP_UV "+i.specularMapUv:"",i.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+i.specularColorMapUv:"",i.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+i.specularIntensityMapUv:"",i.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+i.transmissionMapUv:"",i.thicknessMapUv?"#define THICKNESSMAP_UV "+i.thicknessMapUv:"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ra).join("\n"),A=[ma(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,b,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+d:"",i.envMap?"#define "+_:"",i.envMap?"#define "+y:"",x?"#define CUBEUV_TEXEL_WIDTH "+x.texelWidth:"",x?"#define CUBEUV_TEXEL_HEIGHT "+x.texelHeight:"",x?"#define CUBEUV_MAX_MIP "+x.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.dispersion?"#define USE_DISPERSION":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor||i.batchingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==g?"#define TONE_MAPPING":"",i.toneMapping!==g?hr.tonemapping_pars_fragment:"",i.toneMapping!==g?ia("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",hr.colorspace_pars_fragment,ea("linearToOutputTexel",i.outputColorSpace),(ge.getLuminanceCoefficients(na),["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${na.x.toFixed(4)}, ${na.y.toFixed(4)}, ${na.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(ra).join("\n")),h=la(h),h=sa(h,i),h=aa(h,i),c=la(c),c=sa(c,i),c=aa(c,i),h=da(h),c=da(c),!0!==i.isRawShaderMaterial&&(R="#version 300 es\n",T=[v,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+T,A=["#define varying in",i.glslVersion===$t?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===$t?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+A);const C=R+T+h,N=R+A+c,P=Ks(r,r.VERTEX_SHADER,C),I=Ks(r,r.FRAGMENT_SHADER,N);function U(e){if(t.debug.checkShaderErrors){const i=r.getProgramInfoLog(S).trim(),n=r.getShaderInfoLog(P).trim(),s=r.getShaderInfoLog(I).trim();let a=!0,o=!0;if(!1===r.getProgramParameter(S,r.LINK_STATUS))if(a=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(r,S,P,I);else{const t=ta(r,P,"vertex"),n=ta(r,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(S,r.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+i+"\n"+t+"\n"+n)}else""!==i?console.warn("THREE.WebGLProgram: Program Info Log:",i):""!==n&&""!==s||(o=!1);o&&(e.diagnostics={runnable:a,programLog:i,vertexShader:{log:n,prefix:T},fragmentShader:{log:s,prefix:A}})}r.deleteShader(P),r.deleteShader(I),L=new Ys(r,S),D=function(t,e){const i={},n=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const n=t.getActiveAttrib(e,r),s=n.name;let a=1;n.type===t.FLOAT_MAT2&&(a=2),n.type===t.FLOAT_MAT3&&(a=3),n.type===t.FLOAT_MAT4&&(a=4),i[s]={type:n.type,location:t.getAttribLocation(e,s),locationSize:a}}return i}(r,S)}let L,D;r.attachShader(S,P),r.attachShader(S,I),void 0!==i.index0AttributeName?r.bindAttribLocation(S,0,i.index0AttributeName):!0===i.morphTargets&&r.bindAttribLocation(S,0,"position"),r.linkProgram(S),this.getUniforms=function(){return void 0===L&&U(this),L},this.getAttributes=function(){return void 0===D&&U(this),D};let B=!1===i.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===B&&(B=r.getProgramParameter(S,Zs)),B},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(S),this.program=void 0},this.type=i.shaderType,this.name=i.shaderName,this.id=Js++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=P,this.fragmentShader=I,this}let ga=0;class _a{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,i=t.fragmentShader,n=this._getShaderStage(e),r=this._getShaderStage(i),s=this._getShaderCacheForMaterial(t);return!1===s.has(n)&&(s.add(n),n.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let i=e.get(t);return void 0===i&&(i=new Set,e.set(t,i)),i}_getShaderStage(t){const e=this.shaderCache;let i=e.get(t);return void 0===i&&(i=new ya(t),e.set(t,i)),i}}class ya{constructor(t){this.id=ga++,this.code=t,this.usedTimes=0}}function xa(t,e,i,n,r,s,a){const o=new Mi,l=new _a,u=new Set,d=[],p=r.logarithmicDepthBuffer,m=r.vertexTextures;let f=r.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(t){return u.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(s,o,d,x,v){const b=x.fog,S=v.geometry,T=s.isMeshStandardMaterial?x.environment:null,M=(s.isMeshStandardMaterial?i:e).get(s.envMap||T),E=M&&M.mapping===w?M.image.height:null,A=_[s.type];null!==s.precision&&(f=r.getMaxPrecision(s.precision),f!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",f,"instead."));const R=S.morphAttributes.position||S.morphAttributes.normal||S.morphAttributes.color,C=void 0!==R?R.length:0;let N,P,I,U,L=0;if(void 0!==S.morphAttributes.position&&(L=1),void 0!==S.morphAttributes.normal&&(L=2),void 0!==S.morphAttributes.color&&(L=3),A){const t=ur[A];N=t.vertexShader,P=t.fragmentShader}else N=s.vertexShader,P=s.fragmentShader,l.update(s),I=l.getVertexShaderID(s),U=l.getFragmentShaderID(s);const D=t.getRenderTarget(),B=t.state.buffers.depth.getReversed(),F=!0===v.isInstancedMesh,O=!0===v.isBatchedMesh,z=!!s.map,k=!!s.matcap,V=!!M,G=!!s.aoMap,H=!!s.lightMap,W=!!s.bumpMap,j=!!s.normalMap,X=!!s.displacementMap,$=!!s.emissiveMap,q=!!s.metalnessMap,Y=!!s.roughnessMap,K=s.anisotropy>0,Z=s.clearcoat>0,J=s.dispersion>0,Q=s.iridescence>0,tt=s.sheen>0,et=s.transmission>0,it=K&&!!s.anisotropyMap,nt=Z&&!!s.clearcoatMap,rt=Z&&!!s.clearcoatNormalMap,st=Z&&!!s.clearcoatRoughnessMap,at=Q&&!!s.iridescenceMap,ot=Q&&!!s.iridescenceThicknessMap,lt=tt&&!!s.sheenColorMap,ht=tt&&!!s.sheenRoughnessMap,ct=!!s.specularMap,ut=!!s.specularColorMap,dt=!!s.specularIntensityMap,pt=et&&!!s.transmissionMap,mt=et&&!!s.thicknessMap,ft=!!s.gradientMap,gt=!!s.alphaMap,_t=s.alphaTest>0,yt=!!s.alphaHash,xt=!!s.extensions;let vt=g;s.toneMapped&&(null!==D&&!0!==D.isXRRenderTarget||(vt=t.toneMapping));const bt={shaderID:A,shaderType:s.type,shaderName:s.name,vertexShader:N,fragmentShader:P,defines:s.defines,customVertexShaderID:I,customFragmentShaderID:U,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:f,batching:O,batchingColor:O&&null!==v._colorsTexture,instancing:F,instancingColor:F&&null!==v.instanceColor,instancingMorph:F&&null!==v.morphTexture,supportsVertexTextures:m,outputColorSpace:null===D?t.outputColorSpace:!0===D.isXRRenderTarget?D.texture.colorSpace:Gt,alphaToCoverage:!!s.alphaToCoverage,map:z,matcap:k,envMap:V,envMapMode:V&&M.mapping,envMapCubeUVHeight:E,aoMap:G,lightMap:H,bumpMap:W,normalMap:j,displacementMap:m&&X,emissiveMap:$,normalMapObjectSpace:j&&1===s.normalMapType,normalMapTangentSpace:j&&0===s.normalMapType,metalnessMap:q,roughnessMap:Y,anisotropy:K,anisotropyMap:it,clearcoat:Z,clearcoatMap:nt,clearcoatNormalMap:rt,clearcoatRoughnessMap:st,dispersion:J,iridescence:Q,iridescenceMap:at,iridescenceThicknessMap:ot,sheen:tt,sheenColorMap:lt,sheenRoughnessMap:ht,specularMap:ct,specularColorMap:ut,specularIntensityMap:dt,transmission:et,transmissionMap:pt,thicknessMap:mt,gradientMap:ft,opaque:!1===s.transparent&&1===s.blending&&!1===s.alphaToCoverage,alphaMap:gt,alphaTest:_t,alphaHash:yt,combine:s.combine,mapUv:z&&y(s.map.channel),aoMapUv:G&&y(s.aoMap.channel),lightMapUv:H&&y(s.lightMap.channel),bumpMapUv:W&&y(s.bumpMap.channel),normalMapUv:j&&y(s.normalMap.channel),displacementMapUv:X&&y(s.displacementMap.channel),emissiveMapUv:$&&y(s.emissiveMap.channel),metalnessMapUv:q&&y(s.metalnessMap.channel),roughnessMapUv:Y&&y(s.roughnessMap.channel),anisotropyMapUv:it&&y(s.anisotropyMap.channel),clearcoatMapUv:nt&&y(s.clearcoatMap.channel),clearcoatNormalMapUv:rt&&y(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:st&&y(s.clearcoatRoughnessMap.channel),iridescenceMapUv:at&&y(s.iridescenceMap.channel),iridescenceThicknessMapUv:ot&&y(s.iridescenceThicknessMap.channel),sheenColorMapUv:lt&&y(s.sheenColorMap.channel),sheenRoughnessMapUv:ht&&y(s.sheenRoughnessMap.channel),specularMapUv:ct&&y(s.specularMap.channel),specularColorMapUv:ut&&y(s.specularColorMap.channel),specularIntensityMapUv:dt&&y(s.specularIntensityMap.channel),transmissionMapUv:pt&&y(s.transmissionMap.channel),thicknessMapUv:mt&&y(s.thicknessMap.channel),alphaMapUv:gt&&y(s.alphaMap.channel),vertexTangents:!!S.attributes.tangent&&(j||K),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!S.attributes.color&&4===S.attributes.color.itemSize,pointsUvs:!0===v.isPoints&&!!S.attributes.uv&&(z||gt),fog:!!b,useFog:!0===s.fog,fogExp2:!!b&&b.isFogExp2,flatShading:!0===s.flatShading,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:p,reverseDepthBuffer:B,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==S.morphAttributes.position,morphNormals:void 0!==S.morphAttributes.normal,morphColors:void 0!==S.morphAttributes.color,morphTargetsCount:C,morphTextureStride:L,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&d.length>0,shadowMapType:t.shadowMap.type,toneMapping:vt,decodeVideoTexture:z&&!0===s.map.isVideoTexture&&ge.getTransfer(s.map.colorSpace)===Wt,decodeVideoTextureEmissive:$&&!0===s.emissiveMap.isVideoTexture&&ge.getTransfer(s.emissiveMap.colorSpace)===Wt,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===c,flipSided:s.side===h,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionClipCullDistance:xt&&!0===s.extensions.clipCullDistance&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(xt&&!0===s.extensions.multiDraw||O)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:s.customProgramCacheKey()};return bt.vertexUv1s=u.has(1),bt.vertexUv2s=u.has(2),bt.vertexUv3s=u.has(3),u.clear(),bt},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.customVertexShaderID),i.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(i,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0),e.instancing&&o.enable(1),e.instancingColor&&o.enable(2),e.instancingMorph&&o.enable(3),e.matcap&&o.enable(4),e.envMap&&o.enable(5),e.normalMapObjectSpace&&o.enable(6),e.normalMapTangentSpace&&o.enable(7),e.clearcoat&&o.enable(8),e.iridescence&&o.enable(9),e.alphaTest&&o.enable(10),e.vertexColors&&o.enable(11),e.vertexAlphas&&o.enable(12),e.vertexUv1s&&o.enable(13),e.vertexUv2s&&o.enable(14),e.vertexUv3s&&o.enable(15),e.vertexTangents&&o.enable(16),e.anisotropy&&o.enable(17),e.alphaHash&&o.enable(18),e.batching&&o.enable(19),e.dispersion&&o.enable(20),e.batchingColor&&o.enable(21),t.push(o.mask),o.disableAll(),e.fog&&o.enable(0),e.useFog&&o.enable(1),e.flatShading&&o.enable(2),e.logarithmicDepthBuffer&&o.enable(3),e.reverseDepthBuffer&&o.enable(4),e.skinning&&o.enable(5),e.morphTargets&&o.enable(6),e.morphNormals&&o.enable(7),e.morphColors&&o.enable(8),e.premultipliedAlpha&&o.enable(9),e.shadowMapEnabled&&o.enable(10),e.doubleSided&&o.enable(11),e.flipSided&&o.enable(12),e.useDepthPacking&&o.enable(13),e.dithering&&o.enable(14),e.transmission&&o.enable(15),e.sheen&&o.enable(16),e.opaque&&o.enable(17),e.pointsUvs&&o.enable(18),e.decodeVideoTexture&&o.enable(19),e.decodeVideoTextureEmissive&&o.enable(20),e.alphaToCoverage&&o.enable(21),t.push(o.mask)}(i,e),i.push(t.outputColorSpace)),i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=_[t.type];let i;if(e){const t=ur[e];i=Gn.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let n;for(let t=0,e=d.length;t<e;t++){const e=d[t];if(e.cacheKey===i){n=e,++n.usedTimes;break}}return void 0===n&&(n=new fa(t,i,e,s),d.push(n)),n},releaseProgram:function(t){if(0==--t.usedTimes){const e=d.indexOf(t);d[e]=d[d.length-1],d.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:d,dispose:function(){l.dispose()}}}function va(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function ba(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Sa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ta(){const t=[];let e=0;const i=[],n=[],r=[];function s(i,n,r,s,a,o){let l=t[e];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:s,renderOrder:i.renderOrder,z:a,group:o},t[e]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=s,l.renderOrder=i.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:i,transmissive:n,transparent:r,init:function(){e=0,i.length=0,n.length=0,r.length=0},push:function(t,e,a,o,l,h){const c=s(t,e,a,o,l,h);a.transmission>0?n.push(c):!0===a.transparent?r.push(c):i.push(c)},unshift:function(t,e,a,o,l,h){const c=s(t,e,a,o,l,h);a.transmission>0?n.unshift(c):!0===a.transparent?r.unshift(c):i.unshift(c)},finish:function(){for(let i=e,n=t.length;i<n;i++){const e=t[i];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){i.length>1&&i.sort(t||ba),n.length>1&&n.sort(e||Sa),r.length>1&&r.sort(e||Sa)}}}function Ma(){let t=new WeakMap;return{get:function(e,i){const n=t.get(e);let r;return void 0===n?(r=new Ta,t.set(e,[r])):i>=n.length?(r=new Ta,n.push(r)):r=n[i],r},dispose:function(){t=new WeakMap}}}function Ea(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new Fe,color:new an};break;case"SpotLight":i={position:new Fe,direction:new Fe,color:new an,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new Fe,color:new an,distance:0,decay:0};break;case"HemisphereLight":i={direction:new Fe,skyColor:new an,groundColor:new an};break;case"RectAreaLight":i={color:new an,position:new Fe,halfWidth:new Fe,halfHeight:new Fe}}return t[e.id]=i,i}}}let wa=0;function Aa(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function Ra(t){const e=new Ea,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"PointLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)n.probe.push(new Fe);const r=new Fe,s=new pi,a=new pi;return{setup:function(r){let s=0,a=0,o=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let l=0,h=0,c=0,u=0,d=0,p=0,m=0,f=0,g=0,_=0,y=0;r.sort(Aa);for(let t=0,x=r.length;t<x;t++){const x=r[t],v=x.color,b=x.intensity,S=x.distance,T=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)s+=v.r*b,a+=v.g*b,o+=v.b*b;else if(x.isLightProbe){for(let t=0;t<9;t++)n.probe[t].addScaledVector(x.sh.coefficients[t],b);y++}else if(x.isDirectionalLight){const t=e.get(x);if(t.color.copy(x.color).multiplyScalar(x.intensity),x.castShadow){const t=x.shadow,e=i.get(x);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,n.directionalShadow[l]=e,n.directionalShadowMap[l]=T,n.directionalShadowMatrix[l]=x.shadow.matrix,p++}n.directional[l]=t,l++}else if(x.isSpotLight){const t=e.get(x);t.position.setFromMatrixPosition(x.matrixWorld),t.color.copy(v).multiplyScalar(b),t.distance=S,t.coneCos=Math.cos(x.angle),t.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),t.decay=x.decay,n.spot[c]=t;const r=x.shadow;if(x.map&&(n.spotLightMap[g]=x.map,g++,r.updateMatrices(x),x.castShadow&&_++),n.spotLightMatrix[c]=r.matrix,x.castShadow){const t=i.get(x);t.shadowIntensity=r.intensity,t.shadowBias=r.bias,t.shadowNormalBias=r.normalBias,t.shadowRadius=r.radius,t.shadowMapSize=r.mapSize,n.spotShadow[c]=t,n.spotShadowMap[c]=T,f++}c++}else if(x.isRectAreaLight){const t=e.get(x);t.color.copy(v).multiplyScalar(b),t.halfWidth.set(.5*x.width,0,0),t.halfHeight.set(0,.5*x.height,0),n.rectArea[u]=t,u++}else if(x.isPointLight){const t=e.get(x);if(t.color.copy(x.color).multiplyScalar(x.intensity),t.distance=x.distance,t.decay=x.decay,x.castShadow){const t=x.shadow,e=i.get(x);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,n.pointShadow[h]=e,n.pointShadowMap[h]=T,n.pointShadowMatrix[h]=x.shadow.matrix,m++}n.point[h]=t,h++}else if(x.isHemisphereLight){const t=e.get(x);t.skyColor.copy(x.color).multiplyScalar(b),t.groundColor.copy(x.groundColor).multiplyScalar(b),n.hemi[d]=t,d++}}u>0&&(!0===t.has("OES_texture_float_linear")?(n.rectAreaLTC1=cr.LTC_FLOAT_1,n.rectAreaLTC2=cr.LTC_FLOAT_2):(n.rectAreaLTC1=cr.LTC_HALF_1,n.rectAreaLTC2=cr.LTC_HALF_2)),n.ambient[0]=s,n.ambient[1]=a,n.ambient[2]=o;const x=n.hash;x.directionalLength===l&&x.pointLength===h&&x.spotLength===c&&x.rectAreaLength===u&&x.hemiLength===d&&x.numDirectionalShadows===p&&x.numPointShadows===m&&x.numSpotShadows===f&&x.numSpotMaps===g&&x.numLightProbes===y||(n.directional.length=l,n.spot.length=c,n.rectArea.length=u,n.point.length=h,n.hemi.length=d,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=m,n.pointShadowMap.length=m,n.spotShadow.length=f,n.spotShadowMap.length=f,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=m,n.spotLightMatrix.length=f+g-_,n.spotLightMap.length=g,n.numSpotLightShadowsWithMaps=_,n.numLightProbes=y,x.directionalLength=l,x.pointLength=h,x.spotLength=c,x.rectAreaLength=u,x.hemiLength=d,x.numDirectionalShadows=p,x.numPointShadows=m,x.numSpotShadows=f,x.numSpotMaps=g,x.numLightProbes=y,n.version=wa++)},setupView:function(t,e){let i=0,o=0,l=0,h=0,c=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=n.directional[i];t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),i++}else if(d.isSpotLight){const t=n.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const t=n.rectArea[h];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),a.identity(),s.copy(d.matrixWorld),s.premultiply(u),a.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),h++}else if(d.isPointLight){const t=n.point[o];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o++}else if(d.isHemisphereLight){const t=n.hemi[c];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),c++}}},state:n}}function Ca(t){const e=new Ra(t),i=[],n=[],r={lightsArray:i,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){r.camera=t,i.length=0,n.length=0},state:r,setupLights:function(){e.setup(i)},setupLightsView:function(t){e.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){n.push(t)}}}function Na(t){let e=new WeakMap;return{get:function(i,n=0){const r=e.get(i);let s;return void 0===r?(s=new Ca(t),e.set(i,[s])):n>=r.length?(s=new Ca(t),r.push(s)):s=r[n],s},dispose:function(){e=new WeakMap}}}class Pa extends hn{static get type(){return"MeshDepthMaterial"}constructor(t){super(),this.isMeshDepthMaterial=!0,this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Ia extends hn{static get type(){return"MeshDistanceMaterial"}constructor(t){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Ua(t,e,i){let n=new sr;const r=new le,s=new le,o=new Pe,u=new Pa({depthPacking:3201}),d=new Ia,p={},m=i.maxTextureSize,f={0:h,[h]:0,[c]:c},g=new Hn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new le},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=g.clone();_.defines.HORIZONTAL_PASS=1;const y=new Mn;y.setAttribute("position",new pn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Bn(y,g),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=a;let b=this.type;function S(i,n){const s=e.update(x);g.defines.VSM_SAMPLES!==i.blurSamples&&(g.defines.VSM_SAMPLES=i.blurSamples,_.defines.VSM_SAMPLES=i.blurSamples,g.needsUpdate=!0,_.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new Ue(r.x,r.y)),g.uniforms.shadow_pass.value=i.map.texture,g.uniforms.resolution.value=i.mapSize,g.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,s,g,x,null),_.uniforms.shadow_pass.value=i.mapPass.texture,_.uniforms.resolution.value=i.mapSize,_.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,s,_,x,null)}function T(e,i,n,r){let s=null;const a=!0===n.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===n.isPointLight?d:u,t.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0){const t=s.uuid,e=i.uuid;let n=p[t];void 0===n&&(n={},p[t]=n);let r=n[e];void 0===r&&(r=s.clone(),n[e]=r,i.addEventListener("dispose",E)),s=r}return s.visible=i.visible,s.wireframe=i.wireframe,s.side=r===l?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:f[i.side],s.alphaMap=i.alphaMap,s.alphaTest=i.alphaTest,s.map=i.map,s.clipShadows=i.clipShadows,s.clippingPlanes=i.clippingPlanes,s.clipIntersection=i.clipIntersection,s.displacementMap=i.displacementMap,s.displacementScale=i.displacementScale,s.displacementBias=i.displacementBias,s.wireframeLinewidth=i.wireframeLinewidth,s.linewidth=i.linewidth,!0===n.isPointLight&&!0===s.isMeshDistanceMaterial&&(t.properties.get(s).light=n),s}function M(i,r,s,a,o){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===l)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);const n=e.update(i),l=i.material;if(Array.isArray(l)){const e=n.groups;for(let h=0,c=e.length;h<c;h++){const c=e[h],u=l[c.materialIndex];if(u&&u.visible){const e=T(i,u,a,o);i.onBeforeShadow(t,i,r,s,n,e,c),t.renderBufferDirect(s,null,n,e,i,c),i.onAfterShadow(t,i,r,s,n,e,c)}}}else if(l.visible){const e=T(i,l,a,o);i.onBeforeShadow(t,i,r,s,n,e,null),t.renderBufferDirect(s,null,n,e,i,null),i.onAfterShadow(t,i,r,s,n,e,null)}}const h=i.children;for(let t=0,e=h.length;t<e;t++)M(h[t],r,s,a,o)}function E(t){t.target.removeEventListener("dispose",E);for(const e in p){const i=p[e],n=t.target.uuid;n in i&&(i[n].dispose(),delete i[n])}}this.render=function(e,i,a){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=b!==l&&this.type===l,f=b===l&&this.type!==l;for(let h=0,c=e.length;h<c;h++){const c=e[h],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const g=u.getFrameExtents();if(r.multiply(g),s.copy(u.mapSize),(r.x>m||r.y>m)&&(r.x>m&&(s.x=Math.floor(m/g.x),r.x=s.x*g.x,u.mapSize.x=s.x),r.y>m&&(s.y=Math.floor(m/g.y),r.y=s.y*g.y,u.mapSize.y=s.y)),null===u.map||!0===p||!0===f){const t=this.type!==l?{minFilter:N,magFilter:N}:{};null!==u.map&&u.map.dispose(),u.map=new Ue(r.x,r.y,t),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const _=u.getViewportCount();for(let t=0;t<_;t++){const e=u.getViewport(t);o.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(o),u.updateMatrices(c,t),n=u.getFrustum(),M(i,a,u.camera,c,this.type)}!0!==u.isPointLightShadow&&this.type===l&&S(u,a),u.needsUpdate=!1}b=this.type,v.needsUpdate=!1,t.setRenderTarget(h,c,u)}}const La={0:1,2:6,4:7,3:5,1:0,6:2,7:4,5:3};function Da(t,e){const i=new function(){let e=!1;const i=new Pe;let n=null;const r=new Pe(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,s,a,o){!0===o&&(e*=a,n*=a,s*=a),i.set(e,n,s,a),!1===r.equals(i)&&(t.clearColor(e,n,s,a),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},n=new function(){let i=!1,n=!1,r=null,s=null,a=null;return{setReversed:function(t){if(n!==t){const t=e.get("EXT_clip_control");n?t.clipControlEXT(t.LOWER_LEFT_EXT,t.ZERO_TO_ONE_EXT):t.clipControlEXT(t.LOWER_LEFT_EXT,t.NEGATIVE_ONE_TO_ONE_EXT);const i=a;a=null,this.setClear(i)}n=t},getReversed:function(){return n},setTest:function(e){e?W(t.DEPTH_TEST):j(t.DEPTH_TEST)},setMask:function(e){r===e||i||(t.depthMask(e),r=e)},setFunc:function(e){if(n&&(e=La[e]),s!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}s=e}},setLocked:function(t){i=t},setClear:function(e){a!==e&&(n&&(e=1-e),t.clearDepth(e),a=e)},reset:function(){i=!1,r=null,s=null,a=null,n=!1}}},r=new function(){let e=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,h=null;return{setTest:function(i){e||(i?W(t.STENCIL_TEST):j(t.STENCIL_TEST))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,a){n===e&&r===i&&s===a||(t.stencilFunc(e,i,a),n=e,r=i,s=a)},setOp:function(e,i,n){a===e&&o===i&&l===n||(t.stencilOp(e,i,n),a=e,o=i,l=n)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,h=null}}},s=new WeakMap,a=new WeakMap;let o={},l={},p=new WeakMap,m=[],f=null,g=!1,_=null,y=null,x=null,v=null,b=null,S=null,T=null,M=new an(0,0,0),E=0,w=!1,A=null,R=null,C=null,N=null,P=null;const I=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,L=0;const D=t.getParameter(t.VERSION);-1!==D.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(D)[1]),U=L>=1):-1!==D.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),U=L>=2);let B=null,F={};const O=t.getParameter(t.SCISSOR_BOX),z=t.getParameter(t.VIEWPORT),k=(new Pe).fromArray(O),V=(new Pe).fromArray(z);function G(e,i,n,r){const s=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let a=0;a<n;a++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(i,0,t.RGBA,1,1,r,0,t.RGBA,t.UNSIGNED_BYTE,s):t.texImage2D(i+a,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,s);return a}const H={};function W(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function j(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}H[t.TEXTURE_2D]=G(t.TEXTURE_2D,t.TEXTURE_2D,1),H[t.TEXTURE_CUBE_MAP]=G(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),H[t.TEXTURE_2D_ARRAY]=G(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),H[t.TEXTURE_3D]=G(t.TEXTURE_3D,t.TEXTURE_3D,1,1),i.setClear(0,0,0,1),n.setClear(1),r.setClear(0),W(t.DEPTH_TEST),n.setFunc(3),Y(!1),K(1),W(t.CULL_FACE),q(0);const X={[d]:t.FUNC_ADD,101:t.FUNC_SUBTRACT,102:t.FUNC_REVERSE_SUBTRACT};X[103]=t.MIN,X[104]=t.MAX;const $={200:t.ZERO,201:t.ONE,202:t.SRC_COLOR,204:t.SRC_ALPHA,210:t.SRC_ALPHA_SATURATE,208:t.DST_COLOR,206:t.DST_ALPHA,203:t.ONE_MINUS_SRC_COLOR,205:t.ONE_MINUS_SRC_ALPHA,209:t.ONE_MINUS_DST_COLOR,207:t.ONE_MINUS_DST_ALPHA,211:t.CONSTANT_COLOR,212:t.ONE_MINUS_CONSTANT_COLOR,213:t.CONSTANT_ALPHA,214:t.ONE_MINUS_CONSTANT_ALPHA};function q(e,i,n,r,s,a,o,l,h,c){if(0!==e){if(!1===g&&(W(t.BLEND),g=!0),5===e)s=s||i,a=a||n,o=o||r,i===y&&s===b||(t.blendEquationSeparate(X[i],X[s]),y=i,b=s),n===x&&r===v&&a===S&&o===T||(t.blendFuncSeparate($[n],$[r],$[a],$[o]),x=n,v=r,S=a,T=o),!1!==l.equals(M)&&h===E||(t.blendColor(l.r,l.g,l.b,h),M.copy(l),E=h),_=e,w=!1;else if(e!==_||c!==w){if(y===d&&b===d||(t.blendEquation(t.FUNC_ADD),y=d,b=d),c)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case u:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case u:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}x=null,v=null,S=null,T=null,M.set(0,0,0),E=0,_=e,w=c}}else!0===g&&(j(t.BLEND),g=!1)}function Y(e){A!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),A=e)}function K(e){0!==e?(W(t.CULL_FACE),e!==R&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):j(t.CULL_FACE),R=e}function Z(e,i,n){e?(W(t.POLYGON_OFFSET_FILL),N===i&&P===n||(t.polygonOffset(i,n),N=i,P=n)):j(t.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:n,stencil:r},enable:W,disable:j,bindFramebuffer:function(e,i){return l[e]!==i&&(t.bindFramebuffer(e,i),l[e]=i,e===t.DRAW_FRAMEBUFFER&&(l[t.FRAMEBUFFER]=i),e===t.FRAMEBUFFER&&(l[t.DRAW_FRAMEBUFFER]=i),!0)},drawBuffers:function(e,i){let n=m,r=!1;if(e){n=p.get(i),void 0===n&&(n=[],p.set(i,n));const s=e.textures;if(n.length!==s.length||n[0]!==t.COLOR_ATTACHMENT0){for(let e=0,i=s.length;e<i;e++)n[e]=t.COLOR_ATTACHMENT0+e;n.length=s.length,r=!0}}else n[0]!==t.BACK&&(n[0]=t.BACK,r=!0);r&&t.drawBuffers(n)},useProgram:function(e){return f!==e&&(t.useProgram(e),f=e,!0)},setBlending:q,setMaterial:function(e,s){e.side===c?j(t.CULL_FACE):W(t.CULL_FACE);let a=e.side===h;s&&(a=!a),Y(a),1===e.blending&&!1===e.transparent?q(0):q(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.blendColor,e.blendAlpha,e.premultipliedAlpha),n.setFunc(e.depthFunc),n.setTest(e.depthTest),n.setMask(e.depthWrite),i.setMask(e.colorWrite);const o=e.stencilWrite;r.setTest(o),o&&(r.setMask(e.stencilWriteMask),r.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),r.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Z(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?W(t.SAMPLE_ALPHA_TO_COVERAGE):j(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:Y,setCullFace:K,setLineWidth:function(e){e!==C&&(U&&t.lineWidth(e),C=e)},setPolygonOffset:Z,setScissorTest:function(e){e?W(t.SCISSOR_TEST):j(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+I-1),B!==e&&(t.activeTexture(e),B=e)},bindTexture:function(e,i,n){void 0===n&&(n=null===B?t.TEXTURE0+I-1:B);let r=F[n];void 0===r&&(r={type:void 0,texture:void 0},F[n]=r),r.type===e&&r.texture===i||(B!==n&&(t.activeTexture(n),B=n),t.bindTexture(e,i||H[e]),r.type=e,r.texture=i)},unbindTexture:function(){const e=F[B];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,i){let n=a.get(i);void 0===n&&(n=new WeakMap,a.set(i,n));let r=n.get(e);void 0===r&&(r=t.getUniformBlockIndex(i,e.name),n.set(e,r))},uniformBlockBinding:function(e,i){const n=a.get(i).get(e);s.get(i)!==n&&(t.uniformBlockBinding(i,n,e.__bindingPointIndex),s.set(i,n))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===k.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),k.copy(e))},viewport:function(e){!1===V.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),V.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),n.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},B=null,F={},l={},p=new WeakMap,m=[],f=null,g=!1,_=null,y=null,x=null,v=null,b=null,S=null,T=null,M=new an(0,0,0),E=0,w=!1,A=null,R=null,C=null,N=null,P=null,k.set(0,0,t.canvas.width,t.canvas.height),V.set(0,0,t.canvas.width,t.canvas.height),i.reset(),n.reset(),r.reset()}}}function Ba(t,e,i,n){const r=function(t){switch(t){case D:case B:return{byteLength:1,components:1};case O:case F:case G:return{byteLength:2,components:1};case H:case W:return{byteLength:2,components:4};case k:case z:case V:return{byteLength:4,components:1};case X:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(n);switch(i){case $:case K:return t*e;case Z:return t*e*2;case tt:case et:return t*e/r.components*r.byteLength;case it:case nt:return t*e*2/r.components*r.byteLength;case q:return t*e*3/r.components*r.byteLength;case Y:case rt:return t*e*4/r.components*r.byteLength;case st:case at:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case ot:case lt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case ct:case dt:return Math.max(t,16)*Math.max(e,8)/4;case ht:case ut:return Math.max(t,8)*Math.max(e,8)/2;case pt:case mt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case ft:case gt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case _t:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case yt:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case xt:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case vt:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case bt:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case St:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case Tt:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case Mt:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case Et:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case wt:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case At:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case Rt:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Ct:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case Nt:case Pt:case It:return Math.ceil(t/4)*Math.ceil(e/4)*16;case Ut:case Lt:return Math.ceil(t/4)*Math.ceil(e/4)*8;case Dt:case Bt:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${i} format.`)}function Fa(t,e,i,n,r,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),h=new le,c=new WeakMap;let u;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return p?new OffscreenCanvas(t,e):de("canvas")}function f(t,e,i){let n=1;const r=nt(t);if((r.width>i||r.height>i)&&(n=i/Math.max(r.width,r.height)),n<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const i=Math.floor(n*r.width),s=Math.floor(n*r.height);void 0===u&&(u=m(i,s));const a=e?m(i,s):u;return a.width=i,a.height=s,a.getContext("2d").drawImage(t,0,0,i,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+i+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+")."),t}return t}function g(t){return t.generateMipmaps}function _(e){t.generateMipmap(e)}function y(e){return e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:e.isWebGL3DRenderTarget?t.TEXTURE_3D:e.isWebGLArrayRenderTarget||e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function x(i,n,r,s,a=!1){if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let o=n;if(n===t.RED&&(r===t.FLOAT&&(o=t.R32F),r===t.HALF_FLOAT&&(o=t.R16F),r===t.UNSIGNED_BYTE&&(o=t.R8)),n===t.RED_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.R8UI),r===t.UNSIGNED_SHORT&&(o=t.R16UI),r===t.UNSIGNED_INT&&(o=t.R32UI),r===t.BYTE&&(o=t.R8I),r===t.SHORT&&(o=t.R16I),r===t.INT&&(o=t.R32I)),n===t.RG&&(r===t.FLOAT&&(o=t.RG32F),r===t.HALF_FLOAT&&(o=t.RG16F),r===t.UNSIGNED_BYTE&&(o=t.RG8)),n===t.RG_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RG8UI),r===t.UNSIGNED_SHORT&&(o=t.RG16UI),r===t.UNSIGNED_INT&&(o=t.RG32UI),r===t.BYTE&&(o=t.RG8I),r===t.SHORT&&(o=t.RG16I),r===t.INT&&(o=t.RG32I)),n===t.RGB_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RGB8UI),r===t.UNSIGNED_SHORT&&(o=t.RGB16UI),r===t.UNSIGNED_INT&&(o=t.RGB32UI),r===t.BYTE&&(o=t.RGB8I),r===t.SHORT&&(o=t.RGB16I),r===t.INT&&(o=t.RGB32I)),n===t.RGBA_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RGBA8UI),r===t.UNSIGNED_SHORT&&(o=t.RGBA16UI),r===t.UNSIGNED_INT&&(o=t.RGBA32UI),r===t.BYTE&&(o=t.RGBA8I),r===t.SHORT&&(o=t.RGBA16I),r===t.INT&&(o=t.RGBA32I)),n===t.RGB&&r===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),n===t.RGBA){const e=a?Ht:ge.getTransfer(s);r===t.FLOAT&&(o=t.RGBA32F),r===t.HALF_FLOAT&&(o=t.RGBA16F),r===t.UNSIGNED_BYTE&&(o=e===Wt?t.SRGB8_ALPHA8:t.RGBA8),r===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),r===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function v(e,i){let n;return e?null===i||i===k||i===j?n=t.DEPTH24_STENCIL8:i===V?n=t.DEPTH32F_STENCIL8:i===O&&(n=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===i||i===k||i===j?n=t.DEPTH_COMPONENT24:i===V?n=t.DEPTH_COMPONENT32F:i===O&&(n=t.DEPTH_COMPONENT16),n}function b(t,e){return!0===g(t)||t.isFramebufferTexture&&t.minFilter!==N&&t.minFilter!==I?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function S(t){const e=t.target;e.removeEventListener("dispose",S),function(t){const e=n.get(t);if(void 0===e.__webglInit)return;const i=t.source,r=d.get(i);if(r){const n=r[e.__cacheKey];n.usedTimes--,0===n.usedTimes&&M(t),0===Object.keys(r).length&&d.delete(i)}n.remove(t)}(e),e.isVideoTexture&&c.delete(e)}function T(e){const i=e.target;i.removeEventListener("dispose",T),function(e){const i=n.get(e);if(e.depthTexture&&(e.depthTexture.dispose(),n.remove(e.depthTexture)),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(i.__webglFramebuffer[e]))for(let n=0;n<i.__webglFramebuffer[e].length;n++)t.deleteFramebuffer(i.__webglFramebuffer[e][n]);else t.deleteFramebuffer(i.__webglFramebuffer[e]);i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e])}else{if(Array.isArray(i.__webglFramebuffer))for(let e=0;e<i.__webglFramebuffer.length;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let e=0;e<i.__webglColorRenderbuffer.length;e++)i.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(i.__webglColorRenderbuffer[e]);i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer)}const r=e.textures;for(let e=0,i=r.length;e<i;e++){const i=n.get(r[e]);i.__webglTexture&&(t.deleteTexture(i.__webglTexture),a.memory.textures--),n.remove(r[e])}n.remove(e)}(i)}function M(e){const i=n.get(e);t.deleteTexture(i.__webglTexture);const r=e.source;delete d.get(r)[i.__cacheKey],a.memory.textures--}let E=0;function w(e,r){const s=n.get(e);if(e.isVideoTexture&&function(t){const e=a.render.frame;c.get(t)!==e&&(c.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&s.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void W(s,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.bindTexture(t.TEXTURE_2D,s.__webglTexture,t.TEXTURE0+r)}const B={[A]:t.REPEAT,[R]:t.CLAMP_TO_EDGE,[C]:t.MIRRORED_REPEAT},F={[N]:t.NEAREST,1004:t.NEAREST_MIPMAP_NEAREST,[P]:t.NEAREST_MIPMAP_LINEAR,[I]:t.LINEAR,[U]:t.LINEAR_MIPMAP_NEAREST,[L]:t.LINEAR_MIPMAP_LINEAR},z={512:t.NEVER,519:t.ALWAYS,513:t.LESS,515:t.LEQUAL,514:t.EQUAL,518:t.GEQUAL,516:t.GREATER,517:t.NOTEQUAL};function G(i,s){if(s.type!==V||!1!==e.has("OES_texture_float_linear")||s.magFilter!==I&&s.magFilter!==U&&s.magFilter!==P&&s.magFilter!==L&&s.minFilter!==I&&s.minFilter!==U&&s.minFilter!==P&&s.minFilter!==L||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(i,t.TEXTURE_WRAP_S,B[s.wrapS]),t.texParameteri(i,t.TEXTURE_WRAP_T,B[s.wrapT]),i!==t.TEXTURE_3D&&i!==t.TEXTURE_2D_ARRAY||t.texParameteri(i,t.TEXTURE_WRAP_R,B[s.wrapR]),t.texParameteri(i,t.TEXTURE_MAG_FILTER,F[s.magFilter]),t.texParameteri(i,t.TEXTURE_MIN_FILTER,F[s.minFilter]),s.compareFunction&&(t.texParameteri(i,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(i,t.TEXTURE_COMPARE_FUNC,z[s.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(s.magFilter===N)return;if(s.minFilter!==P&&s.minFilter!==L)return;if(s.type===V&&!1===e.has("OES_texture_float_linear"))return;if(s.anisotropy>1||n.get(s).__currentAnisotropy){const a=e.get("EXT_texture_filter_anisotropic");t.texParameterf(i,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),n.get(s).__currentAnisotropy=s.anisotropy}}}function H(e,i){let n=!1;void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",S));const r=i.source;let s=d.get(r);void 0===s&&(s={},d.set(r,s));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(i);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,n=!0),s[o].usedTimes++;const r=s[e.__cacheKey];void 0!==r&&(s[e.__cacheKey].usedTimes--,0===r.usedTimes&&M(i)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return n}function W(e,a,o){let l=t.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=t.TEXTURE_3D);const h=H(e,a),c=a.source;i.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const u=n.get(c);if(c.version!==u.__version||!0===h){i.activeTexture(t.TEXTURE0+o);const e=ge.getPrimaries(ge.workingColorSpace),n=a.colorSpace===kt?null:ge.getPrimaries(a.colorSpace),d=a.colorSpace===kt||e===n?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=f(a.image,!1,r.maxTextureSize);p=it(a,p);const m=s.convert(a.format,a.colorSpace),y=s.convert(a.type);let S,T=x(a.internalFormat,m,y,a.colorSpace,a.isVideoTexture);G(l,a);const M=a.mipmaps,E=!0!==a.isVideoTexture,w=void 0===u.__version||!0===h,A=c.dataReady,R=b(a,p);if(a.isDepthTexture)T=v(a.format===Q,a.type),w&&(E?i.texStorage2D(t.TEXTURE_2D,1,T,p.width,p.height):i.texImage2D(t.TEXTURE_2D,0,T,p.width,p.height,0,m,y,null));else if(a.isDataTexture)if(M.length>0){E&&w&&i.texStorage2D(t.TEXTURE_2D,R,T,M[0].width,M[0].height);for(let e=0,n=M.length;e<n;e++)S=M[e],E?A&&i.texSubImage2D(t.TEXTURE_2D,e,0,0,S.width,S.height,m,y,S.data):i.texImage2D(t.TEXTURE_2D,e,T,S.width,S.height,0,m,y,S.data);a.generateMipmaps=!1}else E?(w&&i.texStorage2D(t.TEXTURE_2D,R,T,p.width,p.height),A&&i.texSubImage2D(t.TEXTURE_2D,0,0,0,p.width,p.height,m,y,p.data)):i.texImage2D(t.TEXTURE_2D,0,T,p.width,p.height,0,m,y,p.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){E&&w&&i.texStorage3D(t.TEXTURE_2D_ARRAY,R,T,M[0].width,M[0].height,p.depth);for(let e=0,n=M.length;e<n;e++)if(S=M[e],a.format!==Y)if(null!==m)if(E){if(A)if(a.layerUpdates.size>0){const n=Ba(S.width,S.height,a.format,a.type);for(const r of a.layerUpdates){const s=S.data.subarray(r*n/S.data.BYTES_PER_ELEMENT,(r+1)*n/S.data.BYTES_PER_ELEMENT);i.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,r,S.width,S.height,1,m,s)}a.clearLayerUpdates()}else i.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,S.width,S.height,p.depth,m,S.data)}else i.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,T,S.width,S.height,p.depth,0,S.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else E?A&&i.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,S.width,S.height,p.depth,m,y,S.data):i.texImage3D(t.TEXTURE_2D_ARRAY,e,T,S.width,S.height,p.depth,0,m,y,S.data)}else{E&&w&&i.texStorage2D(t.TEXTURE_2D,R,T,M[0].width,M[0].height);for(let e=0,n=M.length;e<n;e++)S=M[e],a.format!==Y?null!==m?E?A&&i.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,S.width,S.height,m,S.data):i.compressedTexImage2D(t.TEXTURE_2D,e,T,S.width,S.height,0,S.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?A&&i.texSubImage2D(t.TEXTURE_2D,e,0,0,S.width,S.height,m,y,S.data):i.texImage2D(t.TEXTURE_2D,e,T,S.width,S.height,0,m,y,S.data)}else if(a.isDataArrayTexture)if(E){if(w&&i.texStorage3D(t.TEXTURE_2D_ARRAY,R,T,p.width,p.height,p.depth),A)if(a.layerUpdates.size>0){const e=Ba(p.width,p.height,a.format,a.type);for(const n of a.layerUpdates){const r=p.data.subarray(n*e/p.data.BYTES_PER_ELEMENT,(n+1)*e/p.data.BYTES_PER_ELEMENT);i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,n,p.width,p.height,1,m,y,r)}a.clearLayerUpdates()}else i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,m,y,p.data)}else i.texImage3D(t.TEXTURE_2D_ARRAY,0,T,p.width,p.height,p.depth,0,m,y,p.data);else if(a.isData3DTexture)E?(w&&i.texStorage3D(t.TEXTURE_3D,R,T,p.width,p.height,p.depth),A&&i.texSubImage3D(t.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,m,y,p.data)):i.texImage3D(t.TEXTURE_3D,0,T,p.width,p.height,p.depth,0,m,y,p.data);else if(a.isFramebufferTexture){if(w)if(E)i.texStorage2D(t.TEXTURE_2D,R,T,p.width,p.height);else{let e=p.width,n=p.height;for(let r=0;r<R;r++)i.texImage2D(t.TEXTURE_2D,r,T,e,n,0,m,y,null),e>>=1,n>>=1}}else if(M.length>0){if(E&&w){const e=nt(M[0]);i.texStorage2D(t.TEXTURE_2D,R,T,e.width,e.height)}for(let e=0,n=M.length;e<n;e++)S=M[e],E?A&&i.texSubImage2D(t.TEXTURE_2D,e,0,0,m,y,S):i.texImage2D(t.TEXTURE_2D,e,T,m,y,S);a.generateMipmaps=!1}else if(E){if(w){const e=nt(p);i.texStorage2D(t.TEXTURE_2D,R,T,e.width,e.height)}A&&i.texSubImage2D(t.TEXTURE_2D,0,0,0,m,y,p)}else i.texImage2D(t.TEXTURE_2D,0,T,m,y,p);g(a)&&_(l),u.__version=c.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function X(e,r,a,l,h,c){const u=s.convert(a.format,a.colorSpace),d=s.convert(a.type),p=x(a.internalFormat,u,d,a.colorSpace),m=n.get(r),f=n.get(a);if(f.__renderTarget=r,!m.__hasExternalTextures){const e=Math.max(1,r.width>>c),n=Math.max(1,r.height>>c);h===t.TEXTURE_3D||h===t.TEXTURE_2D_ARRAY?i.texImage3D(h,c,p,e,n,r.depth,0,u,d,null):i.texImage2D(h,c,p,e,n,0,u,d,null)}i.bindFramebuffer(t.FRAMEBUFFER,e),et(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,h,f.__webglTexture,0,tt(r)):(h===t.TEXTURE_2D||h>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&h<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,h,f.__webglTexture,c),i.bindFramebuffer(t.FRAMEBUFFER,null)}function $(e,i,n){if(t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer){const r=i.depthTexture,s=r&&r.isDepthTexture?r.type:null,a=v(i.stencilBuffer,s),l=i.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,h=tt(i);et(i)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,h,a,i.width,i.height):n?t.renderbufferStorageMultisample(t.RENDERBUFFER,h,a,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,a,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=i.textures;for(let r=0;r<e.length;r++){const a=e[r],l=s.convert(a.format,a.colorSpace),h=s.convert(a.type),c=x(a.internalFormat,l,h,a.colorSpace),u=tt(i);n&&!1===et(i)?t.renderbufferStorageMultisample(t.RENDERBUFFER,u,c,i.width,i.height):et(i)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,u,c,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,c,i.width,i.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function q(e){const r=n.get(e),s=!0===e.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),t){const e=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),r.__depthDisposeCallback=e}r.__boundDepthTexture=t}if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const s=n.get(r.depthTexture);s.__renderTarget=r,s.__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),w(r.depthTexture,0);const a=s.__webglTexture,l=tt(r);if(r.depthTexture.format===J)et(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==Q)throw new Error("Unknown depthTexture format");et(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}(r.__webglFramebuffer,e)}else if(s){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)if(i.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[n]),void 0===r.__webglDepthbuffer[n])r.__webglDepthbuffer[n]=t.createRenderbuffer(),$(r.__webglDepthbuffer[n],e,!1);else{const i=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,s=r.__webglDepthbuffer[n];t.bindRenderbuffer(t.RENDERBUFFER,s),t.framebufferRenderbuffer(t.FRAMEBUFFER,i,t.RENDERBUFFER,s)}}else if(i.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=t.createRenderbuffer(),$(r.__webglDepthbuffer,e,!1);else{const i=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,n=r.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,n),t.framebufferRenderbuffer(t.FRAMEBUFFER,i,t.RENDERBUFFER,n)}i.bindFramebuffer(t.FRAMEBUFFER,null)}const K=[],Z=[];function tt(t){return Math.min(r.maxSamples,t.samples)}function et(t){const i=n.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function it(t,e){const i=t.colorSpace,n=t.format,r=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||i!==Gt&&i!==kt&&(ge.getTransfer(i)===Wt?n===Y&&r===D||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",i)),e}function nt(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(h.width=t.naturalWidth||t.width,h.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(h.width=t.displayWidth,h.height=t.displayHeight):(h.width=t.width,h.height=t.height),h}this.allocateTextureUnit=function(){const t=E;return t>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+r.maxTextures),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=w,this.setTexture2DArray=function(e,r){const s=n.get(e);e.version>0&&s.__version!==e.version?W(s,e,r):i.bindTexture(t.TEXTURE_2D_ARRAY,s.__webglTexture,t.TEXTURE0+r)},this.setTexture3D=function(e,r){const s=n.get(e);e.version>0&&s.__version!==e.version?W(s,e,r):i.bindTexture(t.TEXTURE_3D,s.__webglTexture,t.TEXTURE0+r)},this.setTextureCube=function(e,a){const o=n.get(e);e.version>0&&o.__version!==e.version?function(e,a,o){if(6!==a.image.length)return;const l=H(e,a),h=a.source;i.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const c=n.get(h);if(h.version!==c.__version||!0===l){i.activeTexture(t.TEXTURE0+o);const e=ge.getPrimaries(ge.workingColorSpace),n=a.colorSpace===kt?null:ge.getPrimaries(a.colorSpace),u=a.colorSpace===kt||e===n?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);const d=a.isCompressedTexture||a.image[0].isCompressedTexture,p=a.image[0]&&a.image[0].isDataTexture,m=[];for(let t=0;t<6;t++)m[t]=d||p?p?a.image[t].image:a.image[t]:f(a.image[t],!0,r.maxCubemapSize),m[t]=it(a,m[t]);const y=m[0],v=s.convert(a.format,a.colorSpace),S=s.convert(a.type),T=x(a.internalFormat,v,S,a.colorSpace),M=!0!==a.isVideoTexture,E=void 0===c.__version||!0===l,w=h.dataReady;let A,R=b(a,y);if(G(t.TEXTURE_CUBE_MAP,a),d){M&&E&&i.texStorage2D(t.TEXTURE_CUBE_MAP,R,T,y.width,y.height);for(let e=0;e<6;e++){A=m[e].mipmaps;for(let n=0;n<A.length;n++){const r=A[n];a.format!==Y?null!==v?M?w&&i.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,0,0,r.width,r.height,v,r.data):i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,T,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):M?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,0,0,r.width,r.height,v,S,r.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,T,r.width,r.height,0,v,S,r.data)}}}else{if(A=a.mipmaps,M&&E){A.length>0&&R++;const e=nt(m[0]);i.texStorage2D(t.TEXTURE_CUBE_MAP,R,T,e.width,e.height)}for(let e=0;e<6;e++)if(p){M?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,m[e].width,m[e].height,v,S,m[e].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,T,m[e].width,m[e].height,0,v,S,m[e].data);for(let n=0;n<A.length;n++){const r=A[n].image[e].image;M?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,0,0,r.width,r.height,v,S,r.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,T,r.width,r.height,0,v,S,r.data)}}else{M?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,v,S,m[e]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,T,v,S,m[e]);for(let n=0;n<A.length;n++){const r=A[n];M?w&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,0,0,v,S,r.image[e]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,T,v,S,r.image[e])}}}g(a)&&_(t.TEXTURE_CUBE_MAP),c.__version=h.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}(o,e,a):i.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+a)},this.rebindTextures=function(e,i,r){const s=n.get(e);void 0!==i&&X(s.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==r&&q(e)},this.setupRenderTarget=function(e){const r=e.texture,o=n.get(e),l=n.get(r);e.addEventListener("dispose",T);const h=e.textures,c=!0===e.isWebGLCubeRenderTarget,u=h.length>1;if(u||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=r.version,a.memory.textures++),c){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let i=0;i<r.mipmaps.length;i++)o.__webglFramebuffer[e][i]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<r.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(u)for(let e=0,i=h.length;e<i;e++){const i=n.get(h[e]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),a.memory.textures++)}if(e.samples>0&&!1===et(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],i.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let i=0;i<h.length;i++){const n=h[i];o.__webglColorRenderbuffer[i]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[i]);const r=s.convert(n.format,n.colorSpace),a=s.convert(n.type),l=x(n.internalFormat,r,a,n.colorSpace,!0===e.isXRRenderTarget),c=tt(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,c,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+i,t.RENDERBUFFER,o.__webglColorRenderbuffer[i])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),$(o.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(t.FRAMEBUFFER,null)}}if(c){i.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),G(t.TEXTURE_CUBE_MAP,r);for(let i=0;i<6;i++)if(r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)X(o.__webglFramebuffer[i][n],e,r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,n);else X(o.__webglFramebuffer[i],e,r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,0);g(r)&&_(t.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(u){for(let r=0,s=h.length;r<s;r++){const s=h[r],a=n.get(s);i.bindTexture(t.TEXTURE_2D,a.__webglTexture),G(t.TEXTURE_2D,s),X(o.__webglFramebuffer,e,s,t.COLOR_ATTACHMENT0+r,t.TEXTURE_2D,0),g(s)&&_(t.TEXTURE_2D)}i.unbindTexture()}else{let n=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(n=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),i.bindTexture(n,l.__webglTexture),G(n,r),r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)X(o.__webglFramebuffer[i],e,r,t.COLOR_ATTACHMENT0,n,i);else X(o.__webglFramebuffer,e,r,t.COLOR_ATTACHMENT0,n,0);g(r)&&_(n),i.unbindTexture()}e.depthBuffer&&q(e)},this.updateRenderTargetMipmap=function(t){const e=t.textures;for(let r=0,s=e.length;r<s;r++){const s=e[r];if(g(s)){const e=y(t),r=n.get(s).__webglTexture;i.bindTexture(e,r),_(e),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===et(e)){const r=e.textures,s=e.width,a=e.height;let o=t.COLOR_BUFFER_BIT;const h=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=n.get(e),u=r.length>1;if(u)for(let e=0;e<r.length;e++)i.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),i.bindFramebuffer(t.FRAMEBUFFER,c.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);i.bindFramebuffer(t.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let i=0;i<r.length;i++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),u){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,c.__webglColorRenderbuffer[i]);const e=n.get(r[i]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,s,a,0,0,s,a,o,t.NEAREST),!0===l&&(K.length=0,Z.length=0,K.push(t.COLOR_ATTACHMENT0+i),e.depthBuffer&&!1===e.resolveDepthBuffer&&(K.push(h),Z.push(h),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,Z)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,K))}if(i.bindFramebuffer(t.READ_FRAMEBUFFER,null),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),u)for(let e=0;e<r.length;e++){i.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,c.__webglColorRenderbuffer[e]);const s=n.get(r[e]).__webglTexture;i.bindFramebuffer(t.FRAMEBUFFER,c.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,s,0)}i.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const i=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[i])}},this.setupDepthRenderbuffer=q,this.setupFrameBufferTexture=X,this.useMultisampledRTT=et}function Oa(t,e){return{convert:function(i,n=""){let r;const s=ge.getTransfer(n);if(i===D)return t.UNSIGNED_BYTE;if(i===H)return t.UNSIGNED_SHORT_4_4_4_4;if(i===W)return t.UNSIGNED_SHORT_5_5_5_1;if(i===X)return t.UNSIGNED_INT_5_9_9_9_REV;if(i===B)return t.BYTE;if(i===F)return t.SHORT;if(i===O)return t.UNSIGNED_SHORT;if(i===z)return t.INT;if(i===k)return t.UNSIGNED_INT;if(i===V)return t.FLOAT;if(i===G)return t.HALF_FLOAT;if(i===$)return t.ALPHA;if(i===q)return t.RGB;if(i===Y)return t.RGBA;if(i===K)return t.LUMINANCE;if(i===Z)return t.LUMINANCE_ALPHA;if(i===J)return t.DEPTH_COMPONENT;if(i===Q)return t.DEPTH_STENCIL;if(i===tt)return t.RED;if(i===et)return t.RED_INTEGER;if(i===it)return t.RG;if(i===nt)return t.RG_INTEGER;if(i===rt)return t.RGBA_INTEGER;if(i===st||i===at||i===ot||i===lt)if(s===Wt){if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(i===st)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===at)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===ot)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===lt)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(i===st)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===at)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===ot)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===lt)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===ht||i===ct||i===ut||i===dt){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(i===ht)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===ct)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===ut)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===dt)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===pt||i===mt||i===ft){if(r=e.get("WEBGL_compressed_texture_etc"),null===r)return null;if(i===pt||i===mt)return s===Wt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===ft)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(i===gt||i===_t||i===yt||i===xt||i===vt||i===bt||i===St||i===Tt||i===Mt||i===Et||i===wt||i===At||i===Rt||i===Ct){if(r=e.get("WEBGL_compressed_texture_astc"),null===r)return null;if(i===gt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===_t)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===yt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===xt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===vt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===bt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===St)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Tt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Mt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Et)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===wt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===At)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Rt)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Ct)return s===Wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===Nt||i===Pt||i===It){if(r=e.get("EXT_texture_compression_bptc"),null===r)return null;if(i===Nt)return s===Wt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Pt)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===It)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(i===Ut||i===Lt||i===Dt||i===Bt){if(r=e.get("EXT_texture_compression_rgtc"),null===r)return null;if(i===Nt)return r.COMPRESSED_RED_RGTC1_EXT;if(i===Lt)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Dt)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Bt)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return i===j?t.UNSIGNED_INT_24_8:void 0!==t[i]?t[i]:null}}}class za extends qn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class ka extends ki{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Va={type:"move"};class Ga{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ka,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ka,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Fe,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Fe),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ka,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Fe,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Fe),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const i of t.hand.values())this._getHandJoint(e,i)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let n=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){s=!0;for(const n of t.hand.values()){const t=e.getJointPose(n,i),r=this._getHandJoint(l,n);null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=t.radius),r.visible=null!==t}const n=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],a=n.position.distanceTo(r.position),o=.02,h=.005;l.inputState.pinching&&a>o+h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-h&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(n=e.getPose(t.targetRaySpace,i),null===n&&null!==r&&(n=r),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Va)))}return null!==a&&(a.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const i=new ka;i.matrixAutoUpdate=!1,i.visible=!1,t.joints[e.jointName]=i,t.add(i)}return t.joints[e.jointName]}}class Ha{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,i){if(null===this.texture){const n=new Ne;t.properties.get(n).__webglTexture=e.texture,e.depthNear==i.depthNear&&e.depthFar==i.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,i=new Hn({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Bn(new lr(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Wa extends Kt{constructor(t,e){super();const i=this;let n=null,r=1,s=null,a="local-floor",o=1,l=null,h=null,c=null,u=null,d=null,p=null;const m=new Ha,f=e.getContextAttributes();let g=null,_=null;const y=[],x=[],v=new le;let b=null;const S=new qn;S.viewport=new Pe;const T=new qn;T.viewport=new Pe;const M=[S,T],E=new za;let w=null,A=null;function R(t){const e=x.indexOf(t.inputSource);if(-1===e)return;const i=y[e];void 0!==i&&(i.update(t.inputSource,t.frame,l||s),i.dispatchEvent({type:t.type,data:t.inputSource}))}function C(){n.removeEventListener("select",R),n.removeEventListener("selectstart",R),n.removeEventListener("selectend",R),n.removeEventListener("squeeze",R),n.removeEventListener("squeezestart",R),n.removeEventListener("squeezeend",R),n.removeEventListener("end",C),n.removeEventListener("inputsourceschange",N);for(let t=0;t<y.length;t++){const e=x[t];null!==e&&(x[t]=null,y[t].disconnect(e))}w=null,A=null,m.reset(),t.setRenderTarget(g),d=null,u=null,c=null,n=null,_=null,B.stop(),i.isPresenting=!1,t.setPixelRatio(b),t.setSize(v.width,v.height,!1),i.dispatchEvent({type:"sessionend"})}function N(t){for(let e=0;e<t.removed.length;e++){const i=t.removed[e],n=x.indexOf(i);n>=0&&(x[n]=null,y[n].disconnect(i))}for(let e=0;e<t.added.length;e++){const i=t.added[e];let n=x.indexOf(i);if(-1===n){for(let t=0;t<y.length;t++){if(t>=x.length){x.push(i),n=t;break}if(null===x[t]){x[t]=i,n=t;break}}if(-1===n)break}const r=y[n];r&&r.connect(i)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=y[t];return void 0===e&&(e=new Ga,y[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=y[t];return void 0===e&&(e=new Ga,y[t]=e),e.getGripSpace()},this.getHand=function(t){let e=y[t];return void 0===e&&(e=new Ga,y[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(h){if(n=h,null!==n){if(g=t.getRenderTarget(),n.addEventListener("select",R),n.addEventListener("selectstart",R),n.addEventListener("selectend",R),n.addEventListener("squeeze",R),n.addEventListener("squeezestart",R),n.addEventListener("squeezeend",R),n.addEventListener("end",C),n.addEventListener("inputsourceschange",N),!0!==f.xrCompatible&&await e.makeXRCompatible(),b=t.getPixelRatio(),t.getSize(v),void 0===n.renderState.layers){const i={antialias:f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(n,e,i),n.updateRenderState({baseLayer:d}),t.setPixelRatio(1),t.setSize(d.framebufferWidth,d.framebufferHeight,!1),_=new Ue(d.framebufferWidth,d.framebufferHeight,{format:Y,type:D,colorSpace:t.outputColorSpace,stencilBuffer:f.stencil})}else{let i=null,s=null,a=null;f.depth&&(a=f.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,i=f.stencil?Q:J,s=f.stencil?j:k);const o={colorFormat:e.RGBA8,depthFormat:a,scaleFactor:r};c=new XRWebGLBinding(n,e),u=c.createProjectionLayer(o),n.updateRenderState({layers:[u]}),t.setPixelRatio(1),t.setSize(u.textureWidth,u.textureHeight,!1),_=new Ue(u.textureWidth,u.textureHeight,{format:Y,type:D,depthTexture:new Wr(u.textureWidth,u.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:f.stencil,colorSpace:t.outputColorSpace,samples:f.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues})}_.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await n.requestReferenceSpace(a),B.setContext(n),B.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==n)return n.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};const P=new Fe,I=new Fe;function U(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===n)return;let e=t.near,i=t.far;null!==m.texture&&(m.depthNear>0&&(e=m.depthNear),m.depthFar>0&&(i=m.depthFar)),E.near=T.near=S.near=e,E.far=T.far=S.far=i,w===E.near&&A===E.far||(n.updateRenderState({depthNear:E.near,depthFar:E.far}),w=E.near,A=E.far),S.layers.mask=2|t.layers.mask,T.layers.mask=4|t.layers.mask,E.layers.mask=S.layers.mask|T.layers.mask;const r=t.parent,s=E.cameras;U(E,r);for(let t=0;t<s.length;t++)U(s[t],r);2===s.length?function(t,e,i){P.setFromMatrixPosition(e.matrixWorld),I.setFromMatrixPosition(i.matrixWorld);const n=P.distanceTo(I),r=e.projectionMatrix.elements,s=i.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],h=(r[9]-1)/r[5],c=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=a*c,p=a*u,m=n/(-c+u),f=m*-c;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===r[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=a+m,i=o+m,r=d-f,s=p+(n-f),c=l*o/i*e,u=h*o/i*e;t.projectionMatrix.makePerspective(r,s,c,u,e,i),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(E,S,T):E.projectionMatrix.copy(S.projectionMatrix),function(t,e,i){null===i?t.matrix.copy(e.matrixWorld):(t.matrix.copy(i.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld)),t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*te*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,E,r)},this.getCamera=function(){return E},this.getFoveation=function(){if(null!==u||null!==d)return o},this.setFoveation=function(t){o=t,null!==u&&(u.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==m.texture},this.getDepthSensingMesh=function(){return m.getMesh(E)};let L=null;const B=new ar;B.setAnimationLoop((function(e,r){if(h=r.getViewerPose(l||s),p=r,null!==h){const e=h.views;null!==d&&(t.setRenderTargetFramebuffer(_,d.framebuffer),t.setRenderTarget(_));let i=!1;e.length!==E.cameras.length&&(E.cameras.length=0,i=!0);for(let n=0;n<e.length;n++){const r=e[n];let s=null;if(null!==d)s=d.getViewport(r);else{const e=c.getViewSubImage(u,r);s=e.viewport,0===n&&(t.setRenderTargetTextures(_,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(_))}let a=M[n];void 0===a&&(a=new qn,a.layers.enable(n),a.viewport=new Pe,M[n]=a),a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(r.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(s.x,s.y,s.width,s.height),0===n&&(E.matrix.copy(a.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),!0===i&&E.cameras.push(a)}const r=n.enabledFeatures;if(r&&r.includes("depth-sensing")){const i=c.getDepthInformation(e[0]);i&&i.isValid&&i.texture&&m.init(t,i,n.renderState)}}for(let t=0;t<y.length;t++){const e=x[t],i=y[t];null!==e&&void 0!==i&&i.update(e,r,l||s)}L&&L(e,r),r.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:r}),p=null})),this.setAnimationLoop=function(t){L=t},this.dispose=function(){}}}const ja=new Ti,Xa=new pi;function $a(t,e){function i(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function n(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map,i(n.map,t.mapTransform)),n.alphaMap&&(t.alphaMap.value=n.alphaMap,i(n.alphaMap,t.alphaMapTransform)),n.bumpMap&&(t.bumpMap.value=n.bumpMap,i(n.bumpMap,t.bumpMapTransform),t.bumpScale.value=n.bumpScale,n.side===h&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,i(n.normalMap,t.normalMapTransform),t.normalScale.value.copy(n.normalScale),n.side===h&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,i(n.displacementMap,t.displacementMapTransform),t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap,i(n.emissiveMap,t.emissiveMapTransform)),n.specularMap&&(t.specularMap.value=n.specularMap,i(n.specularMap,t.specularMapTransform)),n.alphaTest>0&&(t.alphaTest.value=n.alphaTest);const r=e.get(n),s=r.envMap,a=r.envMapRotation;s&&(t.envMap.value=s,ja.copy(a),ja.x*=-1,ja.y*=-1,ja.z*=-1,s.isCubeTexture&&!1===s.isRenderTargetTexture&&(ja.y*=-1,ja.z*=-1),t.envMapRotation.value.setFromMatrix4(Xa.makeRotationFromEuler(ja)),t.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,t.reflectivity.value=n.reflectivity,t.ior.value=n.ior,t.refractionRatio.value=n.refractionRatio),n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity,i(n.lightMap,t.lightMapTransform)),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity,i(n.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,i){i.color.getRGB(e.fogColor.value,Vn(t)),i.isFog?(e.fogNear.value=i.near,e.fogFar.value=i.far):i.isFogExp2&&(e.fogDensity.value=i.density)},refreshMaterialUniforms:function(t,r,s,a,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?n(t,r):r.isMeshToonMaterial?(n(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,r)):r.isMeshPhongMaterial?(n(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,r)):r.isMeshStandardMaterial?(n(t,r),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,i(e.metalnessMap,t.metalnessMapTransform)),t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,i(e.roughnessMap,t.roughnessMapTransform)),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,r),r.isMeshPhysicalMaterial&&function(t,e,n){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,i(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,i(e.sheenRoughnessMap,t.sheenRoughnessMapTransform))),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,i(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,i(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,i(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===h&&t.clearcoatNormalScale.value.negate())),e.dispersion>0&&(t.dispersion.value=e.dispersion),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,i(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,i(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform))),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=n.texture,t.transmissionSamplerSize.value.set(n.width,n.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,i(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,i(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,i(e.anisotropyMap,t.anisotropyMapTransform))),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,i(e.specularColorMap,t.specularColorMapTransform)),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,i(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,r,o)):r.isMeshMatcapMaterial?(n(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,r)):r.isMeshDepthMaterial?n(t,r):r.isMeshDistanceMaterial?(n(t,r),function(t,i){const n=e.get(i).light;t.referencePosition.value.setFromMatrixPosition(n.matrixWorld),t.nearDistance.value=n.shadow.camera.near,t.farDistance.value=n.shadow.camera.far}(t,r)):r.isMeshNormalMaterial?n(t,r):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,i(e.map,t.mapTransform))}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map,i(e.map,t.uvTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,i(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r,s,a):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,i(e.map,t.mapTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,i(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function qa(t,e,i,n){let r={},s={},a=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,i,n){const r=t.value,s=e+"_"+i;if(void 0===n[s])return n[s]="number"==typeof r||"boolean"==typeof r?r:r.clone(),!0;{const t=n[s];if("number"==typeof r||"boolean"==typeof r){if(t!==r)return n[s]=r,!0}else if(!1===t.equals(r))return t.copy(r),!0}return!1}function h(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function c(e){const i=e.target;i.removeEventListener("dispose",c);const n=a.indexOf(i.__bindingPointIndex);a.splice(n,1),t.deleteBuffer(r[i.id]),delete r[i.id],delete s[i.id]}return{bind:function(t,e){const i=e.program;n.uniformBlockBinding(t,i)},update:function(i,u){let d=r[i.id];void 0===d&&(function(t){const e=t.uniforms;let i=0;for(let t=0,n=e.length;t<n;t++){const n=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=n.length;t<e;t++){const e=n[t],r=Array.isArray(e.value)?e.value:[e.value];for(let t=0,n=r.length;t<n;t++){const n=h(r[t]),s=i%16,a=s%n.boundary,o=s+a;i+=a,0!==o&&16-o<n.storage&&(i+=16-o),e.__data=new Float32Array(n.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=i,i+=n.storage}}}const n=i%16;n>0&&(i+=16-n),t.__size=i,t.__cache={}}(i),d=function(e){const i=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=i;const n=t.createBuffer(),r=e.__size,s=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,r,s),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,i,n),n}(i),r[i.id]=d,i.addEventListener("dispose",c));const p=u.program;n.updateUBOMapping(i,p);const m=e.render.frame;s[i.id]!==m&&(function(e){const i=r[e.id],n=e.uniforms,s=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,i);for(let e=0,i=n.length;e<i;e++){const i=Array.isArray(n[e])?n[e]:[n[e]];for(let n=0,r=i.length;n<r;n++){const r=i[n];if(!0===l(r,e,n,s)){const e=r.__offset,i=Array.isArray(r.value)?r.value:[r.value];let n=0;for(let s=0;s<i.length;s++){const a=i[s],o=h(a);"number"==typeof a||"boolean"==typeof a?(r.__data[0]=a,t.bufferSubData(t.UNIFORM_BUFFER,e+n,r.__data)):a.isMatrix3?(r.__data[0]=a.elements[0],r.__data[1]=a.elements[1],r.__data[2]=a.elements[2],r.__data[3]=0,r.__data[4]=a.elements[3],r.__data[5]=a.elements[4],r.__data[6]=a.elements[5],r.__data[7]=0,r.__data[8]=a.elements[6],r.__data[9]=a.elements[7],r.__data[10]=a.elements[8],r.__data[11]=0):(a.toArray(r.__data,n),n+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,r.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(i),s[i.id]=m)},dispose:function(){for(const e in r)t.deleteBuffer(r[e]);a=[],r={},s={}}}}class Ya{constructor(t={}){const{canvas:e=pe(),context:i=null,depth:r=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=t;let f;if(this.isWebGLRenderer=!0,null!==i){if("undefined"!=typeof WebGLRenderingContext&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=a;const _=new Uint32Array(4),y=new Int32Array(4);let x=null,v=null;const b=[],S=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Vt,this.toneMapping=g,this.toneMappingExposure=1;const T=this;let M=!1,E=0,w=0,A=null,R=-1,C=null;const N=new Pe,P=new Pe;let I=null;const U=new an(0);let B=0,F=e.width,z=e.height,V=1,X=null,$=null;const q=new Pe(0,0,F,z),Y=new Pe(0,0,F,z);let K=!1;const Z=new sr;let J=!1,Q=!1;const tt=new pi,it=new pi,st=new Fe,at=new Pe,ot={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let lt=!1;function ht(){return null===A?V:1}let ct,ut,dt,pt,mt,ft,gt,_t,yt,xt,vt,bt,St,Tt,Mt,Et,wt,At,Rt,Ct,Nt,Pt,It,Ut,Lt=i;function Dt(t,i){return e.getContext(t,i)}try{const t={alpha:!0,depth:r,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${n}`),e.addEventListener("webglcontextlost",Ot,!1),e.addEventListener("webglcontextrestored",zt,!1),e.addEventListener("webglcontextcreationerror",kt,!1),null===Lt){const e="webgl2";if(Lt=Dt(e,t),null===Lt)throw Dt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Bt(){ct=new Or(Lt),ct.init(),Pt=new Oa(Lt,ct),ut=new yr(Lt,ct,t,Pt),dt=new Da(Lt,ct),ut.reverseDepthBuffer&&m&&dt.buffers.depth.setReversed(!0),pt=new Vr(Lt),mt=new va,ft=new Fa(Lt,ct,dt,mt,ut,Pt,pt),gt=new vr(T),_t=new Fr(T),yt=new or(Lt),It=new gr(Lt,yt),xt=new zr(Lt,yt,pt,It),vt=new Hr(Lt,xt,yt,pt),Rt=new Gr(Lt,ut,ft),Et=new xr(mt),bt=new xa(T,gt,_t,ct,ut,It,Et),St=new $a(T,mt),Tt=new Ma,Mt=new Na(ct),At=new fr(T,gt,_t,dt,vt,f,l),wt=new Ua(T,vt,ut),Ut=new qa(Lt,pt,ut,dt),Ct=new _r(Lt,ct,pt),Nt=new kr(Lt,ct,pt),pt.programs=bt.programs,T.capabilities=ut,T.extensions=ct,T.properties=mt,T.renderLists=Tt,T.shadowMap=wt,T.state=dt,T.info=pt}Bt();const Ft=new Wa(T,Lt);function Ot(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),M=!0}function zt(){console.log("THREE.WebGLRenderer: Context Restored."),M=!1;const t=pt.autoReset,e=wt.enabled,i=wt.autoUpdate,n=wt.needsUpdate,r=wt.type;Bt(),pt.autoReset=t,wt.enabled=e,wt.autoUpdate=i,wt.needsUpdate=n,wt.type=r}function kt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Ht(t){const e=t.target;e.removeEventListener("dispose",Ht),function(t){(function(t){const e=mt.get(t).programs;void 0!==e&&(e.forEach((function(t){bt.releaseProgram(t)})),t.isShaderMaterial&&bt.releaseShaderCache(t))})(t),mt.remove(t)}(e)}function Wt(t,e,i){!0===t.transparent&&t.side===c&&!1===t.forceSinglePass?(t.side=h,t.needsUpdate=!0,te(t,e,i),t.side=0,t.needsUpdate=!0,te(t,e,i),t.side=c):te(t,e,i)}this.xr=Ft,this.getContext=function(){return Lt},this.getContextAttributes=function(){return Lt.getContextAttributes()},this.forceContextLoss=function(){const t=ct.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=ct.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(t){void 0!==t&&(V=t,this.setSize(F,z,!1))},this.getSize=function(t){return t.set(F,z)},this.setSize=function(t,i,n=!0){Ft.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(F=t,z=i,e.width=Math.floor(t*V),e.height=Math.floor(i*V),!0===n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(F*V,z*V).floor()},this.setDrawingBufferSize=function(t,i,n){F=t,z=i,V=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(N)},this.getViewport=function(t){return t.copy(q)},this.setViewport=function(t,e,i,n){t.isVector4?q.set(t.x,t.y,t.z,t.w):q.set(t,e,i,n),dt.viewport(N.copy(q).multiplyScalar(V).round())},this.getScissor=function(t){return t.copy(Y)},this.setScissor=function(t,e,i,n){t.isVector4?Y.set(t.x,t.y,t.z,t.w):Y.set(t,e,i,n),dt.scissor(P.copy(Y).multiplyScalar(V).round())},this.getScissorTest=function(){return K},this.setScissorTest=function(t){dt.setScissorTest(K=t)},this.setOpaqueSort=function(t){X=t},this.setTransparentSort=function(t){$=t},this.getClearColor=function(t){return t.copy(At.getClearColor())},this.setClearColor=function(){At.setClearColor.apply(At,arguments)},this.getClearAlpha=function(){return At.getClearAlpha()},this.setClearAlpha=function(){At.setClearAlpha.apply(At,arguments)},this.clear=function(t=!0,e=!0,i=!0){let n=0;if(t){let t=!1;if(null!==A){const e=A.texture.format;t=e===rt||e===nt||e===et}if(t){const t=A.texture.type,e=t===D||t===k||t===O||t===j||t===H||t===W,i=At.getClearColor(),n=At.getClearAlpha(),r=i.r,s=i.g,a=i.b;e?(_[0]=r,_[1]=s,_[2]=a,_[3]=n,Lt.clearBufferuiv(Lt.COLOR,0,_)):(y[0]=r,y[1]=s,y[2]=a,y[3]=n,Lt.clearBufferiv(Lt.COLOR,0,y))}else n|=Lt.COLOR_BUFFER_BIT}e&&(n|=Lt.DEPTH_BUFFER_BIT),i&&(n|=Lt.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Lt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ot,!1),e.removeEventListener("webglcontextrestored",zt,!1),e.removeEventListener("webglcontextcreationerror",kt,!1),Tt.dispose(),Mt.dispose(),mt.dispose(),gt.dispose(),_t.dispose(),vt.dispose(),It.dispose(),Ut.dispose(),bt.dispose(),Ft.dispose(),Ft.removeEventListener("sessionstart",Xt),Ft.removeEventListener("sessionend",$t),qt.stop()},this.renderBufferDirect=function(t,e,i,n,r,s){null===e&&(e=ot);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,i,n,r){!0!==e.isScene&&(e=ot),ft.resetTextureUnits();const s=e.fog,a=n.isMeshStandardMaterial?e.environment:null,o=null===A?T.outputColorSpace:!0===A.isXRRenderTarget?A.texture.colorSpace:Gt,l=(n.isMeshStandardMaterial?_t:gt).get(n.envMap||a),h=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,c=!!i.attributes.tangent&&(!!n.normalMap||n.anisotropy>0),u=!!i.morphAttributes.position,d=!!i.morphAttributes.normal,p=!!i.morphAttributes.color;let m=g;n.toneMapped&&(null!==A&&!0!==A.isXRRenderTarget||(m=T.toneMapping));const f=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,_=void 0!==f?f.length:0,y=mt.get(n),x=v.state.lights;if(!0===J&&(!0===Q||t!==C)){const e=t===C&&n.id===R;Et.setState(n,t,e)}let b=!1;n.version===y.__version?y.needsLights&&y.lightsStateVersion!==x.state.version||y.outputColorSpace!==o||r.isBatchedMesh&&!1===y.batching?b=!0:r.isBatchedMesh||!0!==y.batching?r.isBatchedMesh&&!0===y.batchingColor&&null===r.colorTexture||r.isBatchedMesh&&!1===y.batchingColor&&null!==r.colorTexture||r.isInstancedMesh&&!1===y.instancing?b=!0:r.isInstancedMesh||!0!==y.instancing?r.isSkinnedMesh&&!1===y.skinning?b=!0:r.isSkinnedMesh||!0!==y.skinning?r.isInstancedMesh&&!0===y.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===y.instancingColor&&null!==r.instanceColor||r.isInstancedMesh&&!0===y.instancingMorph&&null===r.morphTexture||r.isInstancedMesh&&!1===y.instancingMorph&&null!==r.morphTexture||y.envMap!==l||!0===n.fog&&y.fog!==s?b=!0:void 0===y.numClippingPlanes||y.numClippingPlanes===Et.numPlanes&&y.numIntersection===Et.numIntersection?(y.vertexAlphas!==h||y.vertexTangents!==c||y.morphTargets!==u||y.morphNormals!==d||y.morphColors!==p||y.toneMapping!==m||y.morphTargetsCount!==_)&&(b=!0):b=!0:b=!0:b=!0:b=!0:(b=!0,y.__version=n.version);let S=y.currentProgram;!0===b&&(S=te(n,e,r));let M=!1,E=!1,w=!1;const N=S.getUniforms(),P=y.uniforms;if(dt.useProgram(S.program)&&(M=!0,E=!0,w=!0),n.id!==R&&(R=n.id,E=!0),M||C!==t){dt.buffers.depth.getReversed()?(tt.copy(t.projectionMatrix),function(t){const e=t.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}(tt),function(t){const e=t.elements;-1===e[11]?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=1-e[14])}(tt),N.setValue(Lt,"projectionMatrix",tt)):N.setValue(Lt,"projectionMatrix",t.projectionMatrix),N.setValue(Lt,"viewMatrix",t.matrixWorldInverse);const e=N.map.cameraPosition;void 0!==e&&e.setValue(Lt,st.setFromMatrixPosition(t.matrixWorld)),ut.logarithmicDepthBuffer&&N.setValue(Lt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&N.setValue(Lt,"isOrthographic",!0===t.isOrthographicCamera),C!==t&&(C=t,E=!0,w=!0)}if(r.isSkinnedMesh){N.setOptional(Lt,r,"bindMatrix"),N.setOptional(Lt,r,"bindMatrixInverse");const t=r.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),N.setValue(Lt,"boneTexture",t.boneTexture,ft))}r.isBatchedMesh&&(N.setOptional(Lt,r,"batchingTexture"),N.setValue(Lt,"batchingTexture",r._matricesTexture,ft),N.setOptional(Lt,r,"batchingIdTexture"),N.setValue(Lt,"batchingIdTexture",r._indirectTexture,ft),N.setOptional(Lt,r,"batchingColorTexture"),null!==r._colorsTexture&&N.setValue(Lt,"batchingColorTexture",r._colorsTexture,ft));const I=i.morphAttributes;var U,L;if(void 0===I.position&&void 0===I.normal&&void 0===I.color||Rt.update(r,i,S),(E||y.receiveShadow!==r.receiveShadow)&&(y.receiveShadow=r.receiveShadow,N.setValue(Lt,"receiveShadow",r.receiveShadow)),n.isMeshGouraudMaterial&&null!==n.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),n.isMeshStandardMaterial&&null===n.envMap&&null!==e.environment&&(P.envMapIntensity.value=e.environmentIntensity),E&&(N.setValue(Lt,"toneMappingExposure",T.toneMappingExposure),y.needsLights&&(L=w,(U=P).ambientLightColor.needsUpdate=L,U.lightProbe.needsUpdate=L,U.directionalLights.needsUpdate=L,U.directionalLightShadows.needsUpdate=L,U.pointLights.needsUpdate=L,U.pointLightShadows.needsUpdate=L,U.spotLights.needsUpdate=L,U.spotLightShadows.needsUpdate=L,U.rectAreaLights.needsUpdate=L,U.hemisphereLights.needsUpdate=L),s&&!0===n.fog&&St.refreshFogUniforms(P,s),St.refreshMaterialUniforms(P,n,V,z,v.state.transmissionRenderTarget[t.id]),Ys.upload(Lt,ee(y),P,ft)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ys.upload(Lt,ee(y),P,ft),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&N.setValue(Lt,"center",r.center),N.setValue(Lt,"modelViewMatrix",r.modelViewMatrix),N.setValue(Lt,"normalMatrix",r.normalMatrix),N.setValue(Lt,"modelMatrix",r.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){const t=n.uniformsGroups;for(let e=0,i=t.length;e<i;e++){const i=t[e];Ut.update(i,S),Ut.bind(i,S)}}return S}(t,e,i,n,r);dt.setMaterial(n,a);let l=i.index,h=1;if(!0===n.wireframe){if(l=xt.getWireframeAttribute(i),void 0===l)return;h=2}const c=i.drawRange,u=i.attributes.position;let d=c.start*h,p=(c.start+c.count)*h;null!==s&&(d=Math.max(d,s.start*h),p=Math.min(p,(s.start+s.count)*h)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=u&&(d=Math.max(d,0),p=Math.min(p,u.count));const m=p-d;if(m<0||m===1/0)return;let f;It.setup(r,n,o,i,l);let _=Ct;if(null!==l&&(f=yt.get(l),_=Nt,_.setIndex(f)),r.isMesh)!0===n.wireframe?(dt.setLineWidth(n.wireframeLinewidth*ht()),_.setMode(Lt.LINES)):_.setMode(Lt.TRIANGLES);else if(r.isLine){let t=n.linewidth;void 0===t&&(t=1),dt.setLineWidth(t*ht()),r.isLineSegments?_.setMode(Lt.LINES):r.isLineLoop?_.setMode(Lt.LINE_LOOP):_.setMode(Lt.LINE_STRIP)}else r.isPoints?_.setMode(Lt.POINTS):r.isSprite&&_.setMode(Lt.TRIANGLES);if(r.isBatchedMesh)if(null!==r._multiDrawInstances)_.renderMultiDrawInstances(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount,r._multiDrawInstances);else if(ct.get("WEBGL_multi_draw"))_.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else{const t=r._multiDrawStarts,e=r._multiDrawCounts,i=r._multiDrawCount,s=l?yt.get(l).bytesPerElement:1,a=mt.get(n).currentProgram.getUniforms();for(let n=0;n<i;n++)a.setValue(Lt,"_gl_DrawID",n),_.render(t[n]/s,e[n])}else if(r.isInstancedMesh)_.renderInstances(d,m,r.count);else if(i.isInstancedBufferGeometry){const t=void 0!==i._maxInstanceCount?i._maxInstanceCount:1/0,e=Math.min(i.instanceCount,t);_.renderInstances(d,m,e)}else _.render(d,m)},this.compile=function(t,e,i=null){null===i&&(i=t),v=Mt.get(i),v.init(e),S.push(v),i.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(v.pushLight(t),t.castShadow&&v.pushShadow(t))})),t!==i&&t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(v.pushLight(t),t.castShadow&&v.pushShadow(t))})),v.setupLights();const n=new Set;return t.traverse((function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++){const s=e[r];Wt(s,i,t),n.add(s)}else Wt(e,i,t),n.add(e)})),S.pop(),v=null,n},this.compileAsync=function(t,e,i=null){const n=this.compile(t,e,i);return new Promise((e=>{function i(){n.forEach((function(t){mt.get(t).currentProgram.isReady()&&n.delete(t)})),0!==n.size?setTimeout(i,10):e(t)}null!==ct.get("KHR_parallel_shader_compile")?i():setTimeout(i,10)}))};let jt=null;function Xt(){qt.stop()}function $t(){qt.start()}const qt=new ar;function Yt(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)v.pushLight(t),t.castShadow&&v.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||Z.intersectsSprite(t)){n&&at.setFromMatrixPosition(t.matrixWorld).applyMatrix4(it);const e=vt.update(t),r=t.material;r.visible&&x.push(t,e,r,i,at.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||Z.intersectsObject(t))){const e=vt.update(t),r=t.material;if(n&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),at.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),at.copy(e.boundingSphere.center)),at.applyMatrix4(t.matrixWorld).applyMatrix4(it)),Array.isArray(r)){const n=e.groups;for(let s=0,a=n.length;s<a;s++){const a=n[s],o=r[a.materialIndex];o&&o.visible&&x.push(t,e,o,i,at.z,a)}}else r.visible&&x.push(t,e,r,i,at.z,null)}const r=t.children;for(let t=0,s=r.length;t<s;t++)Yt(r[t],e,i,n)}function Kt(t,e,i,n){const r=t.opaque,s=t.transmissive,a=t.transparent;v.setupLightsView(i),!0===J&&Et.setGlobalState(T.clippingPlanes,i),n&&dt.viewport(N.copy(n)),r.length>0&&Jt(r,e,i),s.length>0&&Jt(s,e,i),a.length>0&&Jt(a,e,i),dt.buffers.depth.setTest(!0),dt.buffers.depth.setMask(!0),dt.buffers.color.setMask(!0),dt.setPolygonOffset(!1)}function Zt(t,e,i,n){if(null!==(!0===i.isScene?i.overrideMaterial:null))return;void 0===v.state.transmissionRenderTarget[n.id]&&(v.state.transmissionRenderTarget[n.id]=new Ue(1,1,{generateMipmaps:!0,type:ct.has("EXT_color_buffer_half_float")||ct.has("EXT_color_buffer_float")?G:D,minFilter:L,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ge.workingColorSpace}));const r=v.state.transmissionRenderTarget[n.id],a=n.viewport||N;r.setSize(a.z,a.w);const o=T.getRenderTarget();T.setRenderTarget(r),T.getClearColor(U),B=T.getClearAlpha(),B<1&&T.setClearColor(16777215,.5),T.clear(),lt&&At.render(i);const l=T.toneMapping;T.toneMapping=g;const u=n.viewport;if(void 0!==n.viewport&&(n.viewport=void 0),v.setupLightsView(n),!0===J&&Et.setGlobalState(T.clippingPlanes,n),Jt(t,i,n),ft.updateMultisampleRenderTarget(r),ft.updateRenderTargetMipmap(r),!1===ct.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let r=0,s=e.length;r<s;r++){const s=e[r],a=s.object,o=s.geometry,l=s.material,u=s.group;if(l.side===c&&a.layers.test(n.layers)){const e=l.side;l.side=h,l.needsUpdate=!0,Qt(a,i,n,o,l,u),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(ft.updateMultisampleRenderTarget(r),ft.updateRenderTargetMipmap(r))}T.setRenderTarget(o),T.setClearColor(U,B),void 0!==u&&(n.viewport=u),T.toneMapping=l}function Jt(t,e,i){const n=!0===e.isScene?e.overrideMaterial:null;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=null===n?s.material:n,h=s.group;a.layers.test(i.layers)&&Qt(a,e,i,o,l,h)}}function Qt(t,e,i,n,r,s){t.onBeforeRender(T,e,i,n,r,s),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(T,e,i,n,t,s),!0===r.transparent&&r.side===c&&!1===r.forceSinglePass?(r.side=h,r.needsUpdate=!0,T.renderBufferDirect(i,e,n,r,t,s),r.side=0,r.needsUpdate=!0,T.renderBufferDirect(i,e,n,r,t,s),r.side=c):T.renderBufferDirect(i,e,n,r,t,s),t.onAfterRender(T,e,i,n,r,s)}function te(t,e,i){!0!==e.isScene&&(e=ot);const n=mt.get(t),r=v.state.lights,s=v.state.shadowsArray,a=r.state.version,o=bt.getParameters(t,r.state,s,e,i),l=bt.getProgramCacheKey(o);let h=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=(t.isMeshStandardMaterial?_t:gt).get(t.envMap||n.environment),n.envMapRotation=null!==n.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===h&&(t.addEventListener("dispose",Ht),h=new Map,n.programs=h);let c=h.get(l);if(void 0!==c){if(n.currentProgram===c&&n.lightsStateVersion===a)return ie(t,o),c}else o.uniforms=bt.getUniforms(t),t.onBeforeCompile(o,T),c=bt.acquireProgram(o,l),h.set(l,c),n.uniforms=o.uniforms;const u=n.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=Et.uniform),ie(t,o),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=a,n.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix),n.currentProgram=c,n.uniformsList=null,c}function ee(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=Ys.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function ie(t,e){const i=mt.get(t);i.outputColorSpace=e.outputColorSpace,i.batching=e.batching,i.batchingColor=e.batchingColor,i.instancing=e.instancing,i.instancingColor=e.instancingColor,i.instancingMorph=e.instancingMorph,i.skinning=e.skinning,i.morphTargets=e.morphTargets,i.morphNormals=e.morphNormals,i.morphColors=e.morphColors,i.morphTargetsCount=e.morphTargetsCount,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas,i.vertexTangents=e.vertexTangents,i.toneMapping=e.toneMapping}qt.setAnimationLoop((function(t){jt&&jt(t)})),"undefined"!=typeof self&&qt.setContext(self),this.setAnimationLoop=function(t){jt=t,Ft.setAnimationLoop(t),null===t?qt.stop():qt.start()},Ft.addEventListener("sessionstart",Xt),Ft.addEventListener("sessionend",$t),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===M)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===Ft.enabled&&!0===Ft.isPresenting&&(!0===Ft.cameraAutoUpdate&&Ft.updateCamera(e),e=Ft.getCamera()),!0===t.isScene&&t.onBeforeRender(T,t,e,A),v=Mt.get(t,S.length),v.init(e),S.push(v),it.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),Z.setFromProjectionMatrix(it),Q=this.localClippingEnabled,J=Et.init(this.clippingPlanes,Q),x=Tt.get(t,b.length),x.init(),b.push(x),!0===Ft.enabled&&!0===Ft.isPresenting){const t=T.xr.getDepthSensingMesh();null!==t&&Yt(t,e,-1/0,T.sortObjects)}Yt(t,e,0,T.sortObjects),x.finish(),!0===T.sortObjects&&x.sort(X,$),lt=!1===Ft.enabled||!1===Ft.isPresenting||!1===Ft.hasDepthSensing(),lt&&At.addToRenderList(x,t),this.info.render.frame++,!0===J&&Et.beginShadows();const i=v.state.shadowsArray;wt.render(i,t,e),!0===J&&Et.endShadows(),!0===this.info.autoReset&&this.info.reset();const n=x.opaque,r=x.transmissive;if(v.setupLights(),e.isArrayCamera){const i=e.cameras;if(r.length>0)for(let e=0,s=i.length;e<s;e++)Zt(n,r,t,i[e]);lt&&At.render(t);for(let e=0,n=i.length;e<n;e++){const n=i[e];Kt(x,t,n,n.viewport)}}else r.length>0&&Zt(n,r,t,e),lt&&At.render(t),Kt(x,t,e);null!==A&&(ft.updateMultisampleRenderTarget(A),ft.updateRenderTargetMipmap(A)),!0===t.isScene&&t.onAfterRender(T,t,e),It.resetDefaultState(),R=-1,C=null,S.pop(),S.length>0?(v=S[S.length-1],!0===J&&Et.setGlobalState(T.clippingPlanes,v.state.camera)):v=null,b.pop(),x=b.length>0?b[b.length-1]:null},this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(t,e,i){mt.get(t.texture).__webglTexture=e,mt.get(t.depthTexture).__webglTexture=i;const n=mt.get(t);n.__hasExternalTextures=!0,n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0===ct.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(t,e){const i=mt.get(t);i.__webglFramebuffer=e,i.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,i=0){A=t,E=e,w=i;let n=!0,r=null,s=!1,a=!1;if(t){const o=mt.get(t);if(void 0!==o.__useDefaultFramebuffer)dt.bindFramebuffer(Lt.FRAMEBUFFER,null),n=!1;else if(void 0===o.__webglFramebuffer)ft.setupRenderTarget(t);else if(o.__hasExternalTextures)ft.rebindTextures(t,mt.get(t.texture).__webglTexture,mt.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&mt.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ft.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const h=mt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=Array.isArray(h[e])?h[e][i]:h[e],s=!0):r=t.samples>0&&!1===ft.useMultisampledRTT(t)?mt.get(t).__webglMultisampledFramebuffer:Array.isArray(h)?h[i]:h,N.copy(t.viewport),P.copy(t.scissor),I=t.scissorTest}else N.copy(q).multiplyScalar(V).floor(),P.copy(Y).multiplyScalar(V).floor(),I=K;if(dt.bindFramebuffer(Lt.FRAMEBUFFER,r)&&n&&dt.drawBuffers(t,r),dt.viewport(N),dt.scissor(P),dt.setScissorTest(I),s){const n=mt.get(t.texture);Lt.framebufferTexture2D(Lt.FRAMEBUFFER,Lt.COLOR_ATTACHMENT0,Lt.TEXTURE_CUBE_MAP_POSITIVE_X+e,n.__webglTexture,i)}else if(a){const n=mt.get(t.texture),r=e||0;Lt.framebufferTextureLayer(Lt.FRAMEBUFFER,Lt.COLOR_ATTACHMENT0,n.__webglTexture,i||0,r)}R=-1},this.readRenderTargetPixels=function(t,e,i,n,r,s,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=mt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){dt.bindFramebuffer(Lt.FRAMEBUFFER,o);try{const a=t.texture,o=a.format,l=a.type;if(!ut.textureFormatReadable(o))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!ut.textureTypeReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&Lt.readPixels(e,i,n,r,Pt.convert(o),Pt.convert(l),s)}finally{const t=null!==A?mt.get(A).__webglFramebuffer:null;dt.bindFramebuffer(Lt.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,i,n,r,s,a){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=mt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){const a=t.texture,l=a.format,h=a.type;if(!ut.textureFormatReadable(l))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ut.textureTypeReadable(h))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r){dt.bindFramebuffer(Lt.FRAMEBUFFER,o);const t=Lt.createBuffer();Lt.bindBuffer(Lt.PIXEL_PACK_BUFFER,t),Lt.bufferData(Lt.PIXEL_PACK_BUFFER,s.byteLength,Lt.STREAM_READ),Lt.readPixels(e,i,n,r,Pt.convert(l),Pt.convert(h),0);const a=null!==A?mt.get(A).__webglFramebuffer:null;dt.bindFramebuffer(Lt.FRAMEBUFFER,a);const c=Lt.fenceSync(Lt.SYNC_GPU_COMMANDS_COMPLETE,0);return Lt.flush(),await function(t,e,i){return new Promise((function(i,n){setTimeout((function r(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:n();break;case t.TIMEOUT_EXPIRED:setTimeout(r,4);break;default:i()}}),4)}))}(Lt,c),Lt.bindBuffer(Lt.PIXEL_PACK_BUFFER,t),Lt.getBufferSubData(Lt.PIXEL_PACK_BUFFER,0,s),Lt.deleteBuffer(t),Lt.deleteSync(c),s}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,i=0){!0!==t.isTexture&&(fe("WebGLRenderer: copyFramebufferToTexture function signature has changed."),e=arguments[0]||null,t=arguments[1]);const n=Math.pow(2,-i),r=Math.floor(t.image.width*n),s=Math.floor(t.image.height*n),a=null!==e?e.x:0,o=null!==e?e.y:0;ft.setTexture2D(t,0),Lt.copyTexSubImage2D(Lt.TEXTURE_2D,i,0,0,a,o,r,s),dt.unbindTexture()},this.copyTextureToTexture=function(t,e,i=null,n=null,r=0){let s,a,o,l,h,c,u,d,p;!0!==t.isTexture&&(fe("WebGLRenderer: copyTextureToTexture function signature has changed."),n=arguments[0]||null,t=arguments[1],e=arguments[2],r=arguments[3]||0,i=null);const m=t.isCompressedTexture?t.mipmaps[r]:t.image;null!==i?(s=i.max.x-i.min.x,a=i.max.y-i.min.y,o=i.isBox3?i.max.z-i.min.z:1,l=i.min.x,h=i.min.y,c=i.isBox3?i.min.z:0):(s=m.width,a=m.height,o=m.depth||1,l=0,h=0,c=0),null!==n?(u=n.x,d=n.y,p=n.z):(u=0,d=0,p=0);const f=Pt.convert(e.format),g=Pt.convert(e.type);let _;e.isData3DTexture?(ft.setTexture3D(e,0),_=Lt.TEXTURE_3D):e.isDataArrayTexture||e.isCompressedArrayTexture?(ft.setTexture2DArray(e,0),_=Lt.TEXTURE_2D_ARRAY):(ft.setTexture2D(e,0),_=Lt.TEXTURE_2D),Lt.pixelStorei(Lt.UNPACK_FLIP_Y_WEBGL,e.flipY),Lt.pixelStorei(Lt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Lt.pixelStorei(Lt.UNPACK_ALIGNMENT,e.unpackAlignment);const y=Lt.getParameter(Lt.UNPACK_ROW_LENGTH),x=Lt.getParameter(Lt.UNPACK_IMAGE_HEIGHT),v=Lt.getParameter(Lt.UNPACK_SKIP_PIXELS),b=Lt.getParameter(Lt.UNPACK_SKIP_ROWS),S=Lt.getParameter(Lt.UNPACK_SKIP_IMAGES);Lt.pixelStorei(Lt.UNPACK_ROW_LENGTH,m.width),Lt.pixelStorei(Lt.UNPACK_IMAGE_HEIGHT,m.height),Lt.pixelStorei(Lt.UNPACK_SKIP_PIXELS,l),Lt.pixelStorei(Lt.UNPACK_SKIP_ROWS,h),Lt.pixelStorei(Lt.UNPACK_SKIP_IMAGES,c);const T=t.isDataArrayTexture||t.isData3DTexture,M=e.isDataArrayTexture||e.isData3DTexture;if(t.isRenderTargetTexture||t.isDepthTexture){const i=mt.get(t),n=mt.get(e),m=mt.get(i.__renderTarget),f=mt.get(n.__renderTarget);dt.bindFramebuffer(Lt.READ_FRAMEBUFFER,m.__webglFramebuffer),dt.bindFramebuffer(Lt.DRAW_FRAMEBUFFER,f.__webglFramebuffer);for(let i=0;i<o;i++)T&&Lt.framebufferTextureLayer(Lt.READ_FRAMEBUFFER,Lt.COLOR_ATTACHMENT0,mt.get(t).__webglTexture,r,c+i),t.isDepthTexture?(M&&Lt.framebufferTextureLayer(Lt.DRAW_FRAMEBUFFER,Lt.COLOR_ATTACHMENT0,mt.get(e).__webglTexture,r,p+i),Lt.blitFramebuffer(l,h,s,a,u,d,s,a,Lt.DEPTH_BUFFER_BIT,Lt.NEAREST)):M?Lt.copyTexSubImage3D(_,r,u,d,p+i,l,h,s,a):Lt.copyTexSubImage2D(_,r,u,d,p+i,l,h,s,a);dt.bindFramebuffer(Lt.READ_FRAMEBUFFER,null),dt.bindFramebuffer(Lt.DRAW_FRAMEBUFFER,null)}else M?t.isDataTexture||t.isData3DTexture?Lt.texSubImage3D(_,r,u,d,p,s,a,o,f,g,m.data):e.isCompressedArrayTexture?Lt.compressedTexSubImage3D(_,r,u,d,p,s,a,o,f,m.data):Lt.texSubImage3D(_,r,u,d,p,s,a,o,f,g,m):t.isDataTexture?Lt.texSubImage2D(Lt.TEXTURE_2D,r,u,d,s,a,f,g,m.data):t.isCompressedTexture?Lt.compressedTexSubImage2D(Lt.TEXTURE_2D,r,u,d,m.width,m.height,f,m.data):Lt.texSubImage2D(Lt.TEXTURE_2D,r,u,d,s,a,f,g,m);Lt.pixelStorei(Lt.UNPACK_ROW_LENGTH,y),Lt.pixelStorei(Lt.UNPACK_IMAGE_HEIGHT,x),Lt.pixelStorei(Lt.UNPACK_SKIP_PIXELS,v),Lt.pixelStorei(Lt.UNPACK_SKIP_ROWS,b),Lt.pixelStorei(Lt.UNPACK_SKIP_IMAGES,S),0===r&&e.generateMipmaps&&Lt.generateMipmap(_),dt.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i=null,n=null,r=0){return!0!==t.isTexture&&(fe("WebGLRenderer: copyTextureToTexture3D function signature has changed."),i=arguments[0]||null,n=arguments[1]||null,t=arguments[2],e=arguments[3],r=arguments[4]||0),fe('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(t,e,i,n,r)},this.initRenderTarget=function(t){void 0===mt.get(t).__webglFramebuffer&&ft.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?ft.setTextureCube(t,0):t.isData3DTexture?ft.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?ft.setTexture2DArray(t,0):ft.setTexture2D(t,0),dt.unbindTexture()},this.resetState=function(){E=0,w=0,A=null,dt.reset(),It.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return qt}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorspace=ge._getDrawingBufferColorSpace(t),e.unpackColorSpace=ge._getUnpackColorSpace()}}class Ka{constructor(t,e=1,i=1e3){this.isFog=!0,this.name="",this.color=new an(t),this.near=e,this.far=i}clone(){return new Ka(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Za extends ki{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ti,this.environmentIntensity=1,this.environmentRotation=new Ti,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Ja{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Xt,this.updateRanges=[],this.version=0,this.uuid=ee()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ee()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ee()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Qa=new Fe;class to{constructor(t,e,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)Qa.fromBufferAttribute(this,e),Qa.applyMatrix4(t),this.setXYZ(e,Qa.x,Qa.y,Qa.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Qa.fromBufferAttribute(this,e),Qa.applyNormalMatrix(t),this.setXYZ(e,Qa.x,Qa.y,Qa.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Qa.fromBufferAttribute(this,e),Qa.transformDirection(t),this.setXYZ(e,Qa.x,Qa.y,Qa.z);return this}getComponent(t,e){let i=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(i=se(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=ae(i,this.array)),this.data.array[t*this.data.stride+this.offset+e]=i,this}setX(t,e){return this.normalized&&(e=ae(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ae(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ae(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ae(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=se(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=se(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=se(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=se(e,this.array)),e}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ae(e,this.array),i=ae(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ae(e,this.array),i=ae(i,this.array),n=ae(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=ae(e,this.array),i=ae(i,this.array),n=ae(n,this.array),r=ae(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new pn(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new to(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class eo extends hn{static get type(){return"SpriteMaterial"}constructor(t){super(),this.isSpriteMaterial=!0,this.color=new an(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let io;const no=new Fe,ro=new Fe,so=new Fe,ao=new le,oo=new le,lo=new pi,ho=new Fe,co=new Fe,uo=new Fe,po=new le,mo=new le,fo=new le;class go extends ki{constructor(t=new eo){if(super(),this.isSprite=!0,this.type="Sprite",void 0===io){io=new Mn;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new Ja(t,5);io.setIndex([0,1,2,0,2,3]),io.setAttribute("position",new to(e,3,0,!1)),io.setAttribute("uv",new to(e,2,3,!1))}this.geometry=io,this.material=t,this.center=new le(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ro.setFromMatrixScale(this.matrixWorld),lo.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),so.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ro.multiplyScalar(-so.z);const i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));const s=this.center;_o(ho.set(-.5,-.5,0),so,s,ro,n,r),_o(co.set(.5,-.5,0),so,s,ro,n,r),_o(uo.set(.5,.5,0),so,s,ro,n,r),po.set(0,0),mo.set(1,0),fo.set(1,1);let a=t.ray.intersectTriangle(ho,co,uo,!1,no);if(null===a&&(_o(co.set(-.5,.5,0),so,s,ro,n,r),mo.set(0,1),a=t.ray.intersectTriangle(ho,uo,co,!1,no),null===a))return;const o=t.ray.origin.distanceTo(no);o<t.near||o>t.far||e.push({distance:o,point:no.clone(),uv:tn.getInterpolation(no,ho,co,uo,po,mo,fo,new le),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function _o(t,e,i,n,r,s){ao.subVectors(t,i).addScalar(.5).multiply(n),void 0!==r?(oo.x=s*ao.x-r*ao.y,oo.y=r*ao.x+s*ao.y):oo.copy(ao),t.copy(e),t.x+=oo.x,t.y+=oo.y,t.applyMatrix4(lo)}class yo extends hn{static get type(){return"LineBasicMaterial"}constructor(t){super(),this.isLineBasicMaterial=!0,this.color=new an(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const xo=new Fe,vo=new Fe,bo=new pi,So=new di,To=new ri,Mo=new Fe,Eo=new Fe;class wo extends ki{constructor(t=new Mn,e=new yo){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,n=e.count;t<n;t++)xo.fromBufferAttribute(e,t-1),vo.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=xo.distanceTo(vo);t.setAttribute("lineDistance",new gn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,r=t.params.Line.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),To.copy(i.boundingSphere),To.applyMatrix4(n),To.radius+=r,!1===t.ray.intersectsSphere(To))return;bo.copy(n).invert(),So.copy(t.ray).applyMatrix4(bo);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,h=i.index,c=i.attributes.position;if(null!==h){const i=Math.max(0,s.start),n=Math.min(h.count,s.start+s.count);for(let r=i,s=n-1;r<s;r+=l){const i=h.getX(r),n=h.getX(r+1),s=Ao(this,t,So,o,i,n);s&&e.push(s)}if(this.isLineLoop){const r=h.getX(n-1),s=h.getX(i),a=Ao(this,t,So,o,r,s);a&&e.push(a)}}else{const i=Math.max(0,s.start),n=Math.min(c.count,s.start+s.count);for(let r=i,s=n-1;r<s;r+=l){const i=Ao(this,t,So,o,r,r+1);i&&e.push(i)}if(this.isLineLoop){const r=Ao(this,t,So,o,n-1,i);r&&e.push(r)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Ao(t,e,i,n,r,s){const a=t.geometry.attributes.position;if(xo.fromBufferAttribute(a,r),vo.fromBufferAttribute(a,s),i.distanceSqToSegment(xo,vo,Mo,Eo)>n)return;Mo.applyMatrix4(t.matrixWorld);const o=e.ray.origin.distanceTo(Mo);return o<e.near||o>e.far?void 0:{distance:o,point:Eo.clone().applyMatrix4(t.matrixWorld),index:r,face:null,faceIndex:null,barycoord:null,object:t}}const Ro=new Fe,Co=new Fe;class No extends wo{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,n=e.count;t<n;t+=2)Ro.fromBufferAttribute(e,t),Co.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+Ro.distanceTo(Co);t.setAttribute("lineDistance",new gn(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Po extends Mn{constructor(t=1,e=1,i=1,n=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;n=Math.floor(n),r=Math.floor(r);const h=[],c=[],u=[],d=[];let p=0;const m=[],f=i/2;let g=0;function _(i){const r=p,s=new le,m=new Fe;let _=0;const y=!0===i?t:e,x=!0===i?1:-1;for(let t=1;t<=n;t++)c.push(0,f*x,0),u.push(0,x,0),d.push(.5,.5),p++;const v=p;for(let t=0;t<=n;t++){const e=t/n*o+a,i=Math.cos(e),r=Math.sin(e);m.x=y*r,m.y=f*x,m.z=y*i,c.push(m.x,m.y,m.z),u.push(0,x,0),s.x=.5*i+.5,s.y=.5*r*x+.5,d.push(s.x,s.y),p++}for(let t=0;t<n;t++){const e=r+t,n=v+t;!0===i?h.push(n,n+1,e):h.push(n+1,n,e),_+=3}l.addGroup(g,_,!0===i?1:2),g+=_}!function(){const s=new Fe,_=new Fe;let y=0;const x=(e-t)/i;for(let l=0;l<=r;l++){const h=[],g=l/r,y=g*(e-t)+t;for(let t=0;t<=n;t++){const e=t/n,r=e*o+a,l=Math.sin(r),m=Math.cos(r);_.x=y*l,_.y=-g*i+f,_.z=y*m,c.push(_.x,_.y,_.z),s.set(l,x,m).normalize(),u.push(s.x,s.y,s.z),d.push(e,1-g),h.push(p++)}m.push(h)}for(let i=0;i<n;i++)for(let n=0;n<r;n++){const s=m[n][i],a=m[n+1][i],o=m[n+1][i+1],l=m[n][i+1];(t>0||0!==n)&&(h.push(s,a,l),y+=3),(e>0||n!==r-1)&&(h.push(a,o,l),y+=3)}l.addGroup(g,y,0),g+=y}(),!1===s&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new gn(c,3)),this.setAttribute("normal",new gn(u,3)),this.setAttribute("uv",new gn(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Po(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}const Io=new Fe,Uo=new Fe,Lo=new Fe,Do=new tn;class Bo extends Mn{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const i=4,n=Math.pow(10,i),r=Math.cos(Qt*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],h=["a","b","c"],c=new Array(3),u={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:i,c:o}=Do;if(e.fromBufferAttribute(a,l[0]),i.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Do.getNormal(Lo),c[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,c[1]=`${Math.round(i.x*n)},${Math.round(i.y*n)},${Math.round(i.z*n)}`,c[2]=`${Math.round(o.x*n)},${Math.round(o.y*n)},${Math.round(o.z*n)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let t=0;t<3;t++){const e=(t+1)%3,i=c[t],n=c[e],s=Do[h[t]],a=Do[h[e]],o=`${i}_${n}`,p=`${n}_${i}`;p in u&&u[p]?(Lo.dot(u[p].normal)<=r&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),u[p]=null):o in u||(u[o]={index0:l[t],index1:l[e],normal:Lo.clone()})}}for(const t in u)if(u[t]){const{index0:e,index1:i}=u[t];Io.fromBufferAttribute(a,e),Uo.fromBufferAttribute(a,i),d.push(Io.x,Io.y,Io.z),d.push(Uo.x,Uo.y,Uo.z)}this.setAttribute("position",new gn(d,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Fo extends Mn{constructor(t=1,e=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const o=Math.min(s+a,Math.PI);let l=0;const h=[],c=new Fe,u=new Fe,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],_=d/i;let y=0;0===d&&0===s?y=.5/e:d===i&&o===Math.PI&&(y=-.5/e);for(let i=0;i<=e;i++){const o=i/e;c.x=-t*Math.cos(n+o*r)*Math.sin(s+_*a),c.y=t*Math.cos(s+_*a),c.z=t*Math.sin(n+o*r)*Math.sin(s+_*a),p.push(c.x,c.y,c.z),u.copy(c).normalize(),m.push(u.x,u.y,u.z),f.push(o+y,1-_),g.push(l++)}h.push(g)}for(let t=0;t<i;t++)for(let n=0;n<e;n++){const e=h[t][n+1],r=h[t][n],a=h[t+1][n],l=h[t+1][n+1];(0!==t||s>0)&&d.push(e,r,l),(t!==i-1||o<Math.PI)&&d.push(r,a,l)}this.setIndex(d),this.setAttribute("position",new gn(p,3)),this.setAttribute("normal",new gn(m,3)),this.setAttribute("uv",new gn(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Fo(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Oo extends Mn{constructor(t=1,e=.4,i=12,n=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const s=[],a=[],o=[],l=[],h=new Fe,c=new Fe,u=new Fe;for(let s=0;s<=i;s++)for(let d=0;d<=n;d++){const p=d/n*r,m=s/i*Math.PI*2;c.x=(t+e*Math.cos(m))*Math.cos(p),c.y=(t+e*Math.cos(m))*Math.sin(p),c.z=e*Math.sin(m),a.push(c.x,c.y,c.z),h.x=t*Math.cos(p),h.y=t*Math.sin(p),u.subVectors(c,h).normalize(),o.push(u.x,u.y,u.z),l.push(d/n),l.push(s/i)}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*t+e-1,r=(n+1)*(t-1)+e-1,a=(n+1)*(t-1)+e,o=(n+1)*t+e;s.push(i,r,o),s.push(r,a,o)}this.setIndex(s),this.setAttribute("position",new gn(a,3)),this.setAttribute("normal",new gn(o,3)),this.setAttribute("uv",new gn(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Oo(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class zo extends Mn{constructor(t=1,e=.4,i=64,n=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:s},i=Math.floor(i),n=Math.floor(n);const a=[],o=[],l=[],h=[],c=new Fe,u=new Fe,d=new Fe,p=new Fe,m=new Fe,f=new Fe,g=new Fe;for(let a=0;a<=i;++a){const y=a/i*r*Math.PI*2;_(y,r,s,t,d),_(y+.01,r,s,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=n;++t){const r=t/n*Math.PI*2,s=-e*Math.cos(r),p=e*Math.sin(r);c.x=d.x+(s*g.x+p*m.x),c.y=d.y+(s*g.y+p*m.y),c.z=d.z+(s*g.z+p*m.z),o.push(c.x,c.y,c.z),u.subVectors(c,d).normalize(),l.push(u.x,u.y,u.z),h.push(a/i),h.push(t/n)}}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),r=(n+1)*t+(e-1),s=(n+1)*t+e,o=(n+1)*(t-1)+e;a.push(i,r,o),a.push(r,s,o)}function _(t,e,i,n,r){const s=Math.cos(t),a=Math.sin(t),o=i/e*t,l=Math.cos(o);r.x=n*(2+l)*.5*s,r.y=n*(2+l)*a*.5,r.z=n*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new gn(o,3)),this.setAttribute("normal",new gn(l,3)),this.setAttribute("uv",new gn(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new zo(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}function ko(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}class Vo{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{let s;i:{n:if(!(t<n)){for(let s=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(r=n,n=e[++i],t<n)break e}s=e.length;break i}if(t>=r)break t;{const a=e[1];t<a&&(i=2,r=a);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===s)break;if(n=r,r=e[--i-1],t>=r)break e}s=i,i=0}}for(;i<s;){const n=i+s>>>1;t<e[n]?s=n:i=n+1}if(n=e[i],r=e[i-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n;for(let t=0;t!==n;++t)e[t]=i[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Go extends Vo{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,i){const n=this.parameterPositions;let r=t-2,s=t+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:r=t,a=2*e-i;break;case 2402:r=n.length-2,a=e+n[r]-n[r+1];break;default:r=t,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=t,o=2*i-e;break;case 2402:s=1,o=i+n[1]-n[0];break;default:s=t-1,o=e}const l=.5*(i-e),h=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-i),this._offsetPrev=r*h,this._offsetNext=s*h}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,_=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let t=0;t!==a;++t)r[t]=g*s[h+t]+_*s[l+t]+y*s[o+t]+x*s[c+t];return r}}class Ho extends Vo{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,h=(i-e)/(n-e),c=1-h;for(let t=0;t!==a;++t)r[t]=s[l+t]*c+s[o+t]*h;return r}}class Wo extends Vo{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class jo{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ko(e,this.TimeBufferType),this.values=ko(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:ko(t.times,Array),values:ko(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new Wo(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Ho(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Go(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Ft:e=this.InterpolantFactoryMethodDiscrete;break;case Ot:e=this.InterpolantFactoryMethodLinear;break;case zt:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ft;case this.InterpolantFactoryMethodLinear:return Ot;case this.InterpolantFactoryMethodSmooth:return zt}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<t;)++r;for(;-1!==s&&i[s]>e;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=i.slice(r,s),this.values=this.values.slice(r*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==r;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,s),t=!1;break}s=n}if(void 0!==n&&(a=n,ArrayBuffer.isView(a)&&!(a instanceof DataView)))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}var a;return t}optimize(){const t=this.times.slice(),e=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===zt,r=t.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(n)r=!0;else{const t=a*i,n=t-i,s=t+i;for(let a=0;a!==i;++a){const i=e[t+a];if(i!==e[n+a]||i!==e[s+a]){r=!0;break}}}if(r){if(a!==s){t[s]=t[a];const n=a*i,r=s*i;for(let t=0;t!==i;++t)e[r+t]=e[n+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*i,n=s*i,a=0;a!==i;++a)e[n+a]=e[t+a];++s}return s!==t.length?(this.times=t.slice(0,s),this.values=e.slice(0,s*i)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}jo.prototype.TimeBufferType=Float32Array,jo.prototype.ValueBufferType=Float32Array,jo.prototype.DefaultInterpolation=Ot;class Xo extends jo{constructor(t,e,i){super(t,e,i)}}Xo.prototype.ValueTypeName="bool",Xo.prototype.ValueBufferType=Array,Xo.prototype.DefaultInterpolation=Ft,Xo.prototype.InterpolantFactoryMethodLinear=void 0,Xo.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends jo{}).prototype.ValueTypeName="color";(class extends jo{}).prototype.ValueTypeName="number";class $o extends Vo{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-e)/(n-e);let l=t*a;for(let t=l+a;l!==t;l+=4)Be.slerpFlat(r,0,s,l-a,s,l,o);return r}}class qo extends jo{InterpolantFactoryMethodLinear(t){return new $o(this.times,this.values,this.getValueSize(),t)}}qo.prototype.ValueTypeName="quaternion",qo.prototype.InterpolantFactoryMethodSmooth=void 0;class Yo extends jo{constructor(t,e,i){super(t,e,i)}}Yo.prototype.ValueTypeName="string",Yo.prototype.ValueBufferType=Array,Yo.prototype.DefaultInterpolation=Ft,Yo.prototype.InterpolantFactoryMethodLinear=void 0,Yo.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends jo{}).prototype.ValueTypeName="vector";const Ko={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Zo{constructor(t,e,i){const n=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===s&&void 0!==n.onStart&&n.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=l.length;e<i;e+=2){const i=l[e],n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return n}return null}}}const Jo=new Zo;class Qo{constructor(t){this.manager=void 0!==t?t:Jo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(n,r){i.load(t,n,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}Qo.DEFAULT_MATERIAL_NAME="__DEFAULT",Error;class tl extends Qo{constructor(t){super(t)}load(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ko.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a=de("img");function o(){h(),Ko.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){h(),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class el extends Qo{constructor(t){super(t)}load(t,e,i,n){const r=new Ne,s=new tl(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)}),i,n),r}}class il extends ki{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new an(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}const nl=new pi,rl=new Fe,sl=new Fe;class al{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new le(512,512),this.map=null,this.mapPass=null,this.matrix=new pi,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new sr,this._frameExtents=new le(1,1),this._viewportCount=1,this._viewports=[new Pe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;rl.setFromMatrixPosition(t.matrixWorld),e.position.copy(rl),sl.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(sl),e.updateMatrixWorld(),nl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(nl),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(nl)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}const ol=new pi,ll=new Fe,hl=new Fe;class cl extends al{constructor(){super(new qn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new le(4,2),this._viewportCount=6,this._viewports=[new Pe(2,1,1,1),new Pe(0,1,1,1),new Pe(3,1,1,1),new Pe(1,1,1,1),new Pe(3,0,1,1),new Pe(1,0,1,1)],this._cubeDirections=[new Fe(1,0,0),new Fe(-1,0,0),new Fe(0,0,1),new Fe(0,0,-1),new Fe(0,1,0),new Fe(0,-1,0)],this._cubeUps=[new Fe(0,1,0),new Fe(0,1,0),new Fe(0,1,0),new Fe(0,1,0),new Fe(0,0,1),new Fe(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,r=t.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),ll.setFromMatrixPosition(t.matrixWorld),i.position.copy(ll),hl.copy(i.position),hl.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(hl),i.updateMatrixWorld(),n.makeTranslation(-ll.x,-ll.y,-ll.z),ol.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ol)}}class ul extends il{constructor(t,e,i=0,n=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new cl}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class dl extends il{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}const pl="\\[\\]\\.:\\/",ml=new RegExp("["+pl+"]","g"),fl="[^"+pl+"]",gl="[^"+pl.replace("\\.","")+"]",_l=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",fl)+/(WCOD+)?/.source.replace("WCOD",gl)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fl)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fl)+"$"),yl=["material","materials","bones","map"];class xl{constructor(t,e,i){this.path=e,this.parsedPath=i||xl.parseTrackName(e),this.node=xl.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new xl.Composite(t,e,i):new xl(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(ml,"")}static parseTrackName(t){const e=_l.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==yl.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const r=t[n];if(r.name===e||r.uuid===e)return r;const s=i(r.children);if(s)return s}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let r=e.propertyIndex;if(t||(t=xl.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const s=t[n];if(void 0===s){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}xl.Composite=class{constructor(t,e,i){const n=i||xl.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},xl.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},xl.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},xl.prototype.GetterByBindingType=[xl.prototype._getValue_direct,xl.prototype._getValue_array,xl.prototype._getValue_arrayElement,xl.prototype._getValue_toArray],xl.prototype.SetterByBindingTypeAndVersioning=[[xl.prototype._setValue_direct,xl.prototype._setValue_direct_setNeedsUpdate,xl.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[xl.prototype._setValue_array,xl.prototype._setValue_array_setNeedsUpdate,xl.prototype._setValue_array_setMatrixWorldNeedsUpdate],[xl.prototype._setValue_arrayElement,xl.prototype._setValue_arrayElement_setNeedsUpdate,xl.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[xl.prototype._setValue_fromArray,xl.prototype._setValue_fromArray_setNeedsUpdate,xl.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class vl{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(ie(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class bl extends Bn{constructor(t,e,i){super(new Fo(e,4,2),new cn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class Sl extends wo{constructor(t,e=1,i=16776960){const n=i,r=new Mn;r.setAttribute("position",new gn([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new yo({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new Mn;s.setAttribute("position",new gn([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new Bn(s,new cn({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}class Tl extends No{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new Mn;i.setAttribute("position",new gn(e,3)),i.setAttribute("color",new gn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(i,new yo({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,i){const n=new an,r=this.geometry.attributes.color.array;return n.set(t),n.toArray(r,0),n.toArray(r,3),n.set(e),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ml extends Kt{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n)},293:(t,e,i)=>{i.d(e,{$p8:()=>Lr,F1l:()=>Xr,FV:()=>l,Fn:()=>ia,Gu$:()=>Zn,HMD:()=>Fc,HiM:()=>Nr,IzY:()=>$r,MI8:()=>Vh,O3Y:()=>Jn,P8l:()=>Pd,PiW:()=>Ua,Q1f:()=>Mi,T9B:()=>xl,V9B:()=>Ri,Z58:()=>bn,eR5:()=>fa,eaF:()=>an,gnS:()=>tl,jUj:()=>vn,jbE:()=>fo,n7C:()=>Al,nB0:()=>kc,ono:()=>Jh,sPf:()=>n,uV1:()=>zx,ubm:()=>fn,zE5:()=>kd});const n="170",r=0,s=100,a=204,o=205,l=4,h=301,c=302,u=303,d=304,p=1e3,m=1001,f=1002,g=1003,_=1004,y=1005,x=1006,v=1007,b=1008,S=1009,T=1010,M=1011,E=1012,w=1013,A=1014,R=1015,C=1016,N=1020,P=1022,I=1023,U=1026,L=1027,D=1028,B=1029,F=1030,O=1031,z=1033,k=33776,V=33777,G=33778,H=33779,W=37492,j=37496,X=37808,$=37809,q=37810,Y=37811,K=37812,Z=37813,J=37814,Q=37815,tt=37816,et=37817,it=37818,nt=37819,rt=37820,st=37821,at=36492,ot=2300,lt=2301,ht=2302,ct="srgb",ut="srgb-linear",dt="linear",pt="srgb",mt=7680,ft=35044,gt=35048,_t=2e3,yt=2001;class xt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const vt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let bt=1234567;const St=Math.PI/180,Tt=180/Math.PI;function Mt(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(vt[255&t]+vt[t>>8&255]+vt[t>>16&255]+vt[t>>24&255]+"-"+vt[255&e]+vt[e>>8&255]+"-"+vt[e>>16&15|64]+vt[e>>24&255]+"-"+vt[63&i|128]+vt[i>>8&255]+"-"+vt[i>>16&255]+vt[i>>24&255]+vt[255&n]+vt[n>>8&255]+vt[n>>16&255]+vt[n>>24&255]).toLowerCase()}function Et(t,e,i){return Math.max(e,Math.min(i,t))}function wt(t,e){return(t%e+e)%e}function At(t,e,i){return(1-i)*t+i*e}function Rt(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Ct(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const Nt={DEG2RAD:St,RAD2DEG:Tt,generateUUID:Mt,clamp:Et,euclideanModulo:wt,mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:At,damp:function(t,e,i,n){return At(t,e,1-Math.exp(-i*n))},pingpong:function(t,e=1){return e-Math.abs(wt(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(bt=t);let e=bt+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*St},radToDeg:function(t){return t*Tt},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,i,n,r){const s=Math.cos,a=Math.sin,o=s(i/2),l=a(i/2),h=s((e+n)/2),c=a((e+n)/2),u=s((e-n)/2),d=a((e-n)/2),p=s((n-e)/2),m=a((n-e)/2);switch(r){case"XYX":t.set(o*c,l*u,l*d,o*h);break;case"YZY":t.set(l*d,o*c,l*u,o*h);break;case"ZXZ":t.set(l*u,l*d,o*c,o*h);break;case"XZX":t.set(o*c,l*m,l*p,o*h);break;case"YXY":t.set(l*p,o*c,l*m,o*h);break;case"ZYZ":t.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:Ct,denormalize:Rt};class Pt{constructor(t=0,e=0){Pt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Et(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*i-s*n+t.x,this.y=r*n+s*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class It{constructor(t,e,i,n,r,s,a,o,l){It.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,i,n,r,s,a,o,l)}set(t,e,i,n,r,s,a,o,l){const h=this.elements;return h[0]=t,h[1]=n,h[2]=a,h[3]=e,h[4]=r,h[5]=o,h[6]=i,h[7]=s,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],h=i[4],c=i[7],u=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],_=n[1],y=n[4],x=n[7],v=n[2],b=n[5],S=n[8];return r[0]=s*m+a*_+o*v,r[3]=s*f+a*y+o*b,r[6]=s*g+a*x+o*S,r[1]=l*m+h*_+c*v,r[4]=l*f+h*y+c*b,r[7]=l*g+h*x+c*S,r[2]=u*m+d*_+p*v,r[5]=u*f+d*y+p*b,r[8]=u*g+d*x+p*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8];return e*s*h-e*a*l-i*r*h+i*a*o+n*r*l-n*s*o}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=h*s-a*l,u=a*o-h*r,d=l*r-s*o,p=e*c+i*u+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=c*m,t[1]=(n*l-h*i)*m,t[2]=(a*i-n*s)*m,t[3]=u*m,t[4]=(h*e-n*o)*m,t[5]=(n*r-a*e)*m,t[6]=d*m,t[7]=(i*o-l*e)*m,t[8]=(s*e-i*r)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+t,-n*l,n*o,-n*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Ut.makeScale(t,e)),this}rotate(t){return this.premultiply(Ut.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ut.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const Ut=new It;function Lt(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Dt={},Bt={enabled:!0,workingColorSpace:ut,spaces:{},convert:function(t,e,i){return!1!==this.enabled&&e!==i&&e&&i?(this.spaces[e].transfer===pt&&(t.r=Ft(t.r),t.g=Ft(t.g),t.b=Ft(t.b)),this.spaces[e].primaries!==this.spaces[i].primaries&&(t.applyMatrix3(this.spaces[e].toXYZ),t.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===pt&&(t.r=Ot(t.r),t.g=Ot(t.g),t.b=Ot(t.b)),t):t},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return""===t?dt:this.spaces[t].transfer},getLuminanceCoefficients:function(t,e=this.workingColorSpace){return t.fromArray(this.spaces[e].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,e,i){return t.copy(this.spaces[e].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace}};function Ft(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Ot(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const zt=[.64,.33,.3,.6,.15,.06],kt=[.2126,.7152,.0722],Vt=[.3127,.329],Gt=(new It).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ht=(new It).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);let Wt;Bt.define({[ut]:{primaries:zt,whitePoint:Vt,transfer:dt,toXYZ:Gt,fromXYZ:Ht,luminanceCoefficients:kt,workingColorSpaceConfig:{unpackColorSpace:ct},outputColorSpaceConfig:{drawingBufferColorSpace:ct}},[ct]:{primaries:zt,whitePoint:Vt,transfer:pt,toXYZ:Gt,fromXYZ:Ht,luminanceCoefficients:kt,outputColorSpaceConfig:{drawingBufferColorSpace:ct}}});class jt{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Wt&&(Wt=Lt("canvas")),Wt.width=t.width,Wt.height=t.height;const i=Wt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Wt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Lt("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),r=n.data;for(let t=0;t<r.length;t++)r[t]=255*Ft(r[t]/255);return i.putImageData(n,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Ft(e[t]/255)):e[t]=Ft(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Xt=0;class $t{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Xt++}),this.uuid=Mt(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)n[e].isDataTexture?t.push(qt(n[e].image)):t.push(qt(n[e]))}else t=qt(n);i.url=t}return e||(t.images[this.uuid]=i),i}}function qt(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?jt.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Yt=0;class Kt extends xt{constructor(t=Kt.DEFAULT_IMAGE,e=Kt.DEFAULT_MAPPING,i=1001,n=1001,r=1006,s=1008,a=1023,o=1009,l=Kt.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Yt++}),this.uuid=Mt(),this.name="",this.source=new $t(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Pt(0,0),this.repeat=new Pt(1,1),this.center=new Pt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new It,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case p:t.x=t.x-Math.floor(t.x);break;case m:t.x=t.x<0?0:1;break;case f:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case p:t.y=t.y-Math.floor(t.y);break;case m:t.y=t.y<0?0:1;break;case f:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Kt.DEFAULT_IMAGE=null,Kt.DEFAULT_MAPPING=300,Kt.DEFAULT_ANISOTROPY=1;class Zt{constructor(t=0,e=0,i=0,n=1){Zt.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*e+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*e+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*e+s[7]*i+s[11]*n+s[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,r;const s=.01,a=.1,o=t.elements,l=o[0],h=o[4],c=o[8],u=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(h-u)<s&&Math.abs(c-m)<s&&Math.abs(p-f)<s){if(Math.abs(h+u)<a&&Math.abs(c+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,_=(g+1)/2,y=(h+u)/4,x=(c+m)/4,v=(p+f)/4;return t>o&&t>_?t<s?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(t),n=y/i,r=x/i):o>_?o<s?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(o),i=y/n,r=v/n):_<s?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(_),i=x/r,n=v/r),this.set(i,n,r,e),this}let _=Math.sqrt((f-p)*(f-p)+(c-m)*(c-m)+(u-h)*(u-h));return Math.abs(_)<.001&&(_=1),this.x=(f-p)/_,this.y=(c-m)/_,this.z=(u-h)/_,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Jt extends xt{constructor(t=1,e=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Zt(0,0,t,e),this.scissorTest=!1,this.viewport=new Zt(0,0,t,e);const n={width:t,height:e,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:x,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const r=new Kt(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const s=i.count;for(let t=0;t<s;t++)this.textures[t]=r.clone(),this.textures[t].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=t,this.textures[n].image.height=e,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,i=t.textures.length;e<i;e++)this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new $t(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Qt extends Jt{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class te extends Kt{constructor(t=null,e=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=g,this.minFilter=g,this.wrapR=m,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class ee{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,r,s,a){let o=i[n+0],l=i[n+1],h=i[n+2],c=i[n+3];const u=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=h,void(t[e+3]=c);if(1===a)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(c!==m||o!==u||l!==d||h!==p){let t=1-a;const e=o*u+l*d+h*p+c*m,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const r=Math.sqrt(n),s=Math.atan2(r,e*i);t=Math.sin(t*s)/r,a=Math.sin(a*s)/r}const r=a*i;if(o=o*t+u*r,l=l*t+d*r,h=h*t+p*r,c=c*t+m*r,t===1-a){const t=1/Math.sqrt(o*o+l*l+h*h+c*c);o*=t,l*=t,h*=t,c*=t}}t[e]=o,t[e+1]=l,t[e+2]=h,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,n,r,s){const a=i[n],o=i[n+1],l=i[n+2],h=i[n+3],c=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=a*p+h*c+o*d-l*u,t[e+1]=o*p+h*u+l*c-a*d,t[e+2]=l*p+h*d+a*u-o*c,t[e+3]=h*p-a*c-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,n=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(i/2),h=a(n/2),c=a(r/2),u=o(i/2),d=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],h=e[6],c=e[10],u=i+a+c;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(h-o)*t,this._y=(r-l)*t,this._z=(s-n)*t}else if(i>a&&i>c){const t=2*Math.sqrt(1+i-a-c);this._w=(h-o)/t,this._x=.25*t,this._y=(n+s)/t,this._z=(r+l)/t}else if(a>c){const t=2*Math.sqrt(1+a-i-c);this._w=(r-l)/t,this._x=(n+s)/t,this._y=.25*t,this._z=(o+h)/t}else{const t=2*Math.sqrt(1+c-i-a);this._w=(s-n)/t,this._x=(r+l)/t,this._y=(o+h)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Et(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,h=e._w;return this._x=i*h+s*a+n*l-r*o,this._y=n*h+s*o+r*a-i*l,this._z=r*h+s*l+i*o-n*a,this._w=s*h-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,r=this._z,s=this._w;let a=s*t._w+i*t._x+n*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const l=Math.sqrt(o),h=Math.atan2(l,a),c=Math.sin((1-e)*h)/l,u=Math.sin(e*h)/l;return this._w=s*c+this._w*u,this._x=i*c+this._x*u,this._y=n*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(t),n*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ie{constructor(t=0,e=0,i=0){ie.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(re.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(re.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=t.elements,s=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=2*(s*n-a*i),h=2*(a*e-r*n),c=2*(r*i-s*e);return this.x=e+o*l+s*c-a*h,this.y=i+o*h+a*l-r*c,this.z=n+o*c+r*h-s*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return ne.copy(this).projectOnVector(t),this.sub(ne)}reflect(t){return this.sub(ne.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Et(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ne=new ie,re=new ee;class se{constructor(t=new ie(1/0,1/0,1/0),e=new ie(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(oe.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(oe.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=oe.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i){const n=i.getAttribute("position");if(!0===e&&void 0!==n&&!0!==t.isInstancedMesh)for(let e=0,i=n.count;e<i;e++)!0===t.isMesh?t.getVertexPosition(e,oe):oe.fromBufferAttribute(n,e),oe.applyMatrix4(t.matrixWorld),this.expandByPoint(oe);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),le.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),le.copy(i.boundingBox)),le.applyMatrix4(t.matrixWorld),this.union(le)}const n=t.children;for(let t=0,i=n.length;t<i;t++)this.expandByObject(n[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,oe),oe.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(fe),ge.subVectors(this.max,fe),he.subVectors(t.a,fe),ce.subVectors(t.b,fe),ue.subVectors(t.c,fe),de.subVectors(ce,he),pe.subVectors(ue,ce),me.subVectors(he,ue);let e=[0,-de.z,de.y,0,-pe.z,pe.y,0,-me.z,me.y,de.z,0,-de.x,pe.z,0,-pe.x,me.z,0,-me.x,-de.y,de.x,0,-pe.y,pe.x,0,-me.y,me.x,0];return!!xe(e,he,ce,ue,ge)&&(e=[1,0,0,0,1,0,0,0,1],!!xe(e,he,ce,ue,ge)&&(_e.crossVectors(de,pe),e=[_e.x,_e.y,_e.z],xe(e,he,ce,ue,ge)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,oe).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(oe).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(ae[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ae[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ae[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ae[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ae[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ae[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ae[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ae[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ae)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ae=[new ie,new ie,new ie,new ie,new ie,new ie,new ie,new ie],oe=new ie,le=new se,he=new ie,ce=new ie,ue=new ie,de=new ie,pe=new ie,me=new ie,fe=new ie,ge=new ie,_e=new ie,ye=new ie;function xe(t,e,i,n,r){for(let s=0,a=t.length-3;s<=a;s+=3){ye.fromArray(t,s);const a=r.x*Math.abs(ye.x)+r.y*Math.abs(ye.y)+r.z*Math.abs(ye.z),o=e.dot(ye),l=i.dot(ye),h=n.dot(ye);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>a)return!1}return!0}const ve=new se,be=new ie,Se=new ie;class Te{constructor(t=new ie,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):ve.setFromPoints(t).getCenter(i);let n=0;for(let e=0,r=t.length;e<r;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;be.subVectors(t,this.center);const e=be.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.addScaledVector(be,i/t),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(Se.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(be.copy(t.center).add(Se)),this.expandByPoint(be.copy(t.center).sub(Se))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Me=new ie,Ee=new ie,we=new ie,Ae=new ie,Re=new ie,Ce=new ie,Ne=new ie;class Pe{constructor(t=new ie,e=new ie(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Me)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Me.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Me.copy(this.origin).addScaledVector(this.direction,e),Me.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Ee.copy(t).add(e).multiplyScalar(.5),we.copy(e).sub(t).normalize(),Ae.copy(this.origin).sub(Ee);const r=.5*t.distanceTo(e),s=-this.direction.dot(we),a=Ae.dot(this.direction),o=-Ae.dot(we),l=Ae.lengthSq(),h=Math.abs(1-s*s);let c,u,d,p;if(h>0)if(c=s*o-a,u=s*a-o,p=r*h,c>=0)if(u>=-p)if(u<=p){const t=1/h;c*=t,u*=t,d=c*(c+s*u+2*a)+u*(s*c+u+2*o)+l}else u=r,c=Math.max(0,-(s*u+a)),d=-c*c+u*(u+2*o)+l;else u=-r,c=Math.max(0,-(s*u+a)),d=-c*c+u*(u+2*o)+l;else u<=-p?(c=Math.max(0,-(-s*r+a)),u=c>0?-r:Math.min(Math.max(-r,-o),r),d=-c*c+u*(u+2*o)+l):u<=p?(c=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(c=Math.max(0,-(s*r+a)),u=c>0?r:Math.min(Math.max(-r,-o),r),d=-c*c+u*(u+2*o)+l);else u=s>0?-r:r,c=Math.max(0,-(s*u+a)),d=-c*c+u*(u+2*o)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,c),n&&n.copy(Ee).addScaledVector(we,u),d}intersectSphere(t,e){Me.subVectors(t.center,this.origin);const i=Me.dot(this.direction),n=Me.dot(Me)-i*i,r=t.radius*t.radius;if(n>r)return null;const s=Math.sqrt(r-n),a=i-s,o=i+s;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,r,s,a,o;const l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return l>=0?(i=(t.min.x-u.x)*l,n=(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,n=(t.min.x-u.x)*l),h>=0?(r=(t.min.y-u.y)*h,s=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,s=(t.min.y-u.y)*h),i>s||r>n?null:((r>i||isNaN(i))&&(i=r),(s<n||isNaN(n))&&(n=s),c>=0?(a=(t.min.z-u.z)*c,o=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,o=(t.min.z-u.z)*c),i>o||a>n?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,Me)}intersectTriangle(t,e,i,n,r){Re.subVectors(e,t),Ce.subVectors(i,t),Ne.crossVectors(Re,Ce);let s,a=this.direction.dot(Ne);if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Ae.subVectors(this.origin,t);const o=s*this.direction.dot(Ce.crossVectors(Ae,Ce));if(o<0)return null;const l=s*this.direction.dot(Re.cross(Ae));if(l<0)return null;if(o+l>a)return null;const h=-s*Ae.dot(Ne);return h<0?null:this.at(h/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Ie{constructor(t,e,i,n,r,s,a,o,l,h,c,u,d,p,m,f){Ie.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,i,n,r,s,a,o,l,h,c,u,d,p,m,f)}set(t,e,i,n,r,s,a,o,l,h,c,u,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ie).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/Ue.setFromMatrixColumn(t,0).length(),r=1/Ue.setFromMatrixColumn(t,1).length(),s=1/Ue.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*s,e[9]=i[9]*s,e[10]=i[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,r=t.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),h=Math.cos(r),c=Math.sin(r);if("XYZ"===t.order){const t=s*h,i=s*c,n=a*h,r=a*c;e[0]=o*h,e[4]=-o*c,e[8]=l,e[1]=i+n*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=n+i*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*h,i=o*c,n=l*h,r=l*c;e[0]=t+r*a,e[4]=n*a-i,e[8]=s*l,e[1]=s*c,e[5]=s*h,e[9]=-a,e[2]=i*a-n,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*h,i=o*c,n=l*h,r=l*c;e[0]=t-r*a,e[4]=-s*c,e[8]=n+i*a,e[1]=i+n*a,e[5]=s*h,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*h,i=s*c,n=a*h,r=a*c;e[0]=o*h,e[4]=n*l-i,e[8]=t*l+r,e[1]=o*c,e[5]=r*l+t,e[9]=i*l-n,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*h,e[4]=r-t*c,e[8]=n*c+i,e[1]=c,e[5]=s*h,e[9]=-a*h,e[2]=-l*h,e[6]=i*c+n,e[10]=t-r*c}else if("XZY"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*h,e[4]=-c,e[8]=l*h,e[1]=t*c+r,e[5]=s*h,e[9]=i*c-n,e[2]=n*c-i,e[6]=a*h,e[10]=r*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(De,t,Be)}lookAt(t,e,i){const n=this.elements;return ze.subVectors(t,e),0===ze.lengthSq()&&(ze.z=1),ze.normalize(),Fe.crossVectors(i,ze),0===Fe.lengthSq()&&(1===Math.abs(i.z)?ze.x+=1e-4:ze.z+=1e-4,ze.normalize(),Fe.crossVectors(i,ze)),Fe.normalize(),Oe.crossVectors(ze,Fe),n[0]=Fe.x,n[4]=Oe.x,n[8]=ze.x,n[1]=Fe.y,n[5]=Oe.y,n[9]=ze.y,n[2]=Fe.z,n[6]=Oe.z,n[10]=ze.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],_=i[3],y=i[7],x=i[11],v=i[15],b=n[0],S=n[4],T=n[8],M=n[12],E=n[1],w=n[5],A=n[9],R=n[13],C=n[2],N=n[6],P=n[10],I=n[14],U=n[3],L=n[7],D=n[11],B=n[15];return r[0]=s*b+a*E+o*C+l*U,r[4]=s*S+a*w+o*N+l*L,r[8]=s*T+a*A+o*P+l*D,r[12]=s*M+a*R+o*I+l*B,r[1]=h*b+c*E+u*C+d*U,r[5]=h*S+c*w+u*N+d*L,r[9]=h*T+c*A+u*P+d*D,r[13]=h*M+c*R+u*I+d*B,r[2]=p*b+m*E+f*C+g*U,r[6]=p*S+m*w+f*N+g*L,r[10]=p*T+m*A+f*P+g*D,r[14]=p*M+m*R+f*I+g*B,r[3]=_*b+y*E+x*C+v*U,r[7]=_*S+y*w+x*N+v*L,r[11]=_*T+y*A+x*P+v*D,r[15]=_*M+y*R+x*I+v*B,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],h=t[2],c=t[6],u=t[10],d=t[14];return t[3]*(+r*o*c-n*l*c-r*a*u+i*l*u+n*a*d-i*o*d)+t[7]*(+e*o*d-e*l*u+r*s*u-n*s*d+n*l*h-r*o*h)+t[11]*(+e*l*c-e*a*d-r*s*c+i*s*d+r*a*h-i*l*h)+t[15]*(-n*a*h-e*o*c+e*a*u+n*s*c-i*s*u+i*o*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=t[9],u=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],_=c*f*l-m*u*l+m*o*d-a*f*d-c*o*g+a*u*g,y=p*u*l-h*f*l-p*o*d+s*f*d+h*o*g-s*u*g,x=h*m*l-p*c*l+p*a*d-s*m*d-h*a*g+s*c*g,v=p*c*o-h*m*o-p*a*u+s*m*u+h*a*f-s*c*f,b=e*_+i*y+n*x+r*v;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/b;return t[0]=_*S,t[1]=(m*u*r-c*f*r-m*n*d+i*f*d+c*n*g-i*u*g)*S,t[2]=(a*f*r-m*o*r+m*n*l-i*f*l-a*n*g+i*o*g)*S,t[3]=(c*o*r-a*u*r-c*n*l+i*u*l+a*n*d-i*o*d)*S,t[4]=y*S,t[5]=(h*f*r-p*u*r+p*n*d-e*f*d-h*n*g+e*u*g)*S,t[6]=(p*o*r-s*f*r-p*n*l+e*f*l+s*n*g-e*o*g)*S,t[7]=(s*u*r-h*o*r+h*n*l-e*u*l-s*n*d+e*o*d)*S,t[8]=x*S,t[9]=(p*c*r-h*m*r-p*i*d+e*m*d+h*i*g-e*c*g)*S,t[10]=(s*m*r-p*a*r+p*i*l-e*m*l-s*i*g+e*a*g)*S,t[11]=(h*a*r-s*c*r-h*i*l+e*c*l+s*i*d-e*a*d)*S,t[12]=v*S,t[13]=(h*m*n-p*c*n+p*i*u-e*m*u-h*i*f+e*c*f)*S,t[14]=(p*a*n-s*m*n-p*i*o+e*m*o+s*i*f-e*a*f)*S,t[15]=(s*c*n-h*a*n+h*i*o-e*c*o-s*i*u+e*a*u)*S,this}scale(t){const e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),r=1-i,s=t.x,a=t.y,o=t.z,l=r*s,h=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,h*a+i,h*o-n*s,0,l*o-n*a,h*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,r,s){return this.set(1,i,r,0,t,1,s,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,h=s+s,c=a+a,u=r*l,d=r*h,p=r*c,m=s*h,f=s*c,g=a*c,_=o*l,y=o*h,x=o*c,v=i.x,b=i.y,S=i.z;return n[0]=(1-(m+g))*v,n[1]=(d+x)*v,n[2]=(p-y)*v,n[3]=0,n[4]=(d-x)*b,n[5]=(1-(u+g))*b,n[6]=(f+_)*b,n[7]=0,n[8]=(p+y)*S,n[9]=(f-_)*S,n[10]=(1-(u+m))*S,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let r=Ue.set(n[0],n[1],n[2]).length();const s=Ue.set(n[4],n[5],n[6]).length(),a=Ue.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],Le.copy(this);const o=1/r,l=1/s,h=1/a;return Le.elements[0]*=o,Le.elements[1]*=o,Le.elements[2]*=o,Le.elements[4]*=l,Le.elements[5]*=l,Le.elements[6]*=l,Le.elements[8]*=h,Le.elements[9]*=h,Le.elements[10]*=h,e.setFromRotationMatrix(Le),i.x=r,i.y=s,i.z=a,this}makePerspective(t,e,i,n,r,s,a=2e3){const o=this.elements,l=2*r/(e-t),h=2*r/(i-n),c=(e+t)/(e-t),u=(i+n)/(i-n);let d,p;if(a===_t)d=-(s+r)/(s-r),p=-2*s*r/(s-r);else{if(a!==yt)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-s/(s-r),p=-s*r/(s-r)}return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=h,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,i,n,r,s,a=2e3){const o=this.elements,l=1/(e-t),h=1/(i-n),c=1/(s-r),u=(e+t)*l,d=(i+n)*h;let p,m;if(a===_t)p=(s+r)*c,m=-2*c;else{if(a!==yt)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=r*c,m=-1*c}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=m,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Ue=new ie,Le=new Ie,De=new ie(0,0,0),Be=new ie(1,1,1),Fe=new ie,Oe=new ie,ze=new ie,ke=new Ie,Ve=new ee;class Ge{constructor(t=0,e=0,i=0,n=Ge.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],h=n[9],c=n[2],u=n[6],d=n[10];switch(e){case"XYZ":this._y=Math.asin(Et(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Et(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(Et(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-Et(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(Et(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Et(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return ke.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ke,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ve.setFromEuler(this),this.setFromQuaternion(Ve,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ge.DEFAULT_ORDER="XYZ";class He{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let We=0;const je=new ie,Xe=new ee,$e=new Ie,qe=new ie,Ye=new ie,Ke=new ie,Ze=new ee,Je=new ie(1,0,0),Qe=new ie(0,1,0),ti=new ie(0,0,1),ei={type:"added"},ii={type:"removed"},ni={type:"childadded",child:null},ri={type:"childremoved",child:null};class si extends xt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:We++}),this.uuid=Mt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=si.DEFAULT_UP.clone();const t=new ie,e=new Ge,i=new ee,n=new ie(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ie},normalMatrix:{value:new It}}),this.matrix=new Ie,this.matrixWorld=new Ie,this.matrixAutoUpdate=si.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=si.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new He,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Xe.setFromAxisAngle(t,e),this.quaternion.multiply(Xe),this}rotateOnWorldAxis(t,e){return Xe.setFromAxisAngle(t,e),this.quaternion.premultiply(Xe),this}rotateX(t){return this.rotateOnAxis(Je,t)}rotateY(t){return this.rotateOnAxis(Qe,t)}rotateZ(t){return this.rotateOnAxis(ti,t)}translateOnAxis(t,e){return je.copy(t).applyQuaternion(this.quaternion),this.position.add(je.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Je,t)}translateY(t){return this.translateOnAxis(Qe,t)}translateZ(t){return this.translateOnAxis(ti,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4($e.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?qe.copy(t):qe.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Ye.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$e.lookAt(Ye,qe,this.up):$e.lookAt(qe,Ye,this.up),this.quaternion.setFromRotationMatrix($e),n&&($e.extractRotation(n.matrixWorld),Xe.setFromRotationMatrix($e),this.quaternion.premultiply(Xe.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(ei),ni.child=t,this.dispatchEvent(ni),ni.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ii),ri.child=t,this.dispatchEvent(ri),ri.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),$e.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),$e.multiply(t.parent.matrixWorld)),t.applyMatrix4($e),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(ei),ni.child=t,this.dispatchEvent(ni),ni.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const n=this.children;for(let r=0,s=n.length;r<s;r++)n[r].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ye,t,Ke),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ye,Ze,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(n.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),null!==this.boundingBox&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];r(t.shapes,n)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(r(t.materials,this.material[i]));n.material=e}else n.material=r(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(r(t.animations,i))}}if(e){const e=s(t.geometries),n=s(t.materials),r=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),h=s(t.animations),c=s(t.nodes);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),h.length>0&&(i.animations=h),c.length>0&&(i.nodes=c)}return i.object=n,i;function s(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}si.DEFAULT_UP=new ie(0,1,0),si.DEFAULT_MATRIX_AUTO_UPDATE=!0,si.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ai=new ie,oi=new ie,li=new ie,hi=new ie,ci=new ie,ui=new ie,di=new ie,pi=new ie,mi=new ie,fi=new ie,gi=new Zt,_i=new Zt,yi=new Zt;class xi{constructor(t=new ie,e=new ie,i=new ie){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),ai.subVectors(t,e),n.cross(ai);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(t,e,i,n,r){ai.subVectors(n,e),oi.subVectors(i,e),li.subVectors(t,e);const s=ai.dot(ai),a=ai.dot(oi),o=ai.dot(li),l=oi.dot(oi),h=oi.dot(li),c=s*l-a*a;if(0===c)return r.set(0,0,0),null;const u=1/c,d=(l*o-a*h)*u,p=(s*h-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,i,n){return null!==this.getBarycoord(t,e,i,n,hi)&&hi.x>=0&&hi.y>=0&&hi.x+hi.y<=1}static getInterpolation(t,e,i,n,r,s,a,o){return null===this.getBarycoord(t,e,i,n,hi)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,hi.x),o.addScaledVector(s,hi.y),o.addScaledVector(a,hi.z),o)}static getInterpolatedAttribute(t,e,i,n,r,s){return gi.setScalar(0),_i.setScalar(0),yi.setScalar(0),gi.fromBufferAttribute(t,e),_i.fromBufferAttribute(t,i),yi.fromBufferAttribute(t,n),s.setScalar(0),s.addScaledVector(gi,r.x),s.addScaledVector(_i,r.y),s.addScaledVector(yi,r.z),s}static isFrontFacing(t,e,i,n){return ai.subVectors(i,e),oi.subVectors(t,e),ai.cross(oi).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ai.subVectors(this.c,this.b),oi.subVectors(this.a,this.b),.5*ai.cross(oi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return xi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return xi.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,n,r){return xi.getInterpolation(t,this.a,this.b,this.c,e,i,n,r)}containsPoint(t){return xi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return xi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,r=this.c;let s,a;ci.subVectors(n,i),ui.subVectors(r,i),pi.subVectors(t,i);const o=ci.dot(pi),l=ui.dot(pi);if(o<=0&&l<=0)return e.copy(i);mi.subVectors(t,n);const h=ci.dot(mi),c=ui.dot(mi);if(h>=0&&c<=h)return e.copy(n);const u=o*c-h*l;if(u<=0&&o>=0&&h<=0)return s=o/(o-h),e.copy(i).addScaledVector(ci,s);fi.subVectors(t,r);const d=ci.dot(fi),p=ui.dot(fi);if(p>=0&&d<=p)return e.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(ui,a);const f=h*p-d*c;if(f<=0&&c-h>=0&&d-p>=0)return di.subVectors(r,n),a=(c-h)/(c-h+(d-p)),e.copy(n).addScaledVector(di,a);const g=1/(f+m+u);return s=m*g,a=u*g,e.copy(i).addScaledVector(ci,s).addScaledVector(ui,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const vi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},bi={h:0,s:0,l:0},Si={h:0,s:0,l:0};function Ti(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}class Mi{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(void 0===e&&void 0===i){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ct){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Bt.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n=Bt.workingColorSpace){return this.r=t,this.g=e,this.b=i,Bt.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n=Bt.workingColorSpace){if(t=wt(t,1),e=Et(e,0,1),i=Et(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=Ti(r,n,t+1/3),this.g=Ti(r,n,t),this.b=Ti(r,n,t-1/3)}return Bt.toWorkingColorSpace(this,n),this}setStyle(t,e=ct){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const s=n[1],a=n[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const i=n[1],r=i.length;if(3===r)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,e);if(6===r)return this.setHex(parseInt(i,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ct){const i=vi[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ft(t.r),this.g=Ft(t.g),this.b=Ft(t.b),this}copyLinearToSRGB(t){return this.r=Ot(t.r),this.g=Ot(t.g),this.b=Ot(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ct){return Bt.fromWorkingColorSpace(Ei.copy(this),t),65536*Math.round(Et(255*Ei.r,0,255))+256*Math.round(Et(255*Ei.g,0,255))+Math.round(Et(255*Ei.b,0,255))}getHexString(t=ct){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Bt.workingColorSpace){Bt.fromWorkingColorSpace(Ei.copy(this),e);const i=Ei.r,n=Ei.g,r=Ei.b,s=Math.max(i,n,r),a=Math.min(i,n,r);let o,l;const h=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=h<=.5?t/(s+a):t/(2-s-a),s){case i:o=(n-r)/t+(n<r?6:0);break;case n:o=(r-i)/t+2;break;case r:o=(i-n)/t+4}o/=6}return t.h=o,t.s=l,t.l=h,t}getRGB(t,e=Bt.workingColorSpace){return Bt.fromWorkingColorSpace(Ei.copy(this),e),t.r=Ei.r,t.g=Ei.g,t.b=Ei.b,t}getStyle(t=ct){Bt.fromWorkingColorSpace(Ei.copy(this),t);const e=Ei.r,i=Ei.g,n=Ei.b;return t!==ct?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*i)},${Math.round(255*n)})`}offsetHSL(t,e,i){return this.getHSL(bi),this.setHSL(bi.h+t,bi.s+e,bi.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(bi),t.getHSL(Si);const i=At(bi.h,Si.h,e),n=At(bi.s,Si.s,e),r=At(bi.l,Si.l,e);return this.setHSL(i,n,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,n=this.b,r=t.elements;return this.r=r[0]*e+r[3]*i+r[6]*n,this.g=r[1]*e+r[4]*i+r[7]*n,this.b=r[2]*e+r[5]*i+r[8]*n,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ei=new Mi;Mi.NAMES=vi;let wi=0;class Ai extends xt{static get type(){return"Material"}get type(){return this.constructor.type}set type(t){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:wi++}),this.uuid=Mt(),this.name="",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=a,this.blendDst=o,this.blendEquation=s,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Mi(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=mt,this.stencilZFail=mt,this.stencilZPass=mt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),this.blendSrc!==a&&(i.blendSrc=this.blendSrc),this.blendDst!==o&&(i.blendDst=this.blendDst),this.blendEquation!==s&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==mt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==mt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==mt&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),e){const e=n(t.textures),r=n(t.images);e.length>0&&(i.textures=e),r.length>0&&(i.images=r)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Ri extends Ai{static get type(){return"MeshBasicMaterial"}constructor(t){super(),this.isMeshBasicMaterial=!0,this.color=new Mi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ge,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ci=Ni();function Ni(){const t=new ArrayBuffer(4),e=new Float32Array(t),i=new Uint32Array(t),n=new Uint32Array(512),r=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(n[t]=0,n[256|t]=32768,r[t]=24,r[256|t]=24):e<-14?(n[t]=1024>>-e-14,n[256|t]=1024>>-e-14|32768,r[t]=-e-1,r[256|t]=-e-1):e<=15?(n[t]=e+15<<10,n[256|t]=e+15<<10|32768,r[t]=13,r[256|t]=13):e<128?(n[t]=31744,n[256|t]=64512,r[t]=24,r[256|t]=24):(n[t]=31744,n[256|t]=64512,r[t]=13,r[256|t]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,i=0;for(;0==(8388608&e);)e<<=1,i-=8388608;e&=-8388609,i+=947912704,s[t]=e|i}for(let t=1024;t<2048;++t)s[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:i,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function Pi(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=Et(t,-65504,65504),Ci.floatView[0]=t;const e=Ci.uint32View[0],i=e>>23&511;return Ci.baseTable[i]+((8388607&e)>>Ci.shiftTable[i])}function Ii(t){const e=t>>10;return Ci.uint32View[0]=Ci.mantissaTable[Ci.offsetTable[e]+(1023&t)]+Ci.exponentTable[e],Ci.floatView[0]}const Ui=new ie,Li=new Pt;class Di{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=i,this.usage=ft,this.updateRanges=[],this.gpuType=R,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Li.fromBufferAttribute(this,e),Li.applyMatrix3(t),this.setXY(e,Li.x,Li.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)Ui.fromBufferAttribute(this,e),Ui.applyMatrix3(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Ui.fromBufferAttribute(this,e),Ui.applyMatrix4(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Ui.fromBufferAttribute(this,e),Ui.applyNormalMatrix(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Ui.fromBufferAttribute(this,e),Ui.transformDirection(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Rt(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=Ct(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Rt(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Rt(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Rt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Rt(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array),n=Ct(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t*=this.itemSize,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array),n=Ct(n,this.array),r=Ct(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==ft&&(t.usage=this.usage),t}}class Bi extends Di{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Fi extends Di{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Oi extends Di{constructor(t,e,i){super(new Uint16Array(t),e,i),this.isFloat16BufferAttribute=!0}getX(t){let e=Ii(this.array[t*this.itemSize]);return this.normalized&&(e=Rt(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize]=Pi(e),this}getY(t){let e=Ii(this.array[t*this.itemSize+1]);return this.normalized&&(e=Rt(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize+1]=Pi(e),this}getZ(t){let e=Ii(this.array[t*this.itemSize+2]);return this.normalized&&(e=Rt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize+2]=Pi(e),this}getW(t){let e=Ii(this.array[t*this.itemSize+3]);return this.normalized&&(e=Rt(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ct(e,this.array)),this.array[t*this.itemSize+3]=Pi(e),this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array)),this.array[t+0]=Pi(e),this.array[t+1]=Pi(i),this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array),n=Ct(n,this.array)),this.array[t+0]=Pi(e),this.array[t+1]=Pi(i),this.array[t+2]=Pi(n),this}setXYZW(t,e,i,n,r){return t*=this.itemSize,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array),n=Ct(n,this.array),r=Ct(r,this.array)),this.array[t+0]=Pi(e),this.array[t+1]=Pi(i),this.array[t+2]=Pi(n),this.array[t+3]=Pi(r),this}}class zi extends Di{constructor(t,e,i){super(new Float32Array(t),e,i)}}let ki=0;const Vi=new Ie,Gi=new si,Hi=new ie,Wi=new se,ji=new se,Xi=new ie;class $i extends xt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ki++}),this.uuid=Mt(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(function(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}(t)?Fi:Bi)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new It).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Vi.makeRotationFromQuaternion(t),this.applyMatrix4(Vi),this}rotateX(t){return Vi.makeRotationX(t),this.applyMatrix4(Vi),this}rotateY(t){return Vi.makeRotationY(t),this.applyMatrix4(Vi),this}rotateZ(t){return Vi.makeRotationZ(t),this.applyMatrix4(Vi),this}translate(t,e,i){return Vi.makeTranslation(t,e,i),this.applyMatrix4(Vi),this}scale(t,e,i){return Vi.makeScale(t,e,i),this.applyMatrix4(Vi),this}lookAt(t){return Gi.lookAt(t),Gi.updateMatrix(),this.applyMatrix4(Gi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hi).negate(),this.translate(Hi.x,Hi.y,Hi.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}this.setAttribute("position",new zi(e,3))}else{for(let i=0,n=e.count;i<n;i++){const n=t[i];e.setXYZ(i,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new se);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new ie(-1/0,-1/0,-1/0),new ie(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Wi.setFromBufferAttribute(i),this.morphTargetsRelative?(Xi.addVectors(this.boundingBox.min,Wi.min),this.boundingBox.expandByPoint(Xi),Xi.addVectors(this.boundingBox.max,Wi.max),this.boundingBox.expandByPoint(Xi)):(this.boundingBox.expandByPoint(Wi.min),this.boundingBox.expandByPoint(Wi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Te);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new ie,1/0);if(t){const i=this.boundingSphere.center;if(Wi.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];ji.setFromBufferAttribute(i),this.morphTargetsRelative?(Xi.addVectors(Wi.min,ji.min),Wi.expandByPoint(Xi),Xi.addVectors(Wi.max,ji.max),Wi.expandByPoint(Xi)):(Wi.expandByPoint(ji.min),Wi.expandByPoint(ji.max))}Wi.getCenter(i);let n=0;for(let e=0,r=t.count;e<r;e++)Xi.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(Xi));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],a=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)Xi.fromBufferAttribute(s,e),a&&(Hi.fromBufferAttribute(t,e),Xi.add(Hi)),n=Math.max(n,i.distanceToSquared(Xi))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=e.position,n=e.normal,r=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Di(new Float32Array(4*i.count),4));const s=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<i.count;t++)a[t]=new ie,o[t]=new ie;const l=new ie,h=new ie,c=new ie,u=new Pt,d=new Pt,p=new Pt,m=new ie,f=new ie;function g(t,e,n){l.fromBufferAttribute(i,t),h.fromBufferAttribute(i,e),c.fromBufferAttribute(i,n),u.fromBufferAttribute(r,t),d.fromBufferAttribute(r,e),p.fromBufferAttribute(r,n),h.sub(l),c.sub(l),d.sub(u),p.sub(u);const s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(m.copy(h).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(s),f.copy(c).multiplyScalar(d.x).addScaledVector(h,-p.x).multiplyScalar(s),a[t].add(m),a[e].add(m),a[n].add(m),o[t].add(f),o[e].add(f),o[n].add(f))}let _=this.groups;0===_.length&&(_=[{start:0,count:t.count}]);for(let e=0,i=_.length;e<i;++e){const i=_[e],n=i.start;for(let e=n,r=n+i.count;e<r;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const y=new ie,x=new ie,v=new ie,b=new ie;function S(t){v.fromBufferAttribute(n,t),b.copy(v);const e=a[t];y.copy(e),y.sub(v.multiplyScalar(v.dot(e))).normalize(),x.crossVectors(b,e);const i=x.dot(o[t])<0?-1:1;s.setXYZW(t,y.x,y.y,y.z,i)}for(let e=0,i=_.length;e<i;++e){const i=_[e],n=i.start;for(let e=n,r=n+i.count;e<r;e+=3)S(t.getX(e+0)),S(t.getX(e+1)),S(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new Di(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new ie,r=new ie,s=new ie,a=new ie,o=new ie,l=new ie,h=new ie,c=new ie;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),m=t.getX(u+2);n.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,m),h.subVectors(s,r),c.subVectors(n,r),h.cross(c),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),a.add(h),o.add(h),l.add(h),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)n.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),h.subVectors(s,r),c.subVectors(n,r),h.cross(c),i.setXYZ(t+0,h.x,h.y,h.z),i.setXYZ(t+1,h.x,h.y,h.z),i.setXYZ(t+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Xi.fromBufferAttribute(t,e),Xi.normalize(),t.setXYZ(e,Xi.x,Xi.y,Xi.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,r=t.normalized,s=new i.constructor(e.length*n);let a=0,o=0;for(let r=0,l=e.length;r<l;r++){a=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*n;for(let t=0;t<n;t++)s[o++]=i[a++]}return new Di(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new $i,i=this.index.array,n=this.attributes;for(const r in n){const s=t(n[r],i);e.setAttribute(r,s)}const r=this.morphAttributes;for(const n in r){const s=[],a=r[n];for(let e=0,n=a.length;e<n;e++){const n=t(a[e],i);s.push(n)}e.morphAttributes[n]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,i=s.length;t<i;t++){const i=s[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let r=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],s=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];s.push(n.toJSON(t.data))}s.length>0&&(n[e]=s,r=!0)}r&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const r=t.morphAttributes;for(const t in r){const i=[],n=r[t];for(let t=0,r=n.length;t<r;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const qi=new Ie,Yi=new Pe,Ki=new Te,Zi=new ie,Ji=new ie,Qi=new ie,tn=new ie,en=new ie,nn=new ie,rn=new ie,sn=new ie;class an extends si{constructor(t=new $i,e=new Ri){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,s=i.morphTargetsRelative;e.fromBufferAttribute(n,t);const a=this.morphTargetInfluences;if(r&&a){nn.set(0,0,0);for(let i=0,n=r.length;i<n;i++){const n=a[i],o=r[i];0!==n&&(en.fromBufferAttribute(o,t),s?nn.addScaledVector(en,n):nn.addScaledVector(en.sub(e),n))}e.add(nn)}return e}raycast(t,e){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0!==n){if(null===i.boundingSphere&&i.computeBoundingSphere(),Ki.copy(i.boundingSphere),Ki.applyMatrix4(r),Yi.copy(t.ray).recast(t.near),!1===Ki.containsPoint(Yi.origin)){if(null===Yi.intersectSphere(Ki,Zi))return;if(Yi.origin.distanceToSquared(Zi)>(t.far-t.near)**2)return}qi.copy(r).invert(),Yi.copy(t.ray).applyMatrix4(qi),null!==i.boundingBox&&!1===Yi.intersectsBox(i.boundingBox)||this._computeIntersections(t,e,Yi)}}_computeIntersections(t,e,i){let n;const r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,c=r.attributes.normal,u=r.groups,d=r.drawRange;if(null!==a)if(Array.isArray(s))for(let r=0,o=u.length;r<o;r++){const o=u[r],p=s[o.materialIndex];for(let r=Math.max(o.start,d.start),s=Math.min(a.count,Math.min(o.start+o.count,d.start+d.count));r<s;r+=3)n=on(this,p,t,i,l,h,c,a.getX(r),a.getX(r+1),a.getX(r+2)),n&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=o.materialIndex,e.push(n))}else for(let r=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);r<o;r+=3)n=on(this,s,t,i,l,h,c,a.getX(r),a.getX(r+1),a.getX(r+2)),n&&(n.faceIndex=Math.floor(r/3),e.push(n));else if(void 0!==o)if(Array.isArray(s))for(let r=0,a=u.length;r<a;r++){const a=u[r],p=s[a.materialIndex];for(let r=Math.max(a.start,d.start),s=Math.min(o.count,Math.min(a.start+a.count,d.start+d.count));r<s;r+=3)n=on(this,p,t,i,l,h,c,r,r+1,r+2),n&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=a.materialIndex,e.push(n))}else for(let r=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);r<a;r+=3)n=on(this,s,t,i,l,h,c,r,r+1,r+2),n&&(n.faceIndex=Math.floor(r/3),e.push(n))}}function on(t,e,i,n,r,s,a,o,l,h){t.getVertexPosition(o,Ji),t.getVertexPosition(l,Qi),t.getVertexPosition(h,tn);const c=function(t,e,i,n,r,s,a,o){let l;if(l=1===e.side?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,0===e.side,o),null===l)return null;sn.copy(o),sn.applyMatrix4(t.matrixWorld);const h=i.ray.origin.distanceTo(sn);return h<i.near||h>i.far?null:{distance:h,point:sn.clone(),object:t}}(t,e,i,n,Ji,Qi,tn,rn);if(c){const t=new ie;xi.getBarycoord(rn,Ji,Qi,tn,t),r&&(c.uv=xi.getInterpolatedAttribute(r,o,l,h,t,new Pt)),s&&(c.uv1=xi.getInterpolatedAttribute(s,o,l,h,t,new Pt)),a&&(c.normal=xi.getInterpolatedAttribute(a,o,l,h,t,new ie),c.normal.dot(n.direction)>0&&c.normal.multiplyScalar(-1));const e={a:o,b:l,c:h,normal:new ie,materialIndex:0};xi.getNormal(Ji,Qi,tn,e.normal),c.face=e,c.barycoord=t}return c}class ln extends $i{constructor(t=1,e=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const a=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],h=[],c=[];let u=0,d=0;function p(t,e,i,n,r,s,p,m,f,g,_){const y=s/f,x=p/g,v=s/2,b=p/2,S=m/2,T=f+1,M=g+1;let E=0,w=0;const A=new ie;for(let s=0;s<M;s++){const a=s*x-b;for(let o=0;o<T;o++){const u=o*y-v;A[t]=u*n,A[e]=a*r,A[i]=S,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[i]=m>0?1:-1,h.push(A.x,A.y,A.z),c.push(o/f),c.push(1-s/g),E+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const i=u+e+T*t,n=u+e+T*(t+1),r=u+(e+1)+T*(t+1),s=u+(e+1)+T*t;o.push(i,n,s),o.push(n,r,s),w+=6}a.addGroup(d,w,_),d+=w,u+=E}p("z","y","x",-1,-1,i,e,t,s,r,0),p("z","y","x",1,-1,i,e,-t,s,r,1),p("x","z","y",1,1,t,i,e,n,s,2),p("x","z","y",1,-1,t,i,-e,n,s,3),p("x","y","z",1,-1,t,e,i,n,r,4),p("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new zi(l,3)),this.setAttribute("normal",new zi(h,3)),this.setAttribute("uv",new zi(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ln(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function hn(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[i][n]=null):e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}class cn extends Ai{static get type(){return"ShaderMaterial"}constructor(t){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",this.fragmentShader="\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=hn(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let i=0;i<t.length;i++)e.push(t[i].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class un extends si{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ie,this.projectionMatrix=new Ie,this.projectionMatrixInverse=new Ie,this.coordinateSystem=_t}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const dn=new ie,pn=new Pt,mn=new Pt;class fn extends un{constructor(t=50,e=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Tt*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*St*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Tt*Math.atan(Math.tan(.5*St*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,i){dn.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(dn.x,dn.y).multiplyScalar(-t/dn.z),dn.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(dn.x,dn.y).multiplyScalar(-t/dn.z)}getViewSize(t,e){return this.getViewBounds(t,pn,mn),e.subVectors(mn,pn)}setViewOffset(t,e,i,n,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*St*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*n/t,e-=s.offsetY*i/a,n*=s.width/t,i*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const gn=-90;class _n extends si{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new fn(gn,1,t,e);n.layers=this.layers,this.add(n);const r=new fn(gn,1,t,e);r.layers=this.layers,this.add(r);const s=new fn(gn,1,t,e);s.layers=this.layers,this.add(s);const a=new fn(gn,1,t,e);a.layers=this.layers,this.add(a);const o=new fn(gn,1,t,e);o.layers=this.layers,this.add(o);const l=new fn(gn,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[i,n,r,s,a,o]=e;for(const t of e)this.remove(t);if(t===_t)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==yt)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,s,a,o,l,h]=this.children,c=t.getRenderTarget(),u=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0,n),t.render(e,r),t.setRenderTarget(i,1,n),t.render(e,s),t.setRenderTarget(i,2,n),t.render(e,a),t.setRenderTarget(i,3,n),t.render(e,o),t.setRenderTarget(i,4,n),t.render(e,l),i.texture.generateMipmaps=m,t.setRenderTarget(i,5,n),t.render(e,h),t.setRenderTarget(c,u,d),t.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class yn extends Kt{constructor(t,e,i,n,r,s,a,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:h,i,n,r,s,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class xn extends Qt{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},n=[i,i,i,i,i,i];this.texture=new yn(n,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:x}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={tEquirect:{value:null}},n="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new ln(5,5,5),o=new cn({name:"CubemapFromEquirect",uniforms:hn(i),vertexShader:n,fragmentShader:s,side:1,blending:r});o.uniforms.tEquirect.value=e;const l=new an(a,o),h=e.minFilter;return e.minFilter===b&&(e.minFilter=x),new _n(1,10,this).update(t,l),e.minFilter=h,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,i,n){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,i,n);t.setRenderTarget(r)}}class vn{constructor(t,e=1,i=1e3){this.isFog=!0,this.name="",this.color=new Mi(t),this.near=e,this.far=i}clone(){return new vn(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class bn extends si{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ge,this.environmentIntensity=1,this.environmentRotation=new Ge,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Sn{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=ft,this.updateRanges=[],this.version=0,this.uuid=Mt()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Mt()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Mt()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Tn=new ie;class Mn{constructor(t,e,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)Tn.fromBufferAttribute(this,e),Tn.applyMatrix4(t),this.setXYZ(e,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Tn.fromBufferAttribute(this,e),Tn.applyNormalMatrix(t),this.setXYZ(e,Tn.x,Tn.y,Tn.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Tn.fromBufferAttribute(this,e),Tn.transformDirection(t),this.setXYZ(e,Tn.x,Tn.y,Tn.z);return this}getComponent(t,e){let i=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(i=Rt(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=Ct(i,this.array)),this.data.array[t*this.data.stride+this.offset+e]=i,this}setX(t,e){return this.normalized&&(e=Ct(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Ct(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Ct(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Ct(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Rt(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Rt(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Rt(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Rt(e,this.array)),e}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array),n=Ct(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ct(e,this.array),i=Ct(i,this.array),n=Ct(n,this.array),r=Ct(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new Di(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Mn(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class En extends Ai{static get type(){return"SpriteMaterial"}constructor(t){super(),this.isSpriteMaterial=!0,this.color=new Mi(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}class wn extends Kt{constructor(t=null,e=1,i=1,n,r,s,a,o,l=1003,h=1003,c,u){super(null,s,a,o,l,h,n,r,c,u),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class An extends Di{constructor(t,e,i,n=1){super(t,e,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Rn=new ie,Cn=new ie,Nn=new It;class Pn{constructor(t=new ie(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=Rn.subVectors(i,e).cross(Cn.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const i=t.delta(Rn),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:e.copy(t.start).addScaledVector(i,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||Nn.getNormalMatrix(t),n=this.coplanarPoint(Rn).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const In=new Te,Un=new ie;class Ln{constructor(t=new Pn,e=new Pn,i=new Pn,n=new Pn,r=new Pn,s=new Pn){this.planes=[t,e,i,n,r,s]}set(t,e,i,n,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,e=2e3){const i=this.planes,n=t.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],h=n[5],c=n[6],u=n[7],d=n[8],p=n[9],m=n[10],f=n[11],g=n[12],_=n[13],y=n[14],x=n[15];if(i[0].setComponents(o-r,u-l,f-d,x-g).normalize(),i[1].setComponents(o+r,u+l,f+d,x+g).normalize(),i[2].setComponents(o+s,u+h,f+p,x+_).normalize(),i[3].setComponents(o-s,u-h,f-p,x-_).normalize(),i[4].setComponents(o-a,u-c,f-m,x-y).normalize(),e===_t)i[5].setComponents(o+a,u+c,f+m,x+y).normalize();else{if(e!==yt)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);i[5].setComponents(a,c,m,y).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),In.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),In.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(In)}intersectsSprite(t){return In.center.set(0,0,0),In.radius=.7071067811865476,In.applyMatrix4(t.matrixWorld),this.intersectsSphere(In)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(i)<n)return!1;return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(Un.x=n.normal.x>0?t.max.x:t.min.x,Un.y=n.normal.y>0?t.max.y:t.min.y,Un.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(Un)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}class Dn extends Ai{static get type(){return"LineBasicMaterial"}constructor(t){super(),this.isLineBasicMaterial=!0,this.color=new Mi(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Bn=new ie,Fn=new ie,On=new Ie,zn=new Pe,kn=new Te,Vn=new ie,Gn=new ie;class Hn extends si{constructor(t=new $i,e=new Dn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,n=e.count;t<n;t++)Bn.fromBufferAttribute(e,t-1),Fn.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=Bn.distanceTo(Fn);t.setAttribute("lineDistance",new zi(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,r=t.params.Line.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),kn.copy(i.boundingSphere),kn.applyMatrix4(n),kn.radius+=r,!1===t.ray.intersectsSphere(kn))return;On.copy(n).invert(),zn.copy(t.ray).applyMatrix4(On);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,h=i.index,c=i.attributes.position;if(null!==h){const i=Math.max(0,s.start),n=Math.min(h.count,s.start+s.count);for(let r=i,s=n-1;r<s;r+=l){const i=h.getX(r),n=h.getX(r+1),s=Wn(this,t,zn,o,i,n);s&&e.push(s)}if(this.isLineLoop){const r=h.getX(n-1),s=h.getX(i),a=Wn(this,t,zn,o,r,s);a&&e.push(a)}}else{const i=Math.max(0,s.start),n=Math.min(c.count,s.start+s.count);for(let r=i,s=n-1;r<s;r+=l){const i=Wn(this,t,zn,o,r,r+1);i&&e.push(i)}if(this.isLineLoop){const r=Wn(this,t,zn,o,n-1,i);r&&e.push(r)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Wn(t,e,i,n,r,s){const a=t.geometry.attributes.position;if(Bn.fromBufferAttribute(a,r),Fn.fromBufferAttribute(a,s),i.distanceSqToSegment(Bn,Fn,Vn,Gn)>n)return;Vn.applyMatrix4(t.matrixWorld);const o=e.ray.origin.distanceTo(Vn);return o<e.near||o>e.far?void 0:{distance:o,point:Gn.clone().applyMatrix4(t.matrixWorld),index:r,face:null,faceIndex:null,barycoord:null,object:t}}const jn=new ie,Xn=new ie;class $n extends Hn{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,n=e.count;t<n;t+=2)jn.fromBufferAttribute(e,t),Xn.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+jn.distanceTo(Xn);t.setAttribute("lineDistance",new zi(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class qn extends Ai{static get type(){return"PointsMaterial"}constructor(t){super(),this.isPointsMaterial=!0,this.color=new Mi(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}class Yn extends Kt{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=g,this.minFilter=g,this.generateMipmaps=!1,this.needsUpdate=!0}}class Kn extends Kt{constructor(t,e,i,n,r,s,a,o,l,h=1026){if(h!==U&&h!==L)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===U&&(i=A),void 0===i&&h===L&&(i=N),super(null,n,r,s,a,o,h,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:g,this.minFilter=void 0!==o?o:g,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}class Zn extends $i{constructor(t=1,e=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const o=Math.min(s+a,Math.PI);let l=0;const h=[],c=new ie,u=new ie,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],_=d/i;let y=0;0===d&&0===s?y=.5/e:d===i&&o===Math.PI&&(y=-.5/e);for(let i=0;i<=e;i++){const o=i/e;c.x=-t*Math.cos(n+o*r)*Math.sin(s+_*a),c.y=t*Math.cos(s+_*a),c.z=t*Math.sin(n+o*r)*Math.sin(s+_*a),p.push(c.x,c.y,c.z),u.copy(c).normalize(),m.push(u.x,u.y,u.z),f.push(o+y,1-_),g.push(l++)}h.push(g)}for(let t=0;t<i;t++)for(let n=0;n<e;n++){const e=h[t][n+1],r=h[t][n],a=h[t+1][n],l=h[t+1][n+1];(0!==t||s>0)&&d.push(e,r,l),(t!==i-1||o<Math.PI)&&d.push(r,a,l)}this.setIndex(d),this.setAttribute("position",new zi(p,3)),this.setAttribute("normal",new zi(m,3)),this.setAttribute("uv",new zi(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Zn(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Jn extends $i{constructor(t=1,e=.4,i=12,n=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const s=[],a=[],o=[],l=[],h=new ie,c=new ie,u=new ie;for(let s=0;s<=i;s++)for(let d=0;d<=n;d++){const p=d/n*r,m=s/i*Math.PI*2;c.x=(t+e*Math.cos(m))*Math.cos(p),c.y=(t+e*Math.cos(m))*Math.sin(p),c.z=e*Math.sin(m),a.push(c.x,c.y,c.z),h.x=t*Math.cos(p),h.y=t*Math.sin(p),u.subVectors(c,h).normalize(),o.push(u.x,u.y,u.z),l.push(d/n),l.push(s/i)}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*t+e-1,r=(n+1)*(t-1)+e-1,a=(n+1)*(t-1)+e,o=(n+1)*t+e;s.push(i,r,o),s.push(r,a,o)}this.setIndex(s),this.setAttribute("position",new zi(a,3)),this.setAttribute("normal",new zi(o,3)),this.setAttribute("uv",new zi(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Jn(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Qn extends Ai{static get type(){return"ShadowMaterial"}constructor(t){super(),this.isShadowMaterial=!0,this.color=new Mi(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class tr extends Ai{static get type(){return"MeshStandardMaterial"}constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new Mi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Mi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ge,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class er extends tr{static get type(){return"MeshPhysicalMaterial"}constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Pt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Et(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Mi(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Mi(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Mi(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class ir extends Ai{static get type(){return"MeshPhongMaterial"}constructor(t){super(),this.isMeshPhongMaterial=!0,this.color=new Mi(16777215),this.specular=new Mi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Mi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ge,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class nr extends Ai{static get type(){return"MeshToonMaterial"}constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new Mi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Mi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class rr extends Ai{static get type(){return"MeshNormalMaterial"}constructor(t){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class sr extends Ai{static get type(){return"MeshLambertMaterial"}constructor(t){super(),this.isMeshLambertMaterial=!0,this.color=new Mi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Mi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ge,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class ar extends Ai{static get type(){return"MeshMatcapMaterial"}constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new Mi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class or extends Dn{static get type(){return"LineDashedMaterial"}constructor(t){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function lr(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}class hr{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{let s;i:{n:if(!(t<n)){for(let s=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(r=n,n=e[++i],t<n)break e}s=e.length;break i}if(t>=r)break t;{const a=e[1];t<a&&(i=2,r=a);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===s)break;if(n=r,r=e[--i-1],t>=r)break e}s=i,i=0}}for(;i<s;){const n=i+s>>>1;t<e[n]?s=n:i=n+1}if(n=e[i],r=e[i-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n;for(let t=0;t!==n;++t)e[t]=i[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class cr extends hr{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,i){const n=this.parameterPositions;let r=t-2,s=t+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:r=t,a=2*e-i;break;case 2402:r=n.length-2,a=e+n[r]-n[r+1];break;default:r=t,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=t,o=2*i-e;break;case 2402:s=1,o=i+n[1]-n[0];break;default:s=t-1,o=e}const l=.5*(i-e),h=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-i),this._offsetPrev=r*h,this._offsetNext=s*h}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,_=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let t=0;t!==a;++t)r[t]=g*s[h+t]+_*s[l+t]+y*s[o+t]+x*s[c+t];return r}}class ur extends hr{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,h=(i-e)/(n-e),c=1-h;for(let t=0;t!==a;++t)r[t]=s[l+t]*c+s[o+t]*h;return r}}class dr extends hr{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class pr{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=lr(e,this.TimeBufferType),this.values=lr(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:lr(t.times,Array),values:lr(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new dr(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ur(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new cr(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case ot:e=this.InterpolantFactoryMethodDiscrete;break;case lt:e=this.InterpolantFactoryMethodLinear;break;case ht:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ot;case this.InterpolantFactoryMethodLinear:return lt;case this.InterpolantFactoryMethodSmooth:return ht}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<t;)++r;for(;-1!==s&&i[s]>e;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=i.slice(r,s),this.values=this.values.slice(r*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==r;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,s),t=!1;break}s=n}if(void 0!==n&&(a=n,ArrayBuffer.isView(a)&&!(a instanceof DataView)))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}var a;return t}optimize(){const t=this.times.slice(),e=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===ht,r=t.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(n)r=!0;else{const t=a*i,n=t-i,s=t+i;for(let a=0;a!==i;++a){const i=e[t+a];if(i!==e[n+a]||i!==e[s+a]){r=!0;break}}}if(r){if(a!==s){t[s]=t[a];const n=a*i,r=s*i;for(let t=0;t!==i;++t)e[r+t]=e[n+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*i,n=s*i,a=0;a!==i;++a)e[n+a]=e[t+a];++s}return s!==t.length?(this.times=t.slice(0,s),this.values=e.slice(0,s*i)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}pr.prototype.TimeBufferType=Float32Array,pr.prototype.ValueBufferType=Float32Array,pr.prototype.DefaultInterpolation=lt;class mr extends pr{constructor(t,e,i){super(t,e,i)}}mr.prototype.ValueTypeName="bool",mr.prototype.ValueBufferType=Array,mr.prototype.DefaultInterpolation=ot,mr.prototype.InterpolantFactoryMethodLinear=void 0,mr.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends pr{}).prototype.ValueTypeName="color";(class extends pr{}).prototype.ValueTypeName="number";class fr extends hr{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-e)/(n-e);let l=t*a;for(let t=l+a;l!==t;l+=4)ee.slerpFlat(r,0,s,l-a,s,l,o);return r}}class gr extends pr{InterpolantFactoryMethodLinear(t){return new fr(this.times,this.values,this.getValueSize(),t)}}gr.prototype.ValueTypeName="quaternion",gr.prototype.InterpolantFactoryMethodSmooth=void 0;class _r extends pr{constructor(t,e,i){super(t,e,i)}}_r.prototype.ValueTypeName="string",_r.prototype.ValueBufferType=Array,_r.prototype.DefaultInterpolation=ot,_r.prototype.InterpolantFactoryMethodLinear=void 0,_r.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends pr{}).prototype.ValueTypeName="vector";Error;class yr extends si{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Mi(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}class xr extends yr{constructor(t,e,i){super(t,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(si.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Mi(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const vr=new Ie,br=new ie,Sr=new ie;class Tr{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Pt(512,512),this.map=null,this.mapPass=null,this.matrix=new Ie,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ln,this._frameExtents=new Pt(1,1),this._viewportCount=1,this._viewports=[new Zt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;br.setFromMatrixPosition(t.matrixWorld),e.position.copy(br),Sr.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Sr),e.updateMatrixWorld(),vr.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vr),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(vr)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Mr extends Tr{constructor(){super(new fn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,i=2*Tt*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Er extends yr{constructor(t,e,i=0,n=Math.PI/3,r=0,s=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(si.DEFAULT_UP),this.updateMatrix(),this.target=new si,this.distance=i,this.angle=n,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new Mr}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const wr=new Ie,Ar=new ie,Rr=new ie;class Cr extends Tr{constructor(){super(new fn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Pt(4,2),this._viewportCount=6,this._viewports=[new Zt(2,1,1,1),new Zt(0,1,1,1),new Zt(3,1,1,1),new Zt(1,1,1,1),new Zt(3,0,1,1),new Zt(1,0,1,1)],this._cubeDirections=[new ie(1,0,0),new ie(-1,0,0),new ie(0,0,1),new ie(0,0,-1),new ie(0,1,0),new ie(0,-1,0)],this._cubeUps=[new ie(0,1,0),new ie(0,1,0),new ie(0,1,0),new ie(0,1,0),new ie(0,0,1),new ie(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,r=t.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),Ar.setFromMatrixPosition(t.matrixWorld),i.position.copy(Ar),Rr.copy(i.position),Rr.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(Rr),i.updateMatrixWorld(),n.makeTranslation(-Ar.x,-Ar.y,-Ar.z),wr.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wr)}}class Nr extends yr{constructor(t,e,i=0,n=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Cr}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Pr extends un{constructor(t=-1,e=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-t,s=i+t,a=n+e,o=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}class Ir extends Tr{constructor(){super(new Pr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Ur extends yr{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(si.DEFAULT_UP),this.updateMatrix(),this.target=new si,this.shadow=new Ir}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Lr extends yr{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Dr extends yr{constructor(t,e,i=10,n=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Br{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ie)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,n=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*n),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*i),e.addScaledVector(s[4],i*n*1.092548),e.addScaledVector(s[5],n*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],i*r*1.092548),e.addScaledVector(s[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){const i=t.x,n=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*n),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*i),e.addScaledVector(s[4],.858086*i*n),e.addScaledVector(s[5],.858086*n*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*i*r),e.addScaledVector(s[8],.429043*(i*i-n*n)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this}toArray(t=[],e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}static getBasisAt(t,e){const i=t.x,n=t.y,r=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*r,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*i*r,e[8]=.546274*(i*i-n*n)}}class Fr extends yr{constructor(t=new Br,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}const Or="\\[\\]\\.:\\/",zr=new RegExp("["+Or+"]","g"),kr="[^"+Or+"]",Vr="[^"+Or.replace("\\.","")+"]",Gr=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",kr)+/(WCOD+)?/.source.replace("WCOD",Vr)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kr)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kr)+"$"),Hr=["material","materials","bones","map"];class Wr{constructor(t,e,i){this.path=e,this.parsedPath=i||Wr.parseTrackName(e),this.node=Wr.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new Wr.Composite(t,e,i):new Wr(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(zr,"")}static parseTrackName(t){const e=Gr.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==Hr.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const r=t[n];if(r.name===e||r.uuid===e)return r;const s=i(r.children);if(s)return s}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let r=e.propertyIndex;if(t||(t=Wr.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const s=t[n];if(void 0===s){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Wr.Composite=class{constructor(t,e,i){const n=i||Wr.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},Wr.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Wr.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Wr.prototype.GetterByBindingType=[Wr.prototype._getValue_direct,Wr.prototype._getValue_array,Wr.prototype._getValue_arrayElement,Wr.prototype._getValue_toArray],Wr.prototype.SetterByBindingTypeAndVersioning=[[Wr.prototype._setValue_direct,Wr.prototype._setValue_direct_setNeedsUpdate,Wr.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Wr.prototype._setValue_array,Wr.prototype._setValue_array_setNeedsUpdate,Wr.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Wr.prototype._setValue_arrayElement,Wr.prototype._setValue_arrayElement_setNeedsUpdate,Wr.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Wr.prototype._setValue_fromArray,Wr.prototype._setValue_fromArray_setNeedsUpdate,Wr.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class jr extends Sn{constructor(t,e,i=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class Xr extends an{constructor(t,e,i){super(new Zn(e,4,2),new Ri({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class $r extends $n{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new $i;i.setAttribute("position",new zi(e,3)),i.setAttribute("color",new zi([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(i,new Dn({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,i){const n=new Mi,r=this.geometry.attributes.color.array;return n.set(t),n.toArray(r,0),n.toArray(r,3),n.set(e),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const qr=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class Yr{constructor(t){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(t),this.hasAnimation=!0===t.object.isSkinnedMesh,this.refreshUniforms=qr,this.renderId=0}firstInitialization(t){return!1===this.renderObjects.has(t)&&(this.getRenderObjectData(t),!0)}getRenderObjectData(t){let e=this.renderObjects.get(t);if(void 0===e){const{geometry:i,material:n}=t;if(e={material:this.getMaterialData(n),geometry:{attributes:this.getAttributesData(i.attributes),indexVersion:i.index?i.index.version:null,drawRange:{start:i.drawRange.start,count:i.drawRange.count}},worldMatrix:t.object.matrixWorld.clone()},t.object.center&&(e.center=t.object.center.clone()),t.object.morphTargetInfluences&&(e.morphTargetInfluences=t.object.morphTargetInfluences.slice()),null!==t.bundle&&(e.version=t.bundle.version),e.material.transmission>0){const{width:i,height:n}=t.context;e.bufferWidth=i,e.bufferHeight=n}this.renderObjects.set(t,e)}return e}getAttributesData(t){const e={};for(const i in t){const n=t[i];e[i]={version:n.version}}return e}containsNode(t){const e=t.material;for(const t in e)if(e[t]&&e[t].isNode)return!0;return null!==t.renderer.nodes.modelViewMatrix||null!==t.renderer.nodes.modelNormalViewMatrix}getMaterialData(t){const e={};for(const i of this.refreshUniforms){const n=t[i];null!=n&&("object"==typeof n&&void 0!==n.clone?!0===n.isTexture?e[i]={id:n.id,version:n.version}:e[i]=n.clone():e[i]=n)}return e}equals(t){const{object:e,material:i,geometry:n}=t,r=this.getRenderObjectData(t);if(!0!==r.worldMatrix.equals(e.matrixWorld))return r.worldMatrix.copy(e.matrixWorld),!1;const s=r.material;for(const t in s){const e=s[t],n=i[t];if(void 0!==e.equals){if(!1===e.equals(n))return e.copy(n),!1}else if(!0===n.isTexture){if(e.id!==n.id||e.version!==n.version)return e.id=n.id,e.version=n.version,!1}else if(e!==n)return s[t]=n,!1}if(s.transmission>0){const{width:e,height:i}=t.context;if(r.bufferWidth!==e||r.bufferHeight!==i)return r.bufferWidth=e,r.bufferHeight=i,!1}const a=r.geometry,o=n.attributes,l=a.attributes,h=Object.keys(l),c=Object.keys(o);if(h.length!==c.length)return r.geometry.attributes=this.getAttributesData(o),!1;for(const t of h){const e=l[t],i=o[t];if(void 0===i)return delete l[t],!1;if(e.version!==i.version)return e.version=i.version,!1}const u=n.index,d=a.indexVersion,p=u?u.version:null;if(d!==p)return a.indexVersion=p,!1;if(a.drawRange.start!==n.drawRange.start||a.drawRange.count!==n.drawRange.count)return a.drawRange.start=n.drawRange.start,a.drawRange.count=n.drawRange.count,!1;if(r.morphTargetInfluences){let t=!1;for(let i=0;i<r.morphTargetInfluences.length;i++)r.morphTargetInfluences[i]!==e.morphTargetInfluences[i]&&(t=!0);if(t)return!0}return r.center&&!1===r.center.equals(e.center)?(r.center.copy(e.center),!0):(null!==t.bundle&&(r.version=t.bundle.version),!0)}needsRefresh(t,e){if(this.hasNode||this.hasAnimation||this.firstInitialization(t))return!0;const{renderId:i}=e;if(this.renderId!==i)return this.renderId=i,!0;const n=!0===t.object.static,r=null!==t.bundle&&!0===t.bundle.static&&this.getRenderObjectData(t).version===t.bundle.version;return!n&&!r&&!0!==this.equals(t)}}function Kr(t,e=0){let i=3735928559^e,n=1103547991^e;if(t instanceof Array)for(let e,r=0;r<t.length;r++)e=t[r],i=Math.imul(i^e,2654435761),n=Math.imul(n^e,1597334677);else for(let e,r=0;r<t.length;r++)e=t.charCodeAt(r),i=Math.imul(i^e,2654435761),n=Math.imul(n^e,1597334677);return i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),4294967296*(2097151&n)+(i>>>0)}const Zr=t=>Kr(t),Jr=(...t)=>Kr(t);function Qr(t,e=!1){const i=[];!0===t.isNode&&(i.push(t.id),t=t.getSelf());for(const{property:n,childNode:r}of ts(t))i.push(i,Kr(n.slice(0,-4)),r.getCacheKey(e));return Kr(i)}function*ts(t,e=!1){for(const i in t){if(!0===i.startsWith("_"))continue;const n=t[i];if(!0===Array.isArray(n))for(let t=0;t<n.length;t++){const r=n[t];r&&(!0===r.isNode||e&&"function"==typeof r.toJSON)&&(yield{property:i,index:t,childNode:r})}else if(n&&!0===n.isNode)yield{property:i,childNode:n};else if("object"==typeof n)for(const t in n){const r=n[t];r&&(!0===r.isNode||e&&"function"==typeof r.toJSON)&&(yield{property:i,index:t,childNode:r})}}}function es(t){if(null==t)return null;const e=typeof t;return!0===t.isNode?"node":"number"===e?"float":"boolean"===e?"bool":"string"===e?"string":"function"===e?"shader":!0===t.isVector2?"vec2":!0===t.isVector3?"vec3":!0===t.isVector4?"vec4":!0===t.isMatrix3?"mat3":!0===t.isMatrix4?"mat4":!0===t.isColor?"color":t instanceof ArrayBuffer?"ArrayBuffer":null}function is(t,...e){const i=t?t.slice(-4):void 0;return 1===e.length&&("vec2"===i?e=[e[0],e[0]]:"vec3"===i?e=[e[0],e[0],e[0]]:"vec4"===i&&(e=[e[0],e[0],e[0],e[0]])),"color"===t?new Mi(...e):"vec2"===i?new Pt(...e):"vec3"===i?new ie(...e):"vec4"===i?new Zt(...e):"mat3"===i?new It(...e):"mat4"===i?new Ie(...e):"bool"===t?e[0]||!1:"float"===t||"int"===t||"uint"===t?e[0]||0:"string"===t?e[0]||"":"ArrayBuffer"===t?(n=e[0],Uint8Array.from(atob(n),(t=>t.charCodeAt(0))).buffer):null;var n}const ns="vertex",rs="none",ss="frame",as="render",os="object",ls=["setup","analyze","generate"],hs=["fragment","vertex","compute"],cs=["x","y","z","w"];let us=0;class ds extends xt{static get type(){return"Node"}constructor(t=null){super(),this.nodeType=t,this.updateType=rs,this.updateBeforeType=rs,this.updateAfterType=rs,this.uuid=Nt.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:us++})}set needsUpdate(t){!0===t&&this.version++}get type(){return this.constructor.type}onUpdate(t,e){return this.updateType=e,this.update=t.bind(this.getSelf()),this}onFrameUpdate(t){return this.onUpdate(t,ss)}onRenderUpdate(t){return this.onUpdate(t,as)}onObjectUpdate(t){return this.onUpdate(t,os)}onReference(t){return this.updateReference=t.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:t}of ts(this))yield t}dispose(){this.dispatchEvent({type:"dispose"})}traverse(t){t(this);for(const e of this.getChildren())e.traverse(t)}getCacheKey(t=!1){return!0!==(t=t||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=Qr(this,t),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(t){const e=this.getNodeType(t);return t.getElementType(e)}getNodeType(t){const e=t.getNodeProperties(this);return e.outputNode?e.outputNode.getNodeType(t):this.nodeType}getShared(t){const e=this.getHash(t);return t.getNodeFromHash(e)||this}setup(t){const e=t.getNodeProperties(this);let i=0;for(const t of this.getChildren())e["node"+i++]=t;return null}analyze(t){if(1===t.increaseUsage(this)){const e=t.getNodeProperties(this);for(const i of Object.values(e))i&&!0===i.isNode&&i.build(t)}}generate(t,e){const{outputNode:i}=t.getNodeProperties(this);if(i&&!0===i.isNode)return i.build(t,e)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(t,e=null){const i=this.getShared(t);if(this!==i)return i.build(t,e);t.addNode(this),t.addChain(this);let n=null;const r=t.getBuildStage();if("setup"===r){this.updateReference(t);const e=t.getNodeProperties(this);if(!0!==e.initialized){t.stack.nodes.length,e.initialized=!0,e.outputNode=this.setup(t),null!==e.outputNode&&t.stack.nodes.length;for(const i of Object.values(e))i&&!0===i.isNode&&i.build(t)}}else if("analyze"===r)this.analyze(t);else if("generate"===r)if(1===this.generate.length){const i=this.getNodeType(t),r=t.getDataFromNode(this);n=r.snippet,void 0===n?(n=this.generate(t)||"",r.snippet=n):void 0!==r.flowCodes&&void 0!==t.context.nodeBlock&&t.addFlowCodeHierarchy(this,t.context.nodeBlock),n=t.format(n,i,e)}else n=this.generate(t,e)||"";return t.removeChain(this),t.addSequentialNode(this),n}getSerializeChildren(){return ts(this)}serialize(t){const e=this.getSerializeChildren(),i={};for(const{property:n,index:r,childNode:s}of e)void 0!==r?(void 0===i[n]&&(i[n]=Number.isInteger(r)?[]:{}),i[n][r]=s.toJSON(t.meta).uuid):i[n]=s.toJSON(t.meta).uuid;Object.keys(i).length>0&&(t.inputNodes=i)}deserialize(t){if(void 0!==t.inputNodes){const e=t.meta.nodes;for(const i in t.inputNodes)if(Array.isArray(t.inputNodes[i])){const n=[];for(const r of t.inputNodes[i])n.push(e[r]);this[i]=n}else if("object"==typeof t.inputNodes[i]){const n={};for(const r in t.inputNodes[i]){const s=t.inputNodes[i][r];n[r]=e[s]}this[i]=n}else{const n=t.inputNodes[i];this[i]=e[n]}}}toJSON(t){const{uuid:e,type:i}=this,n=void 0===t||"string"==typeof t;n&&(t={textures:{},images:{},nodes:{}});let r=t.nodes[e];function s(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(void 0===r&&(r={uuid:e,type:i,meta:t,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==n&&(t.nodes[r.uuid]=r),this.serialize(r),delete r.meta),n){const e=s(t.textures),i=s(t.images),n=s(t.nodes);e.length>0&&(r.textures=e),i.length>0&&(r.images=i),n.length>0&&(r.nodes=n)}return r}}class ps extends ds{static get type(){return"ArrayElementNode"}constructor(t,e){super(),this.node=t,this.indexNode=e,this.isArrayElementNode=!0}getNodeType(t){return this.node.getElementType(t)}generate(t){return`${this.node.build(t)}[ ${this.indexNode.build(t,"uint")} ]`}}class ms extends ds{static get type(){return"ConvertNode"}constructor(t,e){super(),this.node=t,this.convertTo=e}getNodeType(t){const e=this.node.getNodeType(t);let i=null;for(const n of this.convertTo.split("|"))null!==i&&t.getTypeLength(e)!==t.getTypeLength(n)||(i=n);return i}serialize(t){super.serialize(t),t.convertTo=this.convertTo}deserialize(t){super.deserialize(t),this.convertTo=t.convertTo}generate(t,e){const i=this.node,n=this.getNodeType(t),r=i.build(t,n);return t.format(r,n,e)}}class fs extends ds{static get type(){return"TempNode"}constructor(t){super(t),this.isTempNode=!0}hasDependencies(t){return t.getDataFromNode(this).usageCount>1}build(t,e){if("generate"===t.getBuildStage()){const i=t.getVectorType(this.getNodeType(t,e)),n=t.getDataFromNode(this);if(void 0!==n.propertyName)return t.format(n.propertyName,i,e);if("void"!==i&&"void"!==e&&this.hasDependencies(t)){const r=super.build(t,i),s=t.getVarFromNode(this,null,i),a=t.getPropertyName(s);return t.addLineFlowCode(`${a} = ${r}`,this),n.snippet=r,n.propertyName=a,t.format(n.propertyName,i,e)}}return super.build(t,e)}}class gs extends fs{static get type(){return"JoinNode"}constructor(t=[],e=null){super(e),this.nodes=t}getNodeType(t){return null!==this.nodeType?t.getVectorType(this.nodeType):t.getTypeFromLength(this.nodes.reduce(((e,i)=>e+t.getTypeLength(i.getNodeType(t))),0))}generate(t,e){const i=this.getNodeType(t),n=this.nodes,r=t.getComponentType(i),s=[];for(const e of n){let i=e.build(t);const n=t.getComponentType(e.getNodeType(t));n!==r&&(i=t.format(i,n,r)),s.push(i)}const a=`${t.getType(i)}( ${s.join(", ")} )`;return t.format(a,i,e)}}const _s=cs.join("");class ys extends ds{static get type(){return"SplitNode"}constructor(t,e="x"){super(),this.node=t,this.components=e,this.isSplitNode=!0}getVectorLength(){let t=this.components.length;for(const e of this.components)t=Math.max(cs.indexOf(e)+1,t);return t}getComponentType(t){return t.getComponentType(this.node.getNodeType(t))}getNodeType(t){return t.getTypeFromLength(this.components.length,this.getComponentType(t))}generate(t,e){const i=this.node,n=t.getTypeLength(i.getNodeType(t));let r=null;if(n>1){let s=null;this.getVectorLength()>=n&&(s=t.getTypeFromLength(this.getVectorLength(),this.getComponentType(t)));const a=i.build(t,s);r=this.components.length===n&&this.components===_s.slice(0,this.components.length)?t.format(a,s,e):t.format(`${a}.${this.components}`,this.getNodeType(t),e)}else r=i.build(t,e);return r}serialize(t){super.serialize(t),t.components=this.components}deserialize(t){super.deserialize(t),this.components=t.components}}class xs extends fs{static get type(){return"SetNode"}constructor(t,e,i){super(),this.sourceNode=t,this.components=e,this.targetNode=i}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{sourceNode:e,components:i,targetNode:n}=this,r=this.getNodeType(t),s=t.getTypeFromLength(i.length,n.getNodeType(t)),a=n.build(t,s),o=e.build(t,r),l=t.getTypeLength(r),h=[];for(let t=0;t<l;t++){const e=cs[t];e===i[0]?(h.push(a),t+=i.length-1):h.push(o+"."+e)}return`${t.getType(r)}( ${h.join(", ")} )`}}class vs extends fs{static get type(){return"FlipNode"}constructor(t,e){super(),this.sourceNode=t,this.components=e}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{components:e,sourceNode:i}=this,n=this.getNodeType(t),r=i.build(t),s=t.getVarFromNode(this),a=t.getPropertyName(s);t.addLineFlowCode(a+" = "+r,this);const o=t.getTypeLength(n),l=[];let h=0;for(let t=0;t<o;t++){const i=cs[t];i===e[h]?(l.push("1.0 - "+a+"."+i),h++):l.push(a+"."+i)}return`${t.getType(n)}( ${l.join(", ")} )`}}class bs extends ds{static get type(){return"InputNode"}constructor(t,e=null){super(e),this.isInputNode=!0,this.value=t,this.precision=null}getNodeType(){return null===this.nodeType?es(this.value):this.nodeType}getInputType(t){return this.getNodeType(t)}setPrecision(t){return this.precision=t,this}serialize(t){super.serialize(t),t.value=this.value,this.value&&this.value.toArray&&(t.value=this.value.toArray()),t.valueType=es(this.value),t.nodeType=this.nodeType,"ArrayBuffer"===t.valueType&&(t.value=function(t){let e="";const i=new Uint8Array(t);for(let t=0;t<i.length;t++)e+=String.fromCharCode(i[t]);return btoa(e)}(t.value)),t.precision=this.precision}deserialize(t){super.deserialize(t),this.nodeType=t.nodeType,this.value=Array.isArray(t.value)?is(t.valueType,...t.value):t.value,this.precision=t.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(t.value))}generate(){console.warn("Abstract function.")}}class Ss extends bs{static get type(){return"ConstNode"}constructor(t,e=null){super(t,e),this.isConstNode=!0}generateConst(t){return t.generateConst(this.getNodeType(t),this.value)}generate(t,e){const i=this.getNodeType(t);return t.format(this.generateConst(t),i,e)}}let Ts=null;const Ms=new Map;function Es(t,e){if(Ms.has(t))console.warn(`Redefinition of method chaining ${t}`);else{if("function"!=typeof e)throw new Error(`Node element ${t} is not a function`);Ms.set(t,e)}}const ws=t=>t.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),As=t=>ws(t).split("").sort().join(""),Rs={setup(t,e){const i=e.shift();return t(Js(i),...e)},get(t,e,i){if("string"==typeof e&&void 0===t[e]){if(!0!==t.isStackNode&&"assign"===e)return(...t)=>(Ts.assign(i,...t),i);if(Ms.has(e)){const n=Ms.get(e);return t.isStackNode?(...t)=>i.add(n(...t)):(...t)=>n(i,...t)}if("self"===e)return t;if(e.endsWith("Assign")&&Ms.has(e.slice(0,e.length-6))){const n=Ms.get(e.slice(0,e.length-6));return t.isStackNode?(...t)=>i.assign(t[0],n(...t)):(...t)=>i.assign(n(i,...t))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(e))return e=ws(e),Zs(new ys(i,e));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(e))return e=As(e.slice(3).toLowerCase()),i=>Zs(new xs(t,e,i));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(e))return e=As(e.slice(4).toLowerCase()),()=>Zs(new vs(Zs(t),e));if("width"===e||"height"===e||"depth"===e)return"width"===e?e="x":"height"===e?e="y":"depth"===e&&(e="z"),Zs(new ys(t,e));if(!0===/^\d+$/.test(e))return Zs(new ps(i,new Ss(Number(e),"uint")))}return Reflect.get(t,e,i)},set:(t,e,i,n)=>"string"!=typeof e||void 0!==t[e]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(e)&&"width"!==e&&"height"!==e&&"depth"!==e&&!0!==/^\d+$/.test(e)?Reflect.set(t,e,i,n):(n[e].assign(i),!0)},Cs=new WeakMap,Ns=new WeakMap,Ps=function(t,e=null){for(const i in t)t[i]=Zs(t[i],e);return t},Is=function(t,e=null){const i=t.length;for(let n=0;n<i;n++)t[n]=Zs(t[n],e);return t},Us=function(t,e=null,i=null,n=null){const r=t=>Zs(null!==n?Object.assign(t,n):t);return null===e?(...e)=>r(new t(...Qs(e))):null!==i?(i=Zs(i),(...n)=>r(new t(e,...Qs(n),i))):(...i)=>r(new t(e,...Qs(i)))},Ls=function(t,...e){return Zs(new t(...Qs(e)))};class Ds extends ds{constructor(t,e){super(),this.shaderNode=t,this.inputNodes=e}getNodeType(t){return this.shaderNode.nodeType||this.getOutputNode(t).getNodeType(t)}call(t){const{shaderNode:e,inputNodes:i}=this,n=t.getNodeProperties(e);if(n.onceOutput)return n.onceOutput;let r=null;if(e.layout){let n=Ns.get(t.constructor);void 0===n&&(n=new WeakMap,Ns.set(t.constructor,n));let s=n.get(e);void 0===s&&(s=Zs(t.buildFunctionNode(e)),n.set(e,s)),null!==t.currentFunctionNode&&t.currentFunctionNode.includes.push(s),r=Zs(s.call(i))}else{const n=e.jsFunc,s=null!==i?n(i,t):n(t);r=Zs(s)}return e.once&&(n.onceOutput=r),r}getOutputNode(t){const e=t.getNodeProperties(this);return null===e.outputNode&&(e.outputNode=this.setupOutput(t)),e.outputNode}setup(t){return this.getOutputNode(t)}setupOutput(t){return t.addStack(),t.stack.outputNode=this.call(t),t.removeStack()}generate(t,e){return this.getOutputNode(t).build(t,e)}}class Bs extends ds{constructor(t,e){super(e),this.jsFunc=t,this.layout=null,this.global=!0,this.once=!1}setLayout(t){return this.layout=t,this}call(t=null){return Js(t),Zs(new Ds(this,t))}setup(){return this.call()}}const Fs=[!1,!0],Os=[0,1,2,3],zs=[-1,-2],ks=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Vs=new Map;for(const t of Fs)Vs.set(t,new Ss(t));const Gs=new Map;for(const t of Os)Gs.set(t,new Ss(t,"uint"));const Hs=new Map([...Gs].map((t=>new Ss(t.value,"int"))));for(const t of zs)Hs.set(t,new Ss(t,"int"));const Ws=new Map([...Hs].map((t=>new Ss(t.value))));for(const t of ks)Ws.set(t,new Ss(t));for(const t of ks)Ws.set(-t,new Ss(-t));const js={bool:Vs,uint:Gs,ints:Hs,float:Ws},Xs=new Map([...Vs,...Ws]),$s=(t,e)=>Xs.has(t)?Xs.get(t):!0===t.isNode?t:new Ss(t,e),qs=function(t,e=null){return(...i)=>{if((0===i.length||!["bool","float","int","uint"].includes(t)&&i.every((t=>"object"!=typeof t)))&&(i=[is(t,...i)]),1===i.length&&null!==e&&e.has(i[0]))return Zs(e.get(i[0]));if(1===i.length){const e=$s(i[0],t);return(t=>{try{return t.getNodeType()}catch(t){return}})(e)===t?Zs(e):Zs(new ms(e,t))}const n=i.map((t=>$s(t)));return Zs(new gs(n,t))}},Ys=t=>"object"==typeof t&&null!==t?t.value:t;function Ks(t,e){return new Proxy(new Bs(t,e),Rs)}const Zs=(t,e=null)=>function(t,e=null){const i=es(t);if("node"===i){let e=Cs.get(t);return void 0===e&&(e=new Proxy(t,Rs),Cs.set(t,e),Cs.set(e,e)),e}return null===e&&("float"===i||"boolean"===i)||i&&"shader"!==i&&"string"!==i?Zs($s(t,e)):"shader"===i?ia(t):t}(t,e),Js=(t,e=null)=>new Ps(t,e),Qs=(t,e=null)=>new Is(t,e),ta=(...t)=>new Us(...t),ea=(...t)=>new Ls(...t),ia=(t,e)=>{const i=new Ks(t,e),n=(...t)=>{let e;return Js(t),e=t[0]&&t[0].isNode?[...t]:t[0],i.call(e)};return n.shaderNode=i,n.setLayout=t=>(i.setLayout(t),n),n.once=()=>(i.once=!0,n),n};Es("toGlobal",(t=>(t.global=!0,t)));const na=t=>{Ts=t},ra=()=>Ts,sa=(...t)=>Ts.If(...t);Es("append",(function(t){return Ts&&Ts.add(t),t}));const aa=new qs("color"),oa=new qs("float",js.float),la=new qs("int",js.ints),ha=new qs("uint",js.uint),ca=new qs("bool",js.bool),ua=new qs("vec2"),da=new qs("ivec2"),pa=new qs("uvec2"),ma=new qs("bvec2"),fa=new qs("vec3"),ga=new qs("ivec3"),_a=new qs("uvec3"),ya=new qs("bvec3"),xa=new qs("vec4"),va=new qs("ivec4"),ba=new qs("uvec4"),Sa=new qs("bvec4"),Ta=new qs("mat2"),Ma=new qs("mat3"),Ea=new qs("mat4");Es("toColor",aa),Es("toFloat",oa),Es("toInt",la),Es("toUint",ha),Es("toBool",ca),Es("toVec2",ua),Es("toIVec2",da),Es("toUVec2",pa),Es("toBVec2",ma),Es("toVec3",fa),Es("toIVec3",ga),Es("toUVec3",_a),Es("toBVec3",ya),Es("toVec4",xa),Es("toIVec4",va),Es("toUVec4",ba),Es("toBVec4",Sa),Es("toMat2",Ta),Es("toMat3",Ma),Es("toMat4",Ea),Es("element",ta(ps)),Es("convert",((t,e)=>Zs(new ms(Zs(t),e))));class wa extends ds{static get type(){return"UniformGroupNode"}constructor(t,e=!1,i=1){super("string"),this.name=t,this.version=0,this.shared=e,this.order=i,this.isUniformGroup=!0}set needsUpdate(t){!0===t&&this.version++}serialize(t){super.serialize(t),t.name=this.name,t.version=this.version,t.shared=this.shared}deserialize(t){super.deserialize(t),this.name=t.name,this.version=t.version,this.shared=t.shared}}const Aa=t=>new wa(t),Ra=(t,e=0)=>new wa(t,!0,e),Ca=Ra("frame"),Na=Ra("render"),Pa=Aa("object");class Ia extends bs{static get type(){return"UniformNode"}constructor(t,e=null){super(t,e),this.isUniformNode=!0,this.name="",this.groupNode=Pa}label(t){return this.name=t,this}setGroup(t){return this.groupNode=t,this}getGroup(){return this.groupNode}getUniformHash(t){return this.getHash(t)}onUpdate(t,e){const i=this.getSelf();return t=t.bind(i),super.onUpdate((e=>{const n=t(e,i);void 0!==n&&(this.value=n)}),e)}generate(t,e){const i=this.getNodeType(t),n=this.getUniformHash(t);let r=t.getNodeFromHash(n);void 0===r&&(t.setHashNode(this,n),r=this);const s=r.getInputType(t),a=t.getUniformFromNode(r,s,t.shaderStage,this.name||t.context.label),o=t.getPropertyName(a);return void 0!==t.context.label&&delete t.context.label,t.format(o,i,e)}}const Ua=(t,e)=>{const i=(t=>null!=t?t.nodeType||t.convertTo||("string"==typeof t?t:null):null)(e||t),n=t&&!0===t.isNode?t.node&&t.node.value||t.value:t;return Zs(new Ia(n,i))};class La extends ds{static get type(){return"PropertyNode"}constructor(t,e=null,i=!1){super(t),this.name=e,this.varying=i,this.isPropertyNode=!0}getHash(t){return this.name||super.getHash(t)}isGlobal(){return!0}generate(t){let e;return!0===this.varying?(e=t.getVaryingFromNode(this,this.name),e.needsInterpolation=!0):e=t.getVarFromNode(this,this.name),t.getPropertyName(e)}}const Da=(t,e)=>Zs(new La(t,e)),Ba=(t,e)=>Zs(new La(t,e,!0)),Fa=ea(La,"vec4","DiffuseColor"),Oa=ea(La,"vec3","EmissiveColor"),za=ea(La,"float","Roughness"),ka=ea(La,"float","Metalness"),Va=ea(La,"float","Clearcoat"),Ga=ea(La,"float","ClearcoatRoughness"),Ha=ea(La,"vec3","Sheen"),Wa=ea(La,"float","SheenRoughness"),ja=ea(La,"float","Iridescence"),Xa=ea(La,"float","IridescenceIOR"),$a=ea(La,"float","IridescenceThickness"),qa=ea(La,"float","AlphaT"),Ya=ea(La,"float","Anisotropy"),Ka=ea(La,"vec3","AnisotropyT"),Za=ea(La,"vec3","AnisotropyB"),Ja=ea(La,"color","SpecularColor"),Qa=ea(La,"float","SpecularF90"),to=ea(La,"float","Shininess"),eo=ea(La,"vec4","Output"),io=ea(La,"float","dashSize"),no=ea(La,"float","gapSize"),ro=ea(La,"float","IOR"),so=ea(La,"float","Transmission"),ao=ea(La,"float","Thickness"),oo=ea(La,"float","AttenuationDistance"),lo=ea(La,"color","AttenuationColor"),ho=ea(La,"float","Dispersion");class co extends fs{static get type(){return"AssignNode"}constructor(t,e){super(),this.targetNode=t,this.sourceNode=e}hasDependencies(){return!1}getNodeType(t,e){return"void"!==e?this.targetNode.getNodeType(t):"void"}needsSplitAssign(t){const{targetNode:e}=this;if(!1===t.isAvailable("swizzleAssign")&&e.isSplitNode&&e.components.length>1){const i=t.getTypeLength(e.node.getNodeType(t));return cs.join("").slice(0,i)!==e.components}return!1}generate(t,e){const{targetNode:i,sourceNode:n}=this,r=this.needsSplitAssign(t),s=i.getNodeType(t),a=i.context({assign:!0}).build(t),o=n.build(t,s),l=n.getNodeType(t),h=t.getDataFromNode(this);let c;if(!0===h.initialized)"void"!==e&&(c=a);else if(r){const n=t.getVarFromNode(this,null,s),r=t.getPropertyName(n);t.addLineFlowCode(`${r} = ${o}`,this);const l=i.node.context({assign:!0}).build(t);for(let e=0;e<i.components.length;e++){const n=i.components[e];t.addLineFlowCode(`${l}.${n} = ${r}[ ${e} ]`,this)}"void"!==e&&(c=a)}else c=`${a} = ${o}`,"void"!==e&&"void"!==l||(t.addLineFlowCode(c,this),"void"!==e&&(c=a));return h.initialized=!0,t.format(c,s,e)}}Es("assign",ta(co));class uo extends fs{static get type(){return"FunctionCallNode"}constructor(t=null,e={}){super(),this.functionNode=t,this.parameters=e}setParameters(t){return this.parameters=t,this}getParameters(){return this.parameters}getNodeType(t){return this.functionNode.getNodeType(t)}generate(t){const e=[],i=this.functionNode,n=i.getInputs(t),r=this.parameters,s=(e,i)=>{const n=i.type;let r;return r="pointer"===n?"&"+e.build(t):e.build(t,n),r};if(Array.isArray(r))for(let t=0;t<r.length;t++)e.push(s(r[t],n[t]));else for(const t of n){const i=r[t.name];if(void 0===i)throw new Error(`FunctionCallNode: Input '${t.name}' not found in FunctionNode.`);e.push(s(i,t))}return`${i.build(t,"property")}( ${e.join(", ")} )`}}Es("call",((t,...e)=>(e=e.length>1||e[0]&&!0===e[0].isNode?Qs(e):Js(e[0]),Zs(new uo(Zs(t),e)))));class po extends fs{static get type(){return"OperatorNode"}constructor(t,e,i,...n){if(super(),n.length>0){let r=new po(t,e,i);for(let e=0;e<n.length-1;e++)r=new po(t,r,n[e]);e=r,i=n[n.length-1]}this.op=t,this.aNode=e,this.bNode=i}getNodeType(t,e){const i=this.op,n=this.aNode,r=this.bNode,s=n.getNodeType(t),a=void 0!==r?r.getNodeType(t):null;if("void"===s||"void"===a)return"void";if("%"===i)return s;if("~"===i||"&"===i||"|"===i||"^"===i||">>"===i||"<<"===i)return t.getIntegerType(s);if("!"===i||"=="===i||"&&"===i||"||"===i||"^^"===i)return"bool";if("<"===i||">"===i||"<="===i||">="===i){const i=e?t.getTypeLength(e):Math.max(t.getTypeLength(s),t.getTypeLength(a));return i>1?`bvec${i}`:"bool"}return"float"===s&&t.isMatrix(a)?a:t.isMatrix(s)&&t.isVector(a)?t.getVectorFromMatrix(s):t.isVector(s)&&t.isMatrix(a)?t.getVectorFromMatrix(a):t.getTypeLength(a)>t.getTypeLength(s)?a:s}generate(t,e){const i=this.op,n=this.aNode,r=this.bNode,s=this.getNodeType(t,e);let a=null,o=null;"void"!==s?(a=n.getNodeType(t),o=void 0!==r?r.getNodeType(t):null,"<"===i||">"===i||"<="===i||">="===i||"=="===i?t.isVector(a)?o=a:a!==o&&(a=o="float"):">>"===i||"<<"===i?(a=s,o=t.changeComponentType(o,"uint")):t.isMatrix(a)&&t.isVector(o)?o=t.getVectorFromMatrix(a):a=t.isVector(a)&&t.isMatrix(o)?t.getVectorFromMatrix(o):o=s):a=o=s;const l=n.build(t,a),h=void 0!==r?r.build(t,o):null,c=t.getTypeLength(e),u=t.getFunctionOperator(i);return"void"!==e?"<"===i&&c>1?t.useComparisonMethod?t.format(`${t.getMethod("lessThan",e)}( ${l}, ${h} )`,s,e):t.format(`( ${l} < ${h} )`,s,e):"<="===i&&c>1?t.useComparisonMethod?t.format(`${t.getMethod("lessThanEqual",e)}( ${l}, ${h} )`,s,e):t.format(`( ${l} <= ${h} )`,s,e):">"===i&&c>1?t.useComparisonMethod?t.format(`${t.getMethod("greaterThan",e)}( ${l}, ${h} )`,s,e):t.format(`( ${l} > ${h} )`,s,e):">="===i&&c>1?t.useComparisonMethod?t.format(`${t.getMethod("greaterThanEqual",e)}( ${l}, ${h} )`,s,e):t.format(`( ${l} >= ${h} )`,s,e):"!"===i||"~"===i?t.format(`(${i}${l})`,a,e):u?t.format(`${u}( ${l}, ${h} )`,s,e):t.format(`( ${l} ${i} ${h} )`,s,e):"void"!==a?u?t.format(`${u}( ${l}, ${h} )`,s,e):t.format(`${l} ${i} ${h}`,s,e):void 0}serialize(t){super.serialize(t),t.op=this.op}deserialize(t){super.deserialize(t),this.op=t.op}}const mo=ta(po,"+"),fo=ta(po,"-"),go=ta(po,"*"),_o=ta(po,"/"),yo=ta(po,"%"),xo=ta(po,"=="),vo=ta(po,"!="),bo=ta(po,"<"),So=ta(po,">"),To=ta(po,"<="),Mo=ta(po,">="),Eo=ta(po,"&&"),wo=ta(po,"||"),Ao=ta(po,"!"),Ro=ta(po,"^^"),Co=ta(po,"&"),No=ta(po,"~"),Po=ta(po,"|"),Io=ta(po,"^"),Uo=ta(po,"<<"),Lo=ta(po,">>");Es("add",mo),Es("sub",fo),Es("mul",go),Es("div",_o),Es("modInt",yo),Es("equal",xo),Es("notEqual",vo),Es("lessThan",bo),Es("greaterThan",So),Es("lessThanEqual",To),Es("greaterThanEqual",Mo),Es("and",Eo),Es("or",wo),Es("not",Ao),Es("xor",Ro),Es("bitAnd",Co),Es("bitNot",No),Es("bitOr",Po),Es("bitXor",Io),Es("shiftLeft",Uo),Es("shiftRight",Lo),Es("remainder",((...t)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),yo(...t))));class Do extends fs{static get type(){return"MathNode"}constructor(t,e,i=null,n=null){super(),this.method=t,this.aNode=e,this.bNode=i,this.cNode=n}getInputType(t){const e=this.aNode.getNodeType(t),i=this.bNode?this.bNode.getNodeType(t):null,n=this.cNode?this.cNode.getNodeType(t):null,r=t.isMatrix(e)?0:t.getTypeLength(e),s=t.isMatrix(i)?0:t.getTypeLength(i),a=t.isMatrix(n)?0:t.getTypeLength(n);return r>s&&r>a?e:s>a?i:a>r?n:e}getNodeType(t){const e=this.method;return e===Do.LENGTH||e===Do.DISTANCE||e===Do.DOT?"float":e===Do.CROSS?"vec3":e===Do.ALL?"bool":e===Do.EQUALS?t.changeComponentType(this.aNode.getNodeType(t),"bool"):e===Do.MOD?this.aNode.getNodeType(t):this.getInputType(t)}generate(t,e){const i=this.method,n=this.getNodeType(t),r=this.getInputType(t),s=this.aNode,a=this.bNode,o=this.cNode,l=!0===t.renderer.isWebGLRenderer;if(i===Do.TRANSFORM_DIRECTION){let i=s,n=a;t.isMatrix(i.getNodeType(t))?n=xa(fa(n),0):i=xa(fa(i),0);const r=go(i,n).xyz;return Zo(r).build(t,e)}if(i===Do.NEGATE)return t.format("( - "+s.build(t,r)+" )",n,e);if(i===Do.ONE_MINUS)return fo(1,s).build(t,e);if(i===Do.RECIPROCAL)return _o(1,s).build(t,e);if(i===Do.DIFFERENCE)return sl(fo(s,a)).build(t,e);{const h=[];return i===Do.CROSS||i===Do.MOD?h.push(s.build(t,n),a.build(t,n)):l&&i===Do.STEP?h.push(s.build(t,1===t.getTypeLength(s.getNodeType(t))?"float":r),a.build(t,r)):l&&(i===Do.MIN||i===Do.MAX)||i===Do.MOD?h.push(s.build(t,r),a.build(t,1===t.getTypeLength(a.getNodeType(t))?"float":r)):i===Do.REFRACT?h.push(s.build(t,r),a.build(t,r),o.build(t,"float")):i===Do.MIX?h.push(s.build(t,r),a.build(t,r),o.build(t,1===t.getTypeLength(o.getNodeType(t))?"float":r)):(h.push(s.build(t,r)),null!==a&&h.push(a.build(t,r)),null!==o&&h.push(o.build(t,r))),t.format(`${t.getMethod(i,n)}( ${h.join(", ")} )`,n,e)}}serialize(t){super.serialize(t),t.method=this.method}deserialize(t){super.deserialize(t),this.method=t.method}}Do.ALL="all",Do.ANY="any",Do.EQUALS="equals",Do.RADIANS="radians",Do.DEGREES="degrees",Do.EXP="exp",Do.EXP2="exp2",Do.LOG="log",Do.LOG2="log2",Do.SQRT="sqrt",Do.INVERSE_SQRT="inversesqrt",Do.FLOOR="floor",Do.CEIL="ceil",Do.NORMALIZE="normalize",Do.FRACT="fract",Do.SIN="sin",Do.COS="cos",Do.TAN="tan",Do.ASIN="asin",Do.ACOS="acos",Do.ATAN="atan",Do.ABS="abs",Do.SIGN="sign",Do.LENGTH="length",Do.NEGATE="negate",Do.ONE_MINUS="oneMinus",Do.DFDX="dFdx",Do.DFDY="dFdy",Do.ROUND="round",Do.RECIPROCAL="reciprocal",Do.TRUNC="trunc",Do.FWIDTH="fwidth",Do.BITCAST="bitcast",Do.TRANSPOSE="transpose",Do.ATAN2="atan2",Do.MIN="min",Do.MAX="max",Do.MOD="mod",Do.STEP="step",Do.REFLECT="reflect",Do.DISTANCE="distance",Do.DIFFERENCE="difference",Do.DOT="dot",Do.CROSS="cross",Do.POW="pow",Do.TRANSFORM_DIRECTION="transformDirection",Do.MIX="mix",Do.CLAMP="clamp",Do.REFRACT="refract",Do.SMOOTHSTEP="smoothstep",Do.FACEFORWARD="faceforward";const Bo=oa(1e-6),Fo=oa(Math.PI),Oo=(Math.PI,ta(Do,Do.ALL)),zo=ta(Do,Do.ANY),ko=ta(Do,Do.EQUALS),Vo=ta(Do,Do.RADIANS),Go=ta(Do,Do.DEGREES),Ho=ta(Do,Do.EXP),Wo=ta(Do,Do.EXP2),jo=ta(Do,Do.LOG),Xo=ta(Do,Do.LOG2),$o=ta(Do,Do.SQRT),qo=ta(Do,Do.INVERSE_SQRT),Yo=ta(Do,Do.FLOOR),Ko=ta(Do,Do.CEIL),Zo=ta(Do,Do.NORMALIZE),Jo=ta(Do,Do.FRACT),Qo=ta(Do,Do.SIN),tl=ta(Do,Do.COS),el=ta(Do,Do.TAN),il=ta(Do,Do.ASIN),nl=ta(Do,Do.ACOS),rl=ta(Do,Do.ATAN),sl=ta(Do,Do.ABS),al=ta(Do,Do.SIGN),ol=ta(Do,Do.LENGTH),ll=ta(Do,Do.NEGATE),hl=ta(Do,Do.ONE_MINUS),cl=ta(Do,Do.DFDX),ul=ta(Do,Do.DFDY),dl=ta(Do,Do.ROUND),pl=ta(Do,Do.RECIPROCAL),ml=ta(Do,Do.TRUNC),fl=ta(Do,Do.FWIDTH),gl=(Do.BITCAST,ta(Do,Do.TRANSPOSE)),_l=ta(Do,Do.ATAN2),yl=ta(Do,Do.MIN),xl=ta(Do,Do.MAX),vl=ta(Do,Do.MOD),bl=ta(Do,Do.STEP),Sl=ta(Do,Do.REFLECT),Tl=ta(Do,Do.DISTANCE),Ml=ta(Do,Do.DIFFERENCE),El=ta(Do,Do.DOT),wl=ta(Do,Do.CROSS),Al=ta(Do,Do.POW),Rl=ta(Do,Do.POW,2),Cl=ta(Do,Do.POW,3),Nl=ta(Do,Do.POW,4),Pl=ta(Do,Do.TRANSFORM_DIRECTION),Il=ta(Do,Do.MIX),Ul=(t,e=0,i=1)=>Zs(new Do(Do.CLAMP,Zs(t),Zs(e),Zs(i))),Ll=ta(Do,Do.REFRACT),Dl=ta(Do,Do.SMOOTHSTEP),Bl=ta(Do,Do.FACEFORWARD),Fl=ia((([t])=>{const e=El(t.xy,ua(12.9898,78.233)),i=vl(e,Fo);return Jo(Qo(i).mul(43758.5453))}));Es("all",Oo),Es("any",zo),Es("equals",ko),Es("radians",Vo),Es("degrees",Go),Es("exp",Ho),Es("exp2",Wo),Es("log",jo),Es("log2",Xo),Es("sqrt",$o),Es("inverseSqrt",qo),Es("floor",Yo),Es("ceil",Ko),Es("normalize",Zo),Es("fract",Jo),Es("sin",Qo),Es("cos",tl),Es("tan",el),Es("asin",il),Es("acos",nl),Es("atan",rl),Es("abs",sl),Es("sign",al),Es("length",ol),Es("lengthSq",(t=>El(t,t))),Es("negate",ll),Es("oneMinus",hl),Es("dFdx",cl),Es("dFdy",ul),Es("round",dl),Es("reciprocal",pl),Es("trunc",ml),Es("fwidth",fl),Es("atan2",_l),Es("min",yl),Es("max",xl),Es("mod",vl),Es("step",bl),Es("reflect",Sl),Es("distance",Tl),Es("dot",El),Es("cross",wl),Es("pow",Al),Es("pow2",Rl),Es("pow3",Cl),Es("pow4",Nl),Es("transformDirection",Pl),Es("mix",((t,e,i)=>Il(e,i,t))),Es("clamp",Ul),Es("refract",Ll),Es("smoothstep",((t,e,i)=>Dl(e,i,t))),Es("faceForward",Bl),Es("difference",Ml),Es("saturate",(t=>Ul(t))),Es("cbrt",(t=>go(al(t),Al(sl(t),1/3)))),Es("transpose",gl),Es("rand",Fl);class Ol extends ds{static get type(){return"ConditionalNode"}constructor(t,e,i=null){super(),this.condNode=t,this.ifNode=e,this.elseNode=i}getNodeType(t){const e=this.ifNode.getNodeType(t);if(null!==this.elseNode){const i=this.elseNode.getNodeType(t);if(t.getTypeLength(i)>t.getTypeLength(e))return i}return e}setup(t){const e=this.condNode.cache(),i=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,r=t.context.nodeBlock;t.getDataFromNode(i).parentNodeBlock=r,null!==n&&(t.getDataFromNode(n).parentNodeBlock=r);const s=t.getNodeProperties(this);s.condNode=e,s.ifNode=i.context({nodeBlock:i}),s.elseNode=n?n.context({nodeBlock:n}):null}generate(t,e){const i=this.getNodeType(t),n=t.getDataFromNode(this);if(void 0!==n.nodeProperty)return n.nodeProperty;const{condNode:r,ifNode:s,elseNode:a}=t.getNodeProperties(this),o="void"!==e,l=o?Da(i).build(t):"";n.nodeProperty=l;const h=r.build(t,"bool");t.addFlowCode(`\n${t.tab}if ( ${h} ) {\n\n`).addFlowTab();let c=s.build(t,i);if(c&&(c=o?l+" = "+c+";":"return "+c+";"),t.removeFlowTab().addFlowCode(t.tab+"\t"+c+"\n\n"+t.tab+"}"),null!==a){t.addFlowCode(" else {\n\n").addFlowTab();let e=a.build(t,i);e&&(e=o?l+" = "+e+";":"return "+e+";"),t.removeFlowTab().addFlowCode(t.tab+"\t"+e+"\n\n"+t.tab+"}\n\n")}else t.addFlowCode("\n\n");return t.format(l,i,e)}}const zl=ta(Ol);Es("select",zl),Es("cond",((...t)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),zl(...t))));class kl extends ds{static get type(){return"ContextNode"}constructor(t,e={}){super(),this.isContextNode=!0,this.node=t,this.value=e}getScope(){return this.node.getScope()}getNodeType(t){return this.node.getNodeType(t)}analyze(t){this.node.build(t)}setup(t){const e=t.getContext();t.setContext({...t.context,...this.value});const i=this.node.build(t);return t.setContext(e),i}generate(t,e){const i=t.getContext();t.setContext({...t.context,...this.value});const n=this.node.build(t,e);return t.setContext(i),n}}const Vl=ta(kl);Es("context",Vl),Es("label",((t,e)=>Vl(t,{label:e})));class Gl extends ds{static get type(){return"VarNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.global=!0,this.isVarNode=!0}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}generate(t){const{node:e,name:i}=this,n=t.getVarFromNode(this,i,t.getVectorType(this.getNodeType(t))),r=t.getPropertyName(n),s=e.build(t,n.type);return t.addLineFlowCode(`${r} = ${s}`,this),r}}const Hl=ta(Gl);Es("toVar",((...t)=>Hl(...t).append())),Es("temp",(t=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),Hl(t))));class Wl extends ds{static get type(){return"VaryingNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.isVaryingNode=!0}isGlobal(){return!0}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}setupVarying(t){const e=t.getNodeProperties(this);let i=e.varying;if(void 0===i){const n=this.name,r=this.getNodeType(t);e.varying=i=t.getVaryingFromNode(this,n,r),e.node=this.node}return i.needsInterpolation||(i.needsInterpolation="fragment"===t.shaderStage),i}setup(t){this.setupVarying(t)}analyze(t){return this.setupVarying(t),this.node.analyze(t)}generate(t){const e=t.getNodeProperties(this),i=this.setupVarying(t);if(void 0===e.propertyName){const n=this.getNodeType(t),r=t.getPropertyName(i,ns);t.flowNodeFromShaderStage(ns,this.node,n,r),e.propertyName=r}return t.getPropertyName(i)}}const jl=ta(Wl);Es("varying",jl);const Xl=ia((([t])=>{const e=t.mul(.9478672986).add(.0521327014).pow(2.4),i=t.mul(.0773993808),n=t.lessThanEqual(.04045);return Il(e,i,n)})).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),$l=ia((([t])=>{const e=t.pow(.41666).mul(1.055).sub(.055),i=t.mul(12.92),n=t.lessThanEqual(.0031308);return Il(e,i,n)})).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),ql="WorkingColorSpace",Yl="OutputColorSpace";class Kl extends fs{static get type(){return"ColorSpaceNode"}constructor(t,e,i){super("vec4"),this.colorNode=t,this.source=e,this.target=i}resolveColorSpace(t,e){return e===ql?Bt.workingColorSpace:e===Yl?t.context.outputColorSpace||t.renderer.outputColorSpace:e}setup(t){const{colorNode:e}=this,i=this.resolveColorSpace(t,this.source),n=this.resolveColorSpace(t,this.target);let r=e;return!1!==Bt.enabled&&i!==n&&i&&n?(Bt.getTransfer(i)===pt&&(r=xa(Xl(r.rgb),r.a)),Bt.getPrimaries(i)!==Bt.getPrimaries(n)&&(r=xa(Ma(Bt._getMatrix(new It,i,n)).mul(r.rgb),r.a)),Bt.getTransfer(n)===pt&&(r=xa($l(r.rgb),r.a)),r):r}}const Zl=(t,e)=>Zs(new Kl(Zs(t),e,ql));Es("toOutputColorSpace",(t=>Zs(new Kl(Zs(t),ql,Yl)))),Es("toWorkingColorSpace",(t=>Zs(new Kl(Zs(t),Yl,ql)))),Es("workingToColorSpace",((t,e)=>Zs(new Kl(Zs(t),ql,e)))),Es("colorSpaceToWorking",Zl);let Jl=class extends ps{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),i=this.referenceNode.getNodeType(),n=this.getNodeType();return t.format(e,i,n)}};class Ql extends ds{static get type(){return"ReferenceBaseNode"}constructor(t,e,i=null,n=null){super(),this.property=t,this.uniformType=e,this.object=i,this.count=n,this.properties=t.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=os}setGroup(t){return this.group=t,this}element(t){return Zs(new Jl(this,Zs(t)))}setNodeType(t){const e=Ua(null,t).getSelf();null!==this.group&&e.setGroup(this.group),this.node=e}getNodeType(t){return null===this.node&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let i=t[e[0]];for(let t=1;t<e.length;t++)i=i[e[t]];return i}updateReference(t){return this.reference=null!==this.object?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}class th extends Ql{static get type(){return"RendererReferenceNode"}constructor(t,e,i=null){super(t,e,i),this.renderer=i,this.setGroup(Na)}updateReference(t){return this.reference=null!==this.renderer?this.renderer:t.renderer,this.reference}}const eh=(t,e,i)=>Zs(new th(t,e,i));class ih extends fs{static get type(){return"ToneMappingNode"}constructor(t,e=nh,i=null){super("vec3"),this.toneMapping=t,this.exposureNode=e,this.colorNode=i}getCacheKey(){return Jr(super.getCacheKey(),this.toneMapping)}setup(t){const e=this.colorNode||t.context.color,i=this.toneMapping;if(0===i)return e;let n=null;const r=t.renderer.library.getToneMappingFunction(i);return null!==r?n=xa(r(e.rgb,this.exposureNode),e.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",i),n=e),n}}const nh=eh("toneMappingExposure","float");Es("toneMapping",((t,e,i)=>((t,e,i)=>Zs(new ih(t,Zs(e),Zs(i))))(e,i,t)));class rh extends bs{static get type(){return"BufferAttributeNode"}constructor(t,e=null,i=0,n=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferStride=i,this.bufferOffset=n,this.usage=ft,this.instanced=!1,this.attribute=null,this.global=!0,t&&!0===t.isBufferAttribute&&(this.attribute=t,this.usage=t.usage,this.instanced=t.isInstancedBufferAttribute)}getHash(t){if(0===this.bufferStride&&0===this.bufferOffset){let e=t.globalCache.getData(this.value);return void 0===e&&(e={node:this},t.globalCache.setData(this.value,e)),e.node.uuid}return this.uuid}getNodeType(t){return null===this.bufferType&&(this.bufferType=t.getTypeFromAttribute(this.attribute)),this.bufferType}setup(t){if(null!==this.attribute)return;const e=this.getNodeType(t),i=this.value,n=t.getTypeLength(e),r=this.bufferStride||n,s=this.bufferOffset,a=!0===i.isInterleavedBuffer?i:new Sn(i,r),o=new Mn(a,n,s);a.setUsage(this.usage),this.attribute=o,this.attribute.isInstancedBufferAttribute=this.instanced}generate(t){const e=this.getNodeType(t),i=t.getBufferAttributeFromNode(this,e),n=t.getPropertyName(i);let r=null;return"vertex"===t.shaderStage||"compute"===t.shaderStage?(this.name=n,r=n):r=jl(this).build(t,e),r}getInputType(){return"bufferAttribute"}setUsage(t){return this.usage=t,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=t),this}setInstanced(t){return this.instanced=t,this}}const sh=(t,e,i,n)=>Zs(new rh(t,e,i,n)),ah=(t,e,i,n)=>sh(t,e,i,n).setInstanced(!0),oh=(t,e,i,n)=>((t,e,i,n)=>sh(t,e,i,n).setUsage(gt))(t,e,i,n).setInstanced(!0);Es("toAttribute",(t=>sh(t.value)));class lh extends ds{static get type(){return"ComputeNode"}constructor(t,e,i=[64]){super("void"),this.isComputeNode=!0,this.computeNode=t,this.count=e,this.workgroupSize=i,this.dispatchCount=0,this.version=1,this.updateBeforeType=os,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}updateDispatchCount(){const{count:t,workgroupSize:e}=this;let i=e[0];for(let t=1;t<e.length;t++)i*=e[t];this.dispatchCount=Math.ceil(t/i)}onInit(t){return this.onInitFunction=t,this}updateBefore({renderer:t}){t.compute(this)}generate(t){const{shaderStage:e}=t;if("compute"===e){const e=this.computeNode.build(t,"void");""!==e&&t.addLineFlowCode(e,this)}}}Es("compute",((t,e,i)=>Zs(new lh(Zs(t),e,i))));class hh extends ds{static get type(){return"CacheNode"}constructor(t,e=!0){super(),this.node=t,this.parent=e,this.isCacheNode=!0}getNodeType(t){return this.node.getNodeType(t)}build(t,...e){const i=t.getCache(),n=t.getCacheFromNode(this,this.parent);t.setCache(n);const r=this.node.build(t,...e);return t.setCache(i),r}}const ch=(t,...e)=>Zs(new hh(Zs(t),...e));Es("cache",ch);class uh extends ds{static get type(){return"BypassNode"}constructor(t,e){super(),this.isBypassNode=!0,this.outputNode=t,this.callNode=e}getNodeType(t){return this.outputNode.getNodeType(t)}generate(t){const e=this.callNode.build(t,"void");return""!==e&&t.addLineFlowCode(e,this),this.outputNode.build(t)}}Es("bypass",ta(uh));class dh extends ds{static get type(){return"RemapNode"}constructor(t,e,i,n=oa(0),r=oa(1)){super(),this.node=t,this.inLowNode=e,this.inHighNode=i,this.outLowNode=n,this.outHighNode=r,this.doClamp=!0}setup(){const{node:t,inLowNode:e,inHighNode:i,outLowNode:n,outHighNode:r,doClamp:s}=this;let a=t.sub(e).div(i.sub(e));return!0===s&&(a=a.clamp()),a.mul(r.sub(n)).add(n)}}const ph=ta(dh,null,null,{doClamp:!1}),mh=ta(dh);Es("remap",ph),Es("remapClamp",mh);class fh extends ds{static get type(){return"ExpressionNode"}constructor(t="",e="void"){super(e),this.snippet=t}generate(t,e){const i=this.getNodeType(t),n=this.snippet;if("void"!==i)return t.format(`( ${n} )`,i,e);t.addLineFlowCode(n,this)}}const gh=ta(fh);Es("discard",(t=>(t?zl(t,gh("discard")):gh("discard")).append()));class _h extends fs{static get type(){return"RenderOutputNode"}constructor(t,e,i){super("vec4"),this.colorNode=t,this.toneMapping=e,this.outputColorSpace=i,this.isRenderOutput=!0}setup({context:t}){let e=this.colorNode||t.color;const i=(null!==this.toneMapping?this.toneMapping:t.toneMapping)||0,n=(null!==this.outputColorSpace?this.outputColorSpace:t.outputColorSpace)||"";return 0!==i&&(e=e.toneMapping(i)),""!==n&&n!==Bt.workingColorSpace&&(e=e.workingToColorSpace(n)),e}}Es("renderOutput",((t,e=null,i=null)=>Zs(new _h(Zs(t),e,i))));class yh extends ds{static get type(){return"AttributeNode"}constructor(t,e=null){super(e),this.global=!0,this._attributeName=t}getHash(t){return this.getAttributeName(t)}getNodeType(t){let e=this.nodeType;if(null===e){const i=this.getAttributeName(t);if(t.hasGeometryAttribute(i)){const n=t.geometry.getAttribute(i);e=t.getTypeFromAttribute(n)}else e="float"}return e}setAttributeName(t){return this._attributeName=t,this}getAttributeName(){return this._attributeName}generate(t){const e=this.getAttributeName(t),i=this.getNodeType(t);if(!0===t.hasGeometryAttribute(e)){const n=t.geometry.getAttribute(e),r=t.getTypeFromAttribute(n),s=t.getAttribute(e,r);return"vertex"===t.shaderStage?t.format(s.name,r,i):jl(this).build(t,i)}return console.warn(`AttributeNode: Vertex attribute "${e}" not found on geometry.`),t.generateConst(i)}serialize(t){super.serialize(t),t.global=this.global,t._attributeName=this._attributeName}deserialize(t){super.deserialize(t),this.global=t.global,this._attributeName=t._attributeName}}const xh=(t,e)=>Zs(new yh(t,e)),vh=t=>xh("uv"+(t>0?t:""),"vec2");class bh extends ds{static get type(){return"TextureSizeNode"}constructor(t,e=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=t,this.levelNode=e}generate(t,e){const i=this.textureNode.build(t,"property"),n=null===this.levelNode?"0":this.levelNode.build(t,"int");return t.format(`${t.getMethod("textureDimensions")}( ${i}, ${n} )`,this.getNodeType(t),e)}}const Sh=ta(bh);class Th extends Ia{static get type(){return"MaxMipLevelNode"}constructor(t){super(0),this._textureNode=t,this.updateType=ss}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const t=this.texture,e=t.images,i=e&&e.length>0?e[0]&&e[0].image||e[0]:t.image;if(i&&void 0!==i.width){const{width:t,height:e}=i;this.value=Math.log2(Math.max(t,e))}}}const Mh=ta(Th);class Eh extends Ia{static get type(){return"TextureNode"}constructor(t,e=null,i=null,n=null){super(t),this.isTextureNode=!0,this.uvNode=e,this.levelNode=i,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=rs,this.referenceNode=null,this._value=t,this._matrixUniform=null,this.setUpdateMatrix(null===e)}set value(t){this.referenceNode?this.referenceNode.value=t:this._value=t}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===A?"uvec4":this.value.type===w?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return vh(this.value.channel)}updateReference(){return this.value}getTransformedUV(t){return null===this._matrixUniform&&(this._matrixUniform=Ua(this.value.matrix)),this._matrixUniform.mul(fa(t,1)).xy}setUpdateMatrix(t){return this.updateMatrix=t,this.updateType=t?ss:rs,this}setupUV(t,e){const i=this.value;return!t.isFlipY()||!0!==i.isRenderTargetTexture&&!0!==i.isFramebufferTexture&&!0!==i.isDepthTexture||(e=this.sampler?e.flipY():e.setY(la(Sh(this,this.levelNode).y).sub(e.y).sub(1))),e}setup(t){const e=t.getNodeProperties(this);e.referenceNode=this.referenceNode;let i=this.uvNode;null!==i&&!0!==t.context.forceUVContext||!t.context.getUV||(i=t.context.getUV(this)),i||(i=this.getDefaultUV()),!0===this.updateMatrix&&(i=this.getTransformedUV(i)),i=this.setupUV(t,i);let n=this.levelNode;null===n&&t.context.getTextureLevel&&(n=t.context.getTextureLevel(this)),e.uvNode=i,e.levelNode=n,e.biasNode=this.biasNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.depthNode=this.depthNode}generateUV(t,e){return e.build(t,!0===this.sampler?"vec2":"ivec2")}generateSnippet(t,e,i,n,r,s,a,o){const l=this.value;let h;return h=n?t.generateTextureLevel(l,e,i,n,s):r?t.generateTextureBias(l,e,i,r,s):o?t.generateTextureGrad(l,e,i,o,s):a?t.generateTextureCompare(l,e,i,a,s):!1===this.sampler?t.generateTextureLoad(l,e,i,s):t.generateTexture(l,e,i,s),h}generate(t,e){const i=t.getNodeProperties(this),n=this.value;if(!n||!0!==n.isTexture)throw new Error("TextureNode: Need a three.js texture.");const r=super.generate(t,"property");if("sampler"===e)return r+"_sampler";if(t.isReference(e))return r;{const s=t.getDataFromNode(this);let a=s.propertyName;if(void 0===a){const{uvNode:e,levelNode:n,biasNode:o,compareNode:l,depthNode:h,gradNode:c}=i,u=this.generateUV(t,e),d=n?n.build(t,"float"):null,p=o?o.build(t,"float"):null,m=h?h.build(t,"int"):null,f=l?l.build(t,"float"):null,g=c?[c[0].build(t,"vec2"),c[1].build(t,"vec2")]:null,_=t.getVarFromNode(this);a=t.getPropertyName(_);const y=this.generateSnippet(t,r,u,d,p,m,f,g);t.addLineFlowCode(`${a} = ${y}`,this),s.snippet=y,s.propertyName=a}let o=a;const l=this.getNodeType(t);return t.needsToWorkingColorSpace(n)&&(o=Zl(gh(o,l),n.colorSpace).setup(t).build(t,l)),t.format(o,l,e)}}setSampler(t){return this.sampler=t,this}getSampler(){return this.sampler}uv(t){const e=this.clone();return e.uvNode=Zs(t),e.referenceNode=this.getSelf(),Zs(e)}blur(t){const e=this.clone();return e.biasNode=Zs(t).mul(Mh(e)),e.referenceNode=this.getSelf(),Zs(e)}level(t){const e=this.clone();return e.levelNode=Zs(t),e.referenceNode=this.getSelf(),Zs(e)}size(t){return Sh(this,t)}bias(t){const e=this.clone();return e.biasNode=Zs(t),e.referenceNode=this.getSelf(),Zs(e)}compare(t){const e=this.clone();return e.compareNode=Zs(t),e.referenceNode=this.getSelf(),Zs(e)}grad(t,e){const i=this.clone();return i.gradNode=[Zs(t),Zs(e)],i.referenceNode=this.getSelf(),Zs(i)}depth(t){const e=this.clone();return e.depthNode=Zs(t),e.referenceNode=this.getSelf(),Zs(e)}serialize(t){super.serialize(t),t.value=this.value.toJSON(t.meta).uuid,t.sampler=this.sampler,t.updateMatrix=this.updateMatrix,t.updateType=this.updateType}deserialize(t){super.deserialize(t),this.value=t.meta.textures[t.value],this.sampler=t.sampler,this.updateMatrix=t.updateMatrix,this.updateType=t.updateType}update(){const t=this.value,e=this._matrixUniform;null!==e&&(e.value=t.matrix),!0===t.matrixAutoUpdate&&t.updateMatrix()}clone(){const t=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return t.sampler=this.sampler,t}}const wh=ta(Eh),Ah=(...t)=>wh(...t).setSampler(!1),Rh=Ua("float").label("cameraNear").setGroup(Na).onRenderUpdate((({camera:t})=>t.near)),Ch=Ua("float").label("cameraFar").setGroup(Na).onRenderUpdate((({camera:t})=>t.far)),Nh=Ua("mat4").label("cameraProjectionMatrix").setGroup(Na).onRenderUpdate((({camera:t})=>t.projectionMatrix)),Ph=Ua("mat4").label("cameraViewMatrix").setGroup(Na).onRenderUpdate((({camera:t})=>t.matrixWorldInverse)),Ih=Ua(new ie).label("cameraPosition").setGroup(Na).onRenderUpdate((({camera:t},e)=>e.value.setFromMatrixPosition(t.matrixWorld)));class Uh extends ds{static get type(){return"Object3DNode"}constructor(t,e=null){super(),this.scope=t,this.object3d=e,this.updateType=os,this._uniformNode=new Ia(null)}getNodeType(){const t=this.scope;return t===Uh.WORLD_MATRIX?"mat4":t===Uh.POSITION||t===Uh.VIEW_POSITION||t===Uh.DIRECTION||t===Uh.SCALE?"vec3":void 0}update(t){const e=this.object3d,i=this._uniformNode,n=this.scope;if(n===Uh.WORLD_MATRIX)i.value=e.matrixWorld;else if(n===Uh.POSITION)i.value=i.value||new ie,i.value.setFromMatrixPosition(e.matrixWorld);else if(n===Uh.SCALE)i.value=i.value||new ie,i.value.setFromMatrixScale(e.matrixWorld);else if(n===Uh.DIRECTION)i.value=i.value||new ie,e.getWorldDirection(i.value);else if(n===Uh.VIEW_POSITION){const n=t.camera;i.value=i.value||new ie,i.value.setFromMatrixPosition(e.matrixWorld),i.value.applyMatrix4(n.matrixWorldInverse)}}generate(t){const e=this.scope;return e===Uh.WORLD_MATRIX?this._uniformNode.nodeType="mat4":e!==Uh.POSITION&&e!==Uh.VIEW_POSITION&&e!==Uh.DIRECTION&&e!==Uh.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(t)}serialize(t){super.serialize(t),t.scope=this.scope}deserialize(t){super.deserialize(t),this.scope=t.scope}}Uh.WORLD_MATRIX="worldMatrix",Uh.POSITION="position",Uh.SCALE="scale",Uh.VIEW_POSITION="viewPosition",Uh.DIRECTION="direction",Uh.DIRECTION,Uh.WORLD_MATRIX,Uh.POSITION,Uh.SCALE,Uh.VIEW_POSITION;class Lh extends Uh{static get type(){return"ModelNode"}constructor(t){super(t)}update(t){this.object3d=t.object,super.update(t)}}const Dh=ea(Lh,Lh.WORLD_MATRIX),Bh=Ua(new It).onObjectUpdate((({object:t},e)=>e.value.getNormalMatrix(t.matrixWorld))),Fh=Ph.mul(Dh).toVar("modelViewMatrix"),Oh=xh("position","vec3"),zh=Oh.varying("positionLocal"),kh=Oh.varying("positionPrevious"),Vh=Dh.mul(zh).xyz.varying("v_positionWorld"),Gh=zh.transformDirection(Dh).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),Hh=Fh.mul(zh).xyz.varying("v_positionView"),Wh=Hh.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class jh extends ds{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(t){const{renderer:e,material:i}=t;return e.coordinateSystem===_t&&1===i.side?"false":t.getFrontFacing()}}const Xh=oa(ea(jh)).mul(2).sub(1),$h=xh("normal","vec3"),qh=ia((t=>!1===t.geometry.hasAttribute("normal")?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),fa(0,1,0)):$h),"vec3").once()().toVar("normalLocal"),Yh=Hh.dFdx().cross(Hh.dFdy()).normalize().toVar("normalFlat"),Kh=ia((t=>{let e;return e=!0===t.material.flatShading?Yh:jl(ic(qh),"v_normalView").normalize(),e}),"vec3").once()().toVar("normalView"),Zh=jl(Kh.transformDirection(Ph),"v_normalWorld").normalize().toVar("normalWorld"),Jh=ia((t=>t.context.setupNormal()),"vec3").once()().mul(Xh).toVar("transformedNormalView"),Qh=Jh.transformDirection(Ph).toVar("transformedNormalWorld"),tc=ia((t=>t.context.setupClearcoatNormal()),"vec3").once()().mul(Xh).toVar("transformedClearcoatNormalView"),ec=ia((([t,e=Dh])=>{const i=Ma(e),n=t.div(fa(i[0].dot(i[0]),i[1].dot(i[1]),i[2].dot(i[2])));return i.mul(n).xyz})),ic=ia((([t],e)=>{const i=e.renderer.nodes.modelNormalViewMatrix;if(null!==i)return i.transformDirection(t);const n=Bh.mul(t);return Ph.transformDirection(n)})),nc=Ua(0).onReference((({material:t})=>t)).onRenderUpdate((({material:t})=>t.refractionRatio)),rc=Wh.negate().reflect(Jh),sc=Wh.negate().refract(Jh,nc),ac=rc.transformDirection(Ph).toVar("reflectVector"),oc=sc.transformDirection(Ph).toVar("reflectVector");class lc extends Eh{static get type(){return"CubeTextureNode"}constructor(t,e=null,i=null,n=null){super(t,e,i,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const t=this.value;return t.mapping===h?ac:t.mapping===c?oc:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',t.mapping),fa(0,0,0))}setUpdateMatrix(){}setupUV(t,e){const i=this.value;return t.renderer.coordinateSystem!==yt&&i.isRenderTargetTexture?e:fa(e.x.negate(),e.yz)}generateUV(t,e){return e.build(t,"vec3")}}const hc=ta(lc);class cc extends Ia{static get type(){return"BufferNode"}constructor(t,e,i=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferCount=i}getElementType(t){return this.getNodeType(t)}getInputType(){return"buffer"}}const uc=(t,e,i)=>Zs(new cc(t,e,i));class dc extends ps{static get type(){return"UniformArrayElementNode"}constructor(t,e){super(t,e),this.isArrayBufferElementNode=!0}generate(t){const e=super.generate(t),i=this.getNodeType();return t.format(e,"vec4",i)}}class pc extends cc{static get type(){return"UniformArrayNode"}constructor(t,e=null){super(null,"vec4"),this.array=t,this.elementType=e,this._elementType=null,this._elementLength=0,this.updateType=as,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:t,value:e}=this,i=this.getElementLength(),n=this.getElementType();if(1===i)for(let i=0;i<t.length;i++)e[4*i]=t[i];else if("color"===n)for(let i=0;i<t.length;i++){const n=4*i,r=t[i];e[n]=r.r,e[n+1]=r.g,e[n+2]=r.b||0}else for(let i=0;i<t.length;i++){const n=4*i,r=t[i];e[n]=r.x,e[n+1]=r.y,e[n+2]=r.z||0,e[n+3]=r.w||0}}setup(t){const e=this.array.length;this._elementType=null===this.elementType?es(this.array[0]):this.elementType,this._elementLength=t.getTypeLength(this._elementType);let i=Float32Array;return"i"===this._elementType.charAt(0)?i=Int32Array:"u"===this._elementType.charAt(0)&&(i=Uint32Array),this.value=new i(4*e),this.bufferCount=e,this.bufferType=t.changeComponentType("vec4",t.getComponentType(this._elementType)),super.setup(t)}element(t){return Zs(new dc(this,Zs(t)))}}const mc=(t,e)=>Zs(new pc(t,e));class fc extends ps{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),i=this.referenceNode.getNodeType(),n=this.getNodeType();return t.format(e,i,n)}}class gc extends ds{static get type(){return"ReferenceNode"}constructor(t,e,i=null,n=null){super(),this.property=t,this.uniformType=e,this.object=i,this.count=n,this.properties=t.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=os}element(t){return Zs(new fc(this,Zs(t)))}setGroup(t){return this.group=t,this}label(t){return this.name=t,this}setNodeType(t){let e=null;e=null!==this.count?uc(null,t,this.count):Array.isArray(this.getValueFromReference())?mc(null,t):"texture"===t?wh(null):"cubeTexture"===t?hc(null):Ua(null,t),null!==this.group&&e.setGroup(this.group),null!==this.name&&e.label(this.name),this.node=e.getSelf()}getNodeType(t){return null===this.node&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let i=t[e[0]];for(let t=1;t<e.length;t++)i=i[e[t]];return i}updateReference(t){return this.reference=null!==this.object?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}const _c=(t,e,i)=>Zs(new gc(t,e,i)),yc=(t,e,i,n)=>Zs(new gc(t,e,n,i));class xc extends gc{static get type(){return"MaterialReferenceNode"}constructor(t,e,i=null){super(t,e,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(t){return this.reference=null!==this.material?this.material:t.material,this.reference}}const vc=(t,e,i)=>Zs(new xc(t,e,i)),bc=ia((t=>(!1===t.geometry.hasAttribute("tangent")&&t.geometry.computeTangents(),xh("tangent","vec4"))))(),Sc=bc.xyz.toVar("tangentLocal"),Tc=Fh.mul(xa(Sc,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),Mc=Ma(Tc,jl((Ac=Kh.cross(Tc),Ac.mul(bc.w).xyz),"v_bitangentView").normalize().toVar("bitangentView"),Kh),Ec=(()=>{let t=Za.cross(Wh);return t=t.cross(Za).normalize(),t=Il(t,Jh,Ya.mul(za.oneMinus()).oneMinus().pow2().pow2()).normalize(),t})(),wc=ia((t=>{const{eye_pos:e,surf_norm:i,mapN:n,uv:r}=t,s=e.dFdx(),a=e.dFdy(),o=r.dFdx(),l=r.dFdy(),h=i,c=a.cross(h),u=h.cross(s),d=c.mul(o.x).add(u.mul(l.x)),p=c.mul(o.y).add(u.mul(l.y)),m=d.dot(d).max(p.dot(p)),f=Xh.mul(m.inverseSqrt());return mo(d.mul(n.x,f),p.mul(n.y,f),h.mul(n.z)).normalize()}));var Ac;class Rc extends fs{static get type(){return"NormalMapNode"}constructor(t,e=null){super("vec3"),this.node=t,this.scaleNode=e,this.normalMapType=0}setup(t){const{normalMapType:e,scaleNode:i}=this;let n=this.node.mul(2).sub(1);null!==i&&(n=fa(n.xy.mul(i),n.z));let r=null;return 1===e?r=ic(n):0===e&&(r=!0===t.hasGeometryAttribute("tangent")?Mc.mul(n).normalize():wc({eye_pos:Hh,surf_norm:Kh,mapN:n,uv:vh()})),r}}const Cc=ta(Rc),Nc=ia((({textureNode:t,bumpScale:e})=>{const i=e=>t.cache().context({getUV:t=>e(t.uvNode||vh()),forceUVContext:!0}),n=oa(i((t=>t)));return ua(oa(i((t=>t.add(t.dFdx())))).sub(n),oa(i((t=>t.add(t.dFdy())))).sub(n)).mul(e)})),Pc=ia((t=>{const{surf_pos:e,surf_norm:i,dHdxy:n}=t,r=e.dFdx().normalize(),s=i,a=e.dFdy().normalize().cross(s),o=s.cross(r),l=r.dot(a).mul(Xh),h=l.sign().mul(n.x.mul(a).add(n.y.mul(o)));return l.abs().mul(i).sub(h).normalize()}));class Ic extends fs{static get type(){return"BumpMapNode"}constructor(t,e=null){super("vec3"),this.textureNode=t,this.scaleNode=e}setup(){const t=null!==this.scaleNode?this.scaleNode:1,e=Nc({textureNode:this.textureNode,bumpScale:t});return Pc({surf_pos:Hh,surf_norm:Kh,dHdxy:e})}}const Uc=ta(Ic),Lc=new Map;class Dc extends ds{static get type(){return"MaterialNode"}constructor(t){super(),this.scope=t}getCache(t,e){let i=Lc.get(t);return void 0===i&&(i=vc(t,e),Lc.set(t,i)),i}getFloat(t){return this.getCache(t,"float")}getColor(t){return this.getCache(t,"color")}getTexture(t){return this.getCache("map"===t?"map":t+"Map","texture")}setup(t){const e=t.context.material,i=this.scope;let n=null;if(i===Dc.COLOR){const t=void 0!==e.color?this.getColor(i):fa();n=e.map&&!0===e.map.isTexture?t.mul(this.getTexture("map")):t}else if(i===Dc.OPACITY){const t=this.getFloat(i);n=e.alphaMap&&!0===e.alphaMap.isTexture?t.mul(this.getTexture("alpha")):t}else if(i===Dc.SPECULAR_STRENGTH)n=e.specularMap&&!0===e.specularMap.isTexture?this.getTexture("specular").r:oa(1);else if(i===Dc.SPECULAR_INTENSITY){const t=this.getFloat(i);n=e.specularMap?t.mul(this.getTexture(i).a):t}else if(i===Dc.SPECULAR_COLOR){const t=this.getColor(i);n=e.specularColorMap&&!0===e.specularColorMap.isTexture?t.mul(this.getTexture(i).rgb):t}else if(i===Dc.ROUGHNESS){const t=this.getFloat(i);n=e.roughnessMap&&!0===e.roughnessMap.isTexture?t.mul(this.getTexture(i).g):t}else if(i===Dc.METALNESS){const t=this.getFloat(i);n=e.metalnessMap&&!0===e.metalnessMap.isTexture?t.mul(this.getTexture(i).b):t}else if(i===Dc.EMISSIVE){const t=this.getFloat("emissiveIntensity"),r=this.getColor(i).mul(t);n=e.emissiveMap&&!0===e.emissiveMap.isTexture?r.mul(this.getTexture(i)):r}else if(i===Dc.NORMAL)e.normalMap?(n=Cc(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=e.normalMapType):n=e.bumpMap?Uc(this.getTexture("bump").r,this.getFloat("bumpScale")):Kh;else if(i===Dc.CLEARCOAT){const t=this.getFloat(i);n=e.clearcoatMap&&!0===e.clearcoatMap.isTexture?t.mul(this.getTexture(i).r):t}else if(i===Dc.CLEARCOAT_ROUGHNESS){const t=this.getFloat(i);n=e.clearcoatRoughnessMap&&!0===e.clearcoatRoughnessMap.isTexture?t.mul(this.getTexture(i).r):t}else if(i===Dc.CLEARCOAT_NORMAL)n=e.clearcoatNormalMap?Cc(this.getTexture(i),this.getCache(i+"Scale","vec2")):Kh;else if(i===Dc.SHEEN){const t=this.getColor("sheenColor").mul(this.getFloat("sheen"));n=e.sheenColorMap&&!0===e.sheenColorMap.isTexture?t.mul(this.getTexture("sheenColor").rgb):t}else if(i===Dc.SHEEN_ROUGHNESS){const t=this.getFloat(i);n=e.sheenRoughnessMap&&!0===e.sheenRoughnessMap.isTexture?t.mul(this.getTexture(i).a):t,n=n.clamp(.07,1)}else if(i===Dc.ANISOTROPY)if(e.anisotropyMap&&!0===e.anisotropyMap.isTexture){const t=this.getTexture(i);n=Ta(gu.x,gu.y,gu.y.negate(),gu.x).mul(t.rg.mul(2).sub(ua(1)).normalize().mul(t.b))}else n=gu;else if(i===Dc.IRIDESCENCE_THICKNESS){const t=_c("1","float",e.iridescenceThicknessRange);if(e.iridescenceThicknessMap){const r=_c("0","float",e.iridescenceThicknessRange);n=t.sub(r).mul(this.getTexture(i).g).add(r)}else n=t}else if(i===Dc.TRANSMISSION){const t=this.getFloat(i);n=e.transmissionMap?t.mul(this.getTexture(i).r):t}else if(i===Dc.THICKNESS){const t=this.getFloat(i);n=e.thicknessMap?t.mul(this.getTexture(i).g):t}else if(i===Dc.IOR)n=this.getFloat(i);else if(i===Dc.LIGHT_MAP)n=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===Dc.AO_MAP)n=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const e=this.getNodeType(t);n=this.getCache(i,e)}return n}}Dc.ALPHA_TEST="alphaTest",Dc.COLOR="color",Dc.OPACITY="opacity",Dc.SHININESS="shininess",Dc.SPECULAR="specular",Dc.SPECULAR_STRENGTH="specularStrength",Dc.SPECULAR_INTENSITY="specularIntensity",Dc.SPECULAR_COLOR="specularColor",Dc.REFLECTIVITY="reflectivity",Dc.ROUGHNESS="roughness",Dc.METALNESS="metalness",Dc.NORMAL="normal",Dc.CLEARCOAT="clearcoat",Dc.CLEARCOAT_ROUGHNESS="clearcoatRoughness",Dc.CLEARCOAT_NORMAL="clearcoatNormal",Dc.EMISSIVE="emissive",Dc.ROTATION="rotation",Dc.SHEEN="sheen",Dc.SHEEN_ROUGHNESS="sheenRoughness",Dc.ANISOTROPY="anisotropy",Dc.IRIDESCENCE="iridescence",Dc.IRIDESCENCE_IOR="iridescenceIOR",Dc.IRIDESCENCE_THICKNESS="iridescenceThickness",Dc.IOR="ior",Dc.TRANSMISSION="transmission",Dc.THICKNESS="thickness",Dc.ATTENUATION_DISTANCE="attenuationDistance",Dc.ATTENUATION_COLOR="attenuationColor",Dc.LINE_SCALE="scale",Dc.LINE_DASH_SIZE="dashSize",Dc.LINE_GAP_SIZE="gapSize",Dc.LINE_WIDTH="linewidth",Dc.LINE_DASH_OFFSET="dashOffset",Dc.POINT_WIDTH="pointWidth",Dc.DISPERSION="dispersion",Dc.LIGHT_MAP="light",Dc.AO_MAP="ao";const Bc=ea(Dc,Dc.ALPHA_TEST),Fc=ea(Dc,Dc.COLOR),Oc=ea(Dc,Dc.SHININESS),zc=ea(Dc,Dc.EMISSIVE),kc=ea(Dc,Dc.OPACITY),Vc=ea(Dc,Dc.SPECULAR),Gc=ea(Dc,Dc.SPECULAR_INTENSITY),Hc=ea(Dc,Dc.SPECULAR_COLOR),Wc=ea(Dc,Dc.SPECULAR_STRENGTH),jc=ea(Dc,Dc.REFLECTIVITY),Xc=ea(Dc,Dc.ROUGHNESS),$c=ea(Dc,Dc.METALNESS),qc=ea(Dc,Dc.NORMAL).context({getUV:null}),Yc=ea(Dc,Dc.CLEARCOAT),Kc=ea(Dc,Dc.CLEARCOAT_ROUGHNESS),Zc=ea(Dc,Dc.CLEARCOAT_NORMAL).context({getUV:null}),Jc=ea(Dc,Dc.ROTATION),Qc=ea(Dc,Dc.SHEEN),tu=ea(Dc,Dc.SHEEN_ROUGHNESS),eu=ea(Dc,Dc.ANISOTROPY),iu=ea(Dc,Dc.IRIDESCENCE),nu=ea(Dc,Dc.IRIDESCENCE_IOR),ru=ea(Dc,Dc.IRIDESCENCE_THICKNESS),su=ea(Dc,Dc.TRANSMISSION),au=ea(Dc,Dc.THICKNESS),ou=ea(Dc,Dc.IOR),lu=ea(Dc,Dc.ATTENUATION_DISTANCE),hu=ea(Dc,Dc.ATTENUATION_COLOR),cu=ea(Dc,Dc.LINE_SCALE),uu=ea(Dc,Dc.LINE_DASH_SIZE),du=ea(Dc,Dc.LINE_GAP_SIZE),pu=(Dc.LINE_WIDTH,Dc.LINE_DASH_OFFSET,Dc.POINT_WIDTH,ea(Dc,Dc.DISPERSION)),mu=ea(Dc,Dc.LIGHT_MAP),fu=ea(Dc,Dc.AO_MAP),gu=Ua(new Pt).onReference((function(t){return t.material})).onRenderUpdate((function({material:t}){this.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation))}));class _u extends fs{static get type(){return"ModelViewProjectionNode"}constructor(t=null){super("vec4"),this.positionNode=t}setup(t){if("fragment"===t.shaderStage)return jl(t.context.mvp);const e=this.positionNode||zh,i=t.renderer.nodes.modelViewMatrix||Fh;return Nh.mul(i).mul(e)}}const yu=ta(_u);class xu extends ds{static get type(){return"IndexNode"}constructor(t){super("uint"),this.scope=t,this.isInstanceIndexNode=!0}generate(t){const e=this.getNodeType(t),i=this.scope;let n,r;if(i===xu.VERTEX)n=t.getVertexIndex();else if(i===xu.INSTANCE)n=t.getInstanceIndex();else if(i===xu.DRAW)n=t.getDrawIndex();else if(i===xu.INVOCATION_LOCAL)n=t.getInvocationLocalIndex();else if(i===xu.INVOCATION_SUBGROUP)n=t.getInvocationSubgroupIndex();else{if(i!==xu.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+i);n=t.getSubgroupIndex()}return r="vertex"===t.shaderStage||"compute"===t.shaderStage?n:jl(this).build(t,e),r}}xu.VERTEX="vertex",xu.INSTANCE="instance",xu.SUBGROUP="subgroup",xu.INVOCATION_LOCAL="invocationLocal",xu.INVOCATION_SUBGROUP="invocationSubgroup",xu.DRAW="draw";const vu=ea(xu,xu.VERTEX),bu=ea(xu,xu.INSTANCE),Su=(xu.SUBGROUP,xu.INVOCATION_SUBGROUP,xu.INVOCATION_LOCAL,ea(xu,xu.DRAW));class Tu extends ds{static get type(){return"InstanceNode"}constructor(t){super("void"),this.instanceMesh=t,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=ss,this.buffer=null,this.bufferColor=null}setup(t){let e=this.instanceMatrixNode,i=this.instanceColorNode;const n=this.instanceMesh;if(null===e){const t=n.instanceMatrix;if(n.count<=1e3)e=uc(t.array,"mat4",Math.max(n.count,1)).element(bu);else{const i=new jr(t.array,16,1);this.buffer=i;const n=t.usage===gt?oh:ah,r=[n(i,"vec4",16,0),n(i,"vec4",16,4),n(i,"vec4",16,8),n(i,"vec4",16,12)];e=Ea(...r)}this.instanceMatrixNode=e}const r=n.instanceColor;if(r&&null===i){const t=new An(r.array,3),e=r.usage===gt?oh:ah;this.bufferColor=t,i=fa(e(t,"vec3",3,0)),this.instanceColorNode=i}const s=e.mul(zh).xyz;if(zh.assign(s),t.hasGeometryAttribute("normal")){const t=ec(qh,e);qh.assign(t)}null!==this.instanceColorNode&&Ba("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==gt&&null!=this.buffer&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==gt&&null!=this.bufferColor&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const Mu=ta(Tu);class Eu extends ds{static get type(){return"BatchNode"}constructor(t){super("void"),this.batchMesh=t,this.batchingIdNode=null}setup(t){null===this.batchingIdNode&&(null===t.getDrawIndex()?this.batchingIdNode=bu:this.batchingIdNode=Su);const e=ia((([t])=>{const e=Sh(Ah(this.batchMesh._indirectTexture),0),i=la(t).modInt(la(e)),n=la(t).div(la(e));return Ah(this.batchMesh._indirectTexture,da(i,n)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),i=e(la(this.batchingIdNode)),n=this.batchMesh._matricesTexture,r=Sh(Ah(n),0),s=oa(i).mul(4).toInt().toVar(),a=s.modInt(r),o=s.div(la(r)),l=Ea(Ah(n,da(a,o)),Ah(n,da(a.add(1),o)),Ah(n,da(a.add(2),o)),Ah(n,da(a.add(3),o))),h=this.batchMesh._colorsTexture;if(null!==h){const t=ia((([t])=>{const e=Sh(Ah(h),0).x,i=t,n=i.modInt(e),r=i.div(e);return Ah(h,da(n,r)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),e=t(i);Ba("vec3","vBatchColor").assign(e)}const c=Ma(l);zh.assign(l.mul(zh));const u=qh.div(fa(c[0].dot(c[0]),c[1].dot(c[1]),c[2].dot(c[2]))),d=c.mul(u).xyz;qh.assign(d),t.hasGeometryAttribute("tangent")&&Sc.mulAssign(c)}}const wu=ta(Eu),Au=new WeakMap;class Ru extends ds{static get type(){return"SkinningNode"}constructor(t,e=!1){let i,n,r;super("void"),this.skinnedMesh=t,this.useReference=e,this.updateType=os,this.skinIndexNode=xh("skinIndex","uvec4"),this.skinWeightNode=xh("skinWeight","vec4"),e?(i=_c("bindMatrix","mat4"),n=_c("bindMatrixInverse","mat4"),r=yc("skeleton.boneMatrices","mat4",t.skeleton.bones.length)):(i=Ua(t.bindMatrix,"mat4"),n=Ua(t.bindMatrixInverse,"mat4"),r=uc(t.skeleton.boneMatrices,"mat4",t.skeleton.bones.length)),this.bindMatrixNode=i,this.bindMatrixInverseNode=n,this.boneMatricesNode=r,this.previousBoneMatricesNode=null}getSkinnedPosition(t=this.boneMatricesNode,e=zh){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:s}=this,a=t.element(i.x),o=t.element(i.y),l=t.element(i.z),h=t.element(i.w),c=r.mul(e),u=mo(a.mul(n.x).mul(c),o.mul(n.y).mul(c),l.mul(n.z).mul(c),h.mul(n.w).mul(c));return s.mul(u).xyz}getSkinnedNormal(t=this.boneMatricesNode,e=qh){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:s}=this,a=t.element(i.x),o=t.element(i.y),l=t.element(i.z),h=t.element(i.w);let c=mo(n.x.mul(a),n.y.mul(o),n.z.mul(l),n.w.mul(h));return c=s.mul(c).mul(r),c.transformDirection(e).xyz}getPreviousSkinnedPosition(t){const e=t.object;return null===this.previousBoneMatricesNode&&(e.skeleton.previousBoneMatrices=new Float32Array(e.skeleton.boneMatrices),this.previousBoneMatricesNode=yc("skeleton.previousBoneMatrices","mat4",e.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,kh)}needsPreviousBoneMatrices(t){const e=t.renderer.getMRT();return e&&e.has("velocity")}setup(t){this.needsPreviousBoneMatrices(t)&&kh.assign(this.getPreviousSkinnedPosition(t));const e=this.getSkinnedPosition();if(zh.assign(e),t.hasGeometryAttribute("normal")){const e=this.getSkinnedNormal();qh.assign(e),t.hasGeometryAttribute("tangent")&&Sc.assign(e)}}generate(t,e){if("void"!==e)return zh.build(t,e)}update(t){const e=(this.useReference?t.object:this.skinnedMesh).skeleton;Au.get(e)!==t.frameId&&(Au.set(e,t.frameId),null!==this.previousBoneMatricesNode&&e.previousBoneMatrices.set(e.boneMatrices),e.update())}}class Cu extends ds{static get type(){return"LoopNode"}constructor(t=[]){super(),this.params=t}getVarName(t){return String.fromCharCode("i".charCodeAt()+t)}getProperties(t){const e=t.getNodeProperties(this);if(void 0!==e.stackNode)return e;const i={};for(let t=0,e=this.params.length-1;t<e;t++){const e=this.params[t],n=!0!==e.isNode&&e.name||this.getVarName(t),r=!0!==e.isNode&&e.type||"int";i[n]=gh(n,r)}const n=t.addStack();return e.returnsNode=this.params[this.params.length-1](i,n,t),e.stackNode=n,t.removeStack(),e}getNodeType(t){const{returnsNode:e}=this.getProperties(t);return e?e.getNodeType(t):"void"}setup(t){this.getProperties(t)}generate(t){const e=this.getProperties(t),i=this.params,n=e.stackNode;for(let e=0,n=i.length-1;e<n;e++){const n=i[e];let r=null,s=null,a=null,o=null,l=null,h=null;n.isNode?(o="int",a=this.getVarName(e),r="0",s=n.build(t,o),l="<"):(o=n.type||"int",a=n.name||this.getVarName(e),r=n.start,s=n.end,l=n.condition,h=n.update,"number"==typeof r?r=t.generateConst(o,r):r&&r.isNode&&(r=r.build(t,o)),"number"==typeof s?s=t.generateConst(o,s):s&&s.isNode&&(s=s.build(t,o)),void 0!==r&&void 0===s?(r+=" - 1",s="0",l=">="):void 0!==s&&void 0===r&&(r="0",l="<"),void 0===l&&(l=Number(r)>Number(s)?">=":"<"));const c={start:r,end:s,condition:l},u=c.start,d=c.end;let p="",m="",f="";h||(h="int"===o||"uint"===o?l.includes("<")?"++":"--":l.includes("<")?"+= 1.":"-= 1."),p+=t.getVar(o,a)+" = "+u,m+=a+" "+l+" "+d,f+=a+" "+h;const g=`for ( ${p}; ${m}; ${f} )`;t.addFlowCode((0===e?"\n":"")+t.tab+g+" {\n\n").addFlowTab()}const r=n.build(t,"void"),s=e.returnsNode?e.returnsNode.build(t):"";t.removeFlowTab().addFlowCode("\n"+t.tab+r);for(let e=0,i=this.params.length-1;e<i;e++)t.addFlowCode((0===e?"":t.tab)+"}\n\n").removeFlowTab();return t.addFlowTab(),s}}const Nu=(...t)=>Zs(new Cu(Qs(t,"int"))).append(),Pu=new WeakMap,Iu=new Zt,Uu=ia((({bufferMap:t,influence:e,stride:i,width:n,depth:r,offset:s})=>{const a=la(vu).mul(i).add(s),o=a.div(n),l=a.sub(o.mul(n));return Ah(t,da(l,o)).depth(r).mul(e)}));class Lu extends ds{static get type(){return"MorphNode"}constructor(t){super("void"),this.mesh=t,this.morphBaseInfluence=Ua(1),this.updateType=os}setup(t){const{geometry:e}=t,i=void 0!==e.morphAttributes.position,n=e.hasAttribute("normal")&&void 0!==e.morphAttributes.normal,r=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,s=void 0!==r?r.length:0,{texture:a,stride:o,size:l}=function(t){const e=void 0!==t.morphAttributes.position,i=void 0!==t.morphAttributes.normal,n=void 0!==t.morphAttributes.color,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,s=void 0!==r?r.length:0;let a=Pu.get(t);if(void 0===a||a.count!==s){void 0!==a&&a.texture.dispose();const o=t.morphAttributes.position||[],l=t.morphAttributes.normal||[],h=t.morphAttributes.color||[];let c=0;!0===e&&(c=1),!0===i&&(c=2),!0===n&&(c=3);let u=t.attributes.position.count*c,d=1;const p=4096;u>p&&(d=Math.ceil(u/p),u=p);const m=new Float32Array(u*d*4*s),f=new te(m,u,d,s);f.type=R,f.needsUpdate=!0;const g=4*c;for(let y=0;y<s;y++){const x=o[y],v=l[y],b=h[y],S=u*d*4*y;for(let T=0;T<x.count;T++){const M=T*g;!0===e&&(Iu.fromBufferAttribute(x,T),m[S+M+0]=Iu.x,m[S+M+1]=Iu.y,m[S+M+2]=Iu.z,m[S+M+3]=0),!0===i&&(Iu.fromBufferAttribute(v,T),m[S+M+4]=Iu.x,m[S+M+5]=Iu.y,m[S+M+6]=Iu.z,m[S+M+7]=0),!0===n&&(Iu.fromBufferAttribute(b,T),m[S+M+8]=Iu.x,m[S+M+9]=Iu.y,m[S+M+10]=Iu.z,m[S+M+11]=4===b.itemSize?Iu.w:1)}}function _(){f.dispose(),Pu.delete(t),t.removeEventListener("dispose",_)}a={count:s,texture:f,stride:c,size:new Pt(u,d)},Pu.set(t,a),t.addEventListener("dispose",_)}return a}(e);!0===i&&zh.mulAssign(this.morphBaseInfluence),!0===n&&qh.mulAssign(this.morphBaseInfluence);const h=la(l.width);Nu(s,(({i:t})=>{const e=oa(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?e.assign(Ah(this.mesh.morphTexture,da(la(t).add(1),la(bu))).r):e.assign(_c("morphTargetInfluences","float").element(t).toVar()),!0===i&&zh.addAssign(Uu({bufferMap:a,influence:e,stride:o,width:h,depth:t,offset:la(0)})),!0===n&&qh.addAssign(Uu({bufferMap:a,influence:e,stride:o,width:h,depth:t,offset:la(1)}))}))}update(){const t=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?t.value=1:t.value=1-this.mesh.morphTargetInfluences.reduce(((t,e)=>t+e),0)}}const Du=ta(Lu);class Bu extends ds{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class Fu extends Bu{static get type(){return"AONode"}constructor(t=null){super(),this.aoNode=t}setup(t){t.context.ambientOcclusion.mulAssign(this.aoNode)}}class Ou extends kl{static get type(){return"LightingContextNode"}constructor(t,e=null,i=null,n=null){super(t),this.lightingModel=e,this.backdropNode=i,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:t,backdropAlphaNode:e}=this,i={directDiffuse:fa().toVar("directDiffuse"),directSpecular:fa().toVar("directSpecular"),indirectDiffuse:fa().toVar("indirectDiffuse"),indirectSpecular:fa().toVar("indirectSpecular")};return{radiance:fa().toVar("radiance"),irradiance:fa().toVar("irradiance"),iblIrradiance:fa().toVar("iblIrradiance"),ambientOcclusion:oa(1).toVar("ambientOcclusion"),reflectedLight:i,backdrop:t,backdropAlpha:e}}setup(t){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||t.context.lightingModel,super.setup(t)}}const zu=ta(Ou);class ku extends Bu{static get type(){return"IrradianceNode"}constructor(t){super(),this.node=t}setup(t){t.context.irradiance.addAssign(this.node)}}let Vu,Gu;class Hu extends ds{static get type(){return"ScreenNode"}constructor(t){super(),this.scope=t,this.isViewportNode=!0}getNodeType(){return this.scope===Hu.VIEWPORT?"vec4":"vec2"}getUpdateType(){let t=rs;return this.scope!==Hu.SIZE&&this.scope!==Hu.VIEWPORT||(t=as),this.updateType=t,t}update({renderer:t}){const e=t.getRenderTarget();this.scope===Hu.VIEWPORT?null!==e?Gu.copy(e.viewport):(t.getViewport(Gu),Gu.multiplyScalar(t.getPixelRatio())):null!==e?(Vu.width=e.width,Vu.height=e.height):t.getDrawingBufferSize(Vu)}setup(){const t=this.scope;let e=null;return e=t===Hu.SIZE?Ua(Vu||(Vu=new Pt)):t===Hu.VIEWPORT?Ua(Gu||(Gu=new Zt)):ua(Xu.div(ju)),e}generate(t){if(this.scope===Hu.COORDINATE){let e=t.getFragCoord();if(t.isFlipY()){const i=t.getNodeProperties(ju).outputNode.build(t);e=`${t.getType("vec2")}( ${e}.x, ${i}.y - ${e}.y )`}return e}return super.generate(t)}}Hu.COORDINATE="coordinate",Hu.VIEWPORT="viewport",Hu.SIZE="size",Hu.UV="uv";const Wu=ea(Hu,Hu.UV),ju=ea(Hu,Hu.SIZE),Xu=ea(Hu,Hu.COORDINATE),$u=ea(Hu,Hu.VIEWPORT),qu=($u.zw,$u.xy,new Pt);class Yu extends Eh{static get type(){return"ViewportTextureNode"}constructor(t=Wu,e=null,i=null){null===i&&((i=new Yn).minFilter=b),super(i,t,e),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=ss}updateBefore(t){const e=t.renderer;e.getDrawingBufferSize(qu);const i=this.value;i.image.width===qu.width&&i.image.height===qu.height||(i.image.width=qu.width,i.image.height=qu.height,i.needsUpdate=!0);const n=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,e.copyFramebufferToTexture(i),i.generateMipmaps=n}clone(){const t=new this.constructor(this.uvNode,this.levelNode,this.value);return t.generateMipmaps=this.generateMipmaps,t}}const Ku=ta(Yu,null,null,{generateMipmaps:!0});let Zu=null;class Ju extends Yu{static get type(){return"ViewportDepthTextureNode"}constructor(t=Wu,e=null){null===Zu&&(Zu=new Kn),super(t,e,Zu)}}const Qu=ta(Ju);class td extends ds{static get type(){return"ViewportDepthNode"}constructor(t,e=null){super("float"),this.scope=t,this.valueNode=e,this.isViewportDepthNode=!0}generate(t){const{scope:e}=this;return e===td.DEPTH_BASE?t.getFragDepth():super.generate(t)}setup({camera:t}){const{scope:e}=this,i=this.valueNode;let n=null;if(e===td.DEPTH_BASE)null!==i&&(n=sd().assign(i));else if(e===td.DEPTH)n=t.isPerspectiveCamera?id(Hh.z,Rh,Ch):ed(Hh.z,Rh,Ch);else if(e===td.LINEAR_DEPTH)if(null!==i)if(t.isPerspectiveCamera){const t=nd(i,Rh,Ch);n=ed(t,Rh,Ch)}else n=i;else n=ed(Hh.z,Rh,Ch);return n}}td.DEPTH_BASE="depthBase",td.DEPTH="depth",td.LINEAR_DEPTH="linearDepth";const ed=(t,e,i)=>t.add(e).div(e.sub(i)),id=(t,e,i)=>e.add(t).mul(i).div(i.sub(e).mul(t)),nd=(t,e,i)=>e.mul(i).div(i.sub(e).mul(t).sub(i)),rd=(t,e,i)=>{e=e.max(1e-6).toVar();const n=Xo(t.div(e).add(1)),r=Xo(i.div(e).add(1));return n.div(r)},sd=ta(td,td.DEPTH_BASE),ad=ea(td,td.DEPTH);td.LINEAR_DEPTH;Qu(),ad.assign=t=>sd(t);class od extends ds{static get type(){return"ClippingNode"}constructor(t=od.DEFAULT){super(),this.scope=t}setup(t){super.setup(t);const e=t.clippingContext,{localClipIntersection:i,localClippingCount:n,globalClippingCount:r}=e,s=r+n,a=i?s-n:s;return this.scope===od.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(e.planes,s,a):this.setupDefault(e.planes,s,a)}setupAlphaToCoverage(t,e,i){return ia((()=>{const n=mc(t),r=Da("float","distanceToPlane"),s=Da("float","distanceToGradient"),a=Da("float","clipOpacity");let o;if(a.assign(1),Nu(i,(({i:t})=>{o=n.element(t),r.assign(Hh.dot(o.xyz).negate().add(o.w)),s.assign(r.fwidth().div(2)),a.mulAssign(Dl(s.negate(),s,r)),a.equal(0).discard()})),i<e){const t=Da("float","unionclipOpacity");t.assign(1),Nu({start:i,end:e},(({i:e})=>{o=n.element(e),r.assign(Hh.dot(o.xyz).negate().add(o.w)),s.assign(r.fwidth().div(2)),t.mulAssign(Dl(s.negate(),s,r).oneMinus())})),a.mulAssign(t.oneMinus())}Fa.a.mulAssign(a),Fa.a.equal(0).discard()}))()}setupDefault(t,e,i){return ia((()=>{const n=mc(t);let r;if(Nu(i,(({i:t})=>{r=n.element(t),Hh.dot(r.xyz).greaterThan(r.w).discard()})),i<e){const t=Da("bool","clipped");t.assign(!0),Nu({start:i,end:e},(({i:e})=>{r=n.element(e),t.assign(Hh.dot(r.xyz).greaterThan(r.w).and(t))})),t.discard()}}))()}}od.ALPHA_TO_COVERAGE="alphaToCoverage",od.DEFAULT="default";const ld=ia((([t])=>Jo(go(1e4,Qo(go(17,t.x).add(go(.1,t.y)))).mul(mo(.1,sl(Qo(go(13,t.y).add(t.x)))))))),hd=ia((([t])=>ld(ua(ld(t.xy),t.z)))),cd=ia((([t])=>{const e=xl(ol(cl(t.xyz)),ol(ul(t.xyz))).toVar("maxDeriv"),i=oa(1).div(oa(.05).mul(e)).toVar("pixScale"),n=ua(Wo(Yo(Xo(i))),Wo(Ko(Xo(i)))).toVar("pixScales"),r=ua(hd(Yo(n.x.mul(t.xyz))),hd(Yo(n.y.mul(t.xyz)))).toVar("alpha"),s=Jo(Xo(i)).toVar("lerpFactor"),a=mo(go(s.oneMinus(),r.x),go(s,r.y)).toVar("x"),o=yl(s,s.oneMinus()).toVar("a"),l=fa(a.mul(a).div(go(2,o).mul(fo(1,o))),a.sub(go(.5,o)).div(fo(1,o)),fo(1,fo(1,a).mul(fo(1,a)).div(go(2,o).mul(fo(1,o))))).toVar("cases"),h=a.lessThan(o.oneMinus()).select(a.lessThan(o).select(l.x,l.y),l.z);return Ul(h,1e-6,1)}));class ud extends Ai{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+Qr(this)}build(t){this.setup(t)}setupObserver(t){return new Yr(t)}setup(t){let e;t.context.setupNormal=()=>this.setupNormal(t),t.addStack(),t.stack.outputNode=this.vertexNode||this.setupPosition(t),null!==this.geometryNode&&(t.stack.outputNode=t.stack.outputNode.bypass(this.geometryNode)),t.addFlow("vertex",t.removeStack()),t.addStack();const i=this.setupClipping(t);if(!0===this.depthWrite&&this.setupDepth(t),null===this.fragmentNode){this.setupDiffuseColor(t),this.setupVariants(t);const n=this.setupLighting(t);null!==i&&t.stack.add(i);const r=xa(n,Fa.a).max(0);if(e=this.setupOutput(t,r),eo.assign(e),null!==this.outputNode&&(e=this.outputNode),null!==t.renderer.getRenderTarget()){const i=t.renderer.getMRT(),n=this.mrtNode;null!==i?(e=i,null!==n&&(e=i.merge(n))):null!==n&&(e=n)}}else{let i=this.fragmentNode;!0!==i.isOutputStructNode&&(i=xa(i)),e=this.setupOutput(t,i)}t.stack.outputNode=e,t.addFlow("fragment",t.removeStack()),t.monitor=this.setupObserver(t)}setupClipping(t){if(null===t.clippingContext)return null;const{globalClippingCount:e,localClippingCount:i}=t.clippingContext;let n=null;if(e||i){const e=t.renderer.samples;this.alphaToCoverage&&e>1?n=Zs(new od(od.ALPHA_TO_COVERAGE)):t.stack.add(Zs(new od))}return n}setupDepth(t){const{renderer:e,camera:i}=t;let n=this.depthNode;if(null===n){const t=e.getMRT();t&&t.has("depth")?n=t.get("depth"):!0===e.logarithmicDepthBuffer&&(n=i.isPerspectiveCamera?rd(yu().w,Rh,Ch):ed(Hh.z,Rh,Ch))}null!==n&&ad.assign(n).append()}setupPosition(t){const{object:e}=t,i=e.geometry;var n;if(t.addStack(),(i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&Du(e).append(),!0===e.isSkinnedMesh&&(n=e,Zs(new Ru(n,!0))).append(),this.displacementMap){const t=vc("displacementMap","texture"),e=vc("displacementScale","float"),i=vc("displacementBias","float");zh.addAssign(qh.normalize().mul(t.x.mul(e).add(i)))}e.isBatchedMesh&&wu(e).append(),e.instanceMatrix&&!0===e.instanceMatrix.isInstancedBufferAttribute&&Mu(e).append(),null!==this.positionNode&&zh.assign(this.positionNode);const r=yu();return t.context.vertex=t.removeStack(),t.context.mvp=r,r}setupDiffuseColor({object:t,geometry:e}){let i=this.colorNode?xa(this.colorNode):Fc;!0===this.vertexColors&&e.hasAttribute("color")&&(i=xa(i.xyz.mul(xh("color","vec3")),i.a)),t.instanceColor&&(i=Ba("vec3","vInstanceColor").mul(i)),t.isBatchedMesh&&t._colorsTexture&&(i=Ba("vec3","vBatchColor").mul(i)),Fa.assign(i);const n=this.opacityNode?oa(this.opacityNode):kc;if(Fa.a.assign(Fa.a.mul(n)),null!==this.alphaTestNode||this.alphaTest>0){const t=null!==this.alphaTestNode?oa(this.alphaTestNode):Bc;Fa.a.lessThanEqual(t).discard()}!0===this.alphaHash&&Fa.a.lessThan(cd(zh)).discard(),!1===this.transparent&&1===this.blending&&!1===this.alphaToCoverage&&Fa.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?fa(0):Fa.rgb}setupNormal(){return this.normalNode?fa(this.normalNode):qc}setupEnvironment(){let t=null;return this.envNode?t=this.envNode:this.envMap&&(t=this.envMap.isCubeTexture?vc("envMap","cubeTexture"):vc("envMap","texture")),t}setupLightMap(t){let e=null;return t.material.lightMap&&(e=new ku(mu)),e}setupLights(t){const e=[],i=this.setupEnvironment(t);i&&i.isLightingNode&&e.push(i);const n=this.setupLightMap(t);if(n&&n.isLightingNode&&e.push(n),null!==this.aoNode||t.material.aoMap){const t=null!==this.aoNode?this.aoNode:fu;e.push(new Fu(t))}let r=this.lightsNode||t.lightsNode;return e.length>0&&(r=t.renderer.lighting.createNode([...r.getLights(),...e])),r}setupLightingModel(){}setupLighting(t){const{material:e}=t,{backdropNode:i,backdropAlphaNode:n,emissiveNode:r}=this,s=!0===this.lights||null!==this.lightsNode?this.setupLights(t):null;let a=this.setupOutgoingLight(t);if(s&&s.getScope().hasLights){const e=this.setupLightingModel(t);a=zu(s,e,i,n)}else null!==i&&(a=fa(null!==n?Il(a,i,n):i));return(r&&!0===r.isNode||e.emissive&&!0===e.emissive.isColor)&&(Oa.assign(fa(r||zc)),a=a.add(Oa)),a}setupOutput(t,e){if(!0===this.fog){const i=t.fogNode;i&&(e=xa(i.mix(e.rgb,i.colorNode),e.a))}return e}setDefaultValues(t){for(const e in t){const i=t[e];void 0===this[e]&&(this[e]=i,i&&i.clone&&(this[e]=i.clone()))}const e=Object.getOwnPropertyDescriptors(t.constructor.prototype);for(const t in e)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,t)&&void 0!==e[t].get&&Object.defineProperty(this.constructor.prototype,t,e[t])}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{},nodes:{}});const i=Ai.prototype.toJSON.call(this,t),n=ts(this);i.inputNodes={};for(const{property:e,childNode:r}of n)i.inputNodes[e]=r.toJSON(t).uuid;function r(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(e){const e=r(t.textures),n=r(t.images),s=r(t.nodes);e.length>0&&(i.textures=e),n.length>0&&(i.images=n),s.length>0&&(i.nodes=s)}return i}copy(t){return this.lightsNode=t.lightsNode,this.envNode=t.envNode,this.colorNode=t.colorNode,this.normalNode=t.normalNode,this.opacityNode=t.opacityNode,this.backdropNode=t.backdropNode,this.backdropAlphaNode=t.backdropAlphaNode,this.alphaTestNode=t.alphaTestNode,this.positionNode=t.positionNode,this.geometryNode=t.geometryNode,this.depthNode=t.depthNode,this.shadowNode=t.shadowNode,this.shadowPositionNode=t.shadowPositionNode,this.outputNode=t.outputNode,this.mrtNode=t.mrtNode,this.fragmentNode=t.fragmentNode,this.vertexNode=t.vertexNode,super.copy(t)}}const dd=new Dn;class pd extends ud{static get type(){return"LineBasicNodeMaterial"}constructor(t){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(dd),this.setValues(t)}}const md=new or;class fd extends ud{static get type(){return"LineDashedNodeMaterial"}constructor(t){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(md),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(t)}setupVariants(){const t=this.offsetNode,e=this.dashScaleNode?oa(this.dashScaleNode):cu,i=this.dashSizeNode?oa(this.dashSizeNode):uu,n=this.dashSizeNode?oa(this.dashGapNode):du;io.assign(i),no.assign(n);const r=jl(xh("lineDistance").mul(e));(t?r.add(t):r).mod(io.add(no)).greaterThan(io).discard()}}const gd=new rr;class _d extends ud{static get type(){return"MeshNormalNodeMaterial"}constructor(t){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(gd),this.setValues(t)}setupDiffuseColor(){const t=this.opacityNode?oa(this.opacityNode):kc;Fa.assign(xa(Zs(Jh).mul(.5).add(.5),t))}}class yd extends fs{static get type(){return"EquirectUVNode"}constructor(t=Gh){super("vec2"),this.dirNode=t}setup(){const t=this.dirNode,e=t.z.atan2(t.x).mul(1/(2*Math.PI)).add(.5),i=t.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return ua(e,i)}}const xd=ta(yd);class vd extends xn{constructor(t=1,e={}){super(t,e),this.isCubeRenderTarget=!0}fromEquirectangularTexture(t,e){const i=e.minFilter,n=e.generateMipmaps;e.generateMipmaps=!0,this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const s=new ln(5,5,5),a=xd(Gh),o=new ud;o.colorNode=wh(e,a,0),o.side=1,o.blending=r;const l=new an(s,o),h=new bn;h.add(l),e.minFilter===b&&(e.minFilter=x);const c=new _n(1,10,this),u=t.getMRT();return t.setMRT(null),c.update(t,h),t.setMRT(u),e.minFilter=i,e.currentGenerateMipmaps=n,l.geometry.dispose(),l.material.dispose(),this}}const bd=new WeakMap;class Sd extends fs{static get type(){return"CubeMapNode"}constructor(t){super("vec3"),this.envNode=t,this._cubeTexture=null,this._cubeTextureNode=hc();const e=new yn;e.isRenderTargetTexture=!0,this._defaultTexture=e,this.updateBeforeType=as}updateBefore(t){const{renderer:e,material:i}=t,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const t=n.isTextureNode?n.value:i[n.property];if(t&&t.isTexture){const i=t.mapping;if(i===u||i===d){if(bd.has(t)){const e=bd.get(t);Md(e,t.mapping),this._cubeTexture=e}else{const i=t.image;if(function(t){return null!=t&&t.height>0}(i)){const n=new vd(i.height);n.fromEquirectangularTexture(e,t),Md(n.texture,t.mapping),this._cubeTexture=n.texture,bd.set(t,n.texture),t.addEventListener("dispose",Td)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(t){return this.updateBefore(t),this._cubeTextureNode}}function Td(t){const e=t.target;e.removeEventListener("dispose",Td);const i=bd.get(e);void 0!==i&&(bd.delete(e),i.dispose())}function Md(t,e){e===u?t.mapping=h:e===d&&(t.mapping=c)}const Ed=ta(Sd);class wd extends Bu{static get type(){return"BasicEnvironmentNode"}constructor(t=null){super(),this.envNode=t}setup(t){t.context.environment=Ed(this.envNode)}}class Ad extends Bu{static get type(){return"BasicLightMapNode"}constructor(t=null){super(),this.lightMapNode=t}setup(t){const e=oa(1/Math.PI);t.context.irradianceLightMap=this.lightMapNode.mul(e)}}class Rd{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Cd extends Rd{constructor(){super()}indirect(t,e,i){const n=t.ambientOcclusion,r=t.reflectedLight,s=i.context.irradianceLightMap;r.indirectDiffuse.assign(xa(0)),s?r.indirectDiffuse.addAssign(s):r.indirectDiffuse.addAssign(xa(1,1,1,0)),r.indirectDiffuse.mulAssign(n),r.indirectDiffuse.mulAssign(Fa.rgb)}finish(t,e,i){const n=i.material,r=t.outgoingLight,s=i.context.environment;if(s)switch(n.combine){case 0:r.rgb.assign(Il(r.rgb,r.rgb.mul(s.rgb),Wc.mul(jc)));break;case 1:r.rgb.assign(Il(r.rgb,s.rgb,Wc.mul(jc)));break;case 2:r.rgb.addAssign(s.rgb.mul(Wc.mul(jc)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",n.combine)}}}const Nd=new Ri;class Pd extends ud{static get type(){return"MeshBasicNodeMaterial"}constructor(t){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Nd),this.setValues(t)}setupNormal(){return Kh}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new wd(e):null}setupLightMap(t){let e=null;return t.material.lightMap&&(e=new Ad(mu)),e}setupOutgoingLight(){return Fa.rgb}setupLightingModel(){return new Cd}}const Id=ia((({f0:t,f90:e,dotVH:i})=>{const n=i.mul(-5.55473).sub(6.98316).mul(i).exp2();return t.mul(n.oneMinus()).add(e.mul(n))})),Ud=ia((t=>t.diffuseColor.mul(1/Math.PI))),Ld=ia((({dotNH:t})=>to.mul(oa(.5)).add(1).mul(oa(1/Math.PI)).mul(t.pow(to)))),Dd=ia((({lightDirection:t})=>{const e=t.add(Wh).normalize(),i=Jh.dot(e).clamp(),n=Wh.dot(e).clamp(),r=Id({f0:Ja,f90:1,dotVH:n}),s=oa(.25),a=Ld({dotNH:i});return r.mul(s).mul(a)}));class Bd extends Cd{constructor(t=!0){super(),this.specular=t}direct({lightDirection:t,lightColor:e,reflectedLight:i}){const n=Jh.dot(t).clamp().mul(e);i.directDiffuse.addAssign(n.mul(Ud({diffuseColor:Fa.rgb}))),!0===this.specular&&i.directSpecular.addAssign(n.mul(Dd({lightDirection:t})).mul(Wc))}indirect({ambientOcclusion:t,irradiance:e,reflectedLight:i}){i.indirectDiffuse.addAssign(e.mul(Ud({diffuseColor:Fa}))),i.indirectDiffuse.mulAssign(t)}}const Fd=new sr;class Od extends ud{static get type(){return"MeshLambertNodeMaterial"}constructor(t){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Fd),this.setValues(t)}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new wd(e):null}setupLightingModel(){return new Bd(!1)}}const zd=new ir;class kd extends ud{static get type(){return"MeshPhongNodeMaterial"}constructor(t){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(zd),this.setValues(t)}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new wd(e):null}setupLightingModel(){return new Bd}setupVariants(){const t=(this.shininessNode?oa(this.shininessNode):Oc).max(1e-4);to.assign(t);const e=this.specularNode||Vc;Ja.assign(e)}copy(t){return this.shininessNode=t.shininessNode,this.specularNode=t.specularNode,super.copy(t)}}const Vd=ia((t=>{if(!1===t.geometry.hasAttribute("normal"))return oa(0);const e=Kh.dFdx().abs().max(Kh.dFdy().abs());return e.x.max(e.y).max(e.z)})),Gd=ia((t=>{const{roughness:e}=t,i=Vd();let n=e.max(.0525);return n=n.add(i),n=n.min(1),n})),Hd=ia((({alpha:t,dotNL:e,dotNV:i})=>{const n=t.pow2(),r=e.mul(n.add(n.oneMinus().mul(i.pow2())).sqrt()),s=i.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return _o(.5,r.add(s).max(Bo))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Wd=ia((({alphaT:t,alphaB:e,dotTV:i,dotBV:n,dotTL:r,dotBL:s,dotNV:a,dotNL:o})=>{const l=o.mul(fa(t.mul(i),e.mul(n),a).length()),h=a.mul(fa(t.mul(r),e.mul(s),o).length());return _o(.5,l.add(h)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),jd=ia((({alpha:t,dotNH:e})=>{const i=t.pow2(),n=e.pow2().mul(i.oneMinus()).oneMinus();return i.div(n.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Xd=oa(1/Math.PI),$d=ia((({alphaT:t,alphaB:e,dotNH:i,dotTH:n,dotBH:r})=>{const s=t.mul(e),a=fa(e.mul(n),t.mul(r),s.mul(i)),o=a.dot(a),l=s.div(o);return Xd.mul(s.mul(l.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),qd=ia((t=>{const{lightDirection:e,f0:i,f90:n,roughness:r,f:s,USE_IRIDESCENCE:a,USE_ANISOTROPY:o}=t,l=t.normalView||Jh,h=r.pow2(),c=e.add(Wh).normalize(),u=l.dot(e).clamp(),d=l.dot(Wh).clamp(),p=l.dot(c).clamp(),m=Wh.dot(c).clamp();let f,g,_=Id({f0:i,f90:n,dotVH:m});if(Ys(a)&&(_=ja.mix(_,s)),Ys(o)){const t=Ka.dot(e),i=Ka.dot(Wh),n=Ka.dot(c),r=Za.dot(e),s=Za.dot(Wh),a=Za.dot(c);f=Wd({alphaT:qa,alphaB:h,dotTV:i,dotBV:s,dotTL:t,dotBL:r,dotNV:d,dotNL:u}),g=$d({alphaT:qa,alphaB:h,dotNH:p,dotTH:n,dotBH:a})}else f=Hd({alpha:h,dotNL:u,dotNV:d}),g=jd({alpha:h,dotNH:p});return _.mul(f).mul(g)})),Yd=ia((({roughness:t,dotNV:e})=>{const i=xa(-1,-.0275,-.572,.022),n=xa(1,.0425,1.04,-.04),r=t.mul(i).add(n),s=r.x.mul(r.x).min(e.mul(-9.28).exp2()).mul(r.x).add(r.y);return ua(-1.04,1.04).mul(s).add(r.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Kd=ia((t=>{const{dotNV:e,specularColor:i,specularF90:n,roughness:r}=t,s=Yd({dotNV:e,roughness:r});return i.mul(s.x).add(n.mul(s.y))})),Zd=ia((({f:t,f90:e,dotVH:i})=>{const n=i.oneMinus().saturate(),r=n.mul(n),s=n.mul(r,r).clamp(0,.9999);return t.sub(fa(e).mul(s)).div(s.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),Jd=ia((({roughness:t,dotNH:e})=>{const i=t.pow2(),n=oa(1).div(i),r=e.pow2().oneMinus().max(.0078125);return oa(2).add(n).mul(r.pow(n.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),Qd=ia((({dotNV:t,dotNL:e})=>oa(1).div(oa(4).mul(e.add(t).sub(e.mul(t)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),tp=ia((({lightDirection:t})=>{const e=t.add(Wh).normalize(),i=Jh.dot(t).clamp(),n=Jh.dot(Wh).clamp(),r=Jh.dot(e).clamp(),s=Jd({roughness:Wa,dotNH:r}),a=Qd({dotNV:n,dotNL:i});return Ha.mul(s).mul(a)})),ep=ia((({N:t,V:e,roughness:i})=>{const n=t.dot(e).saturate(),r=ua(i,n.oneMinus().sqrt());return r.assign(r.mul(.984375).add(.0078125)),r})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),ip=ia((({f:t})=>{const e=t.length();return xl(e.mul(e).add(t.z).div(e.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),np=ia((({v1:t,v2:e})=>{const i=t.dot(e),n=i.abs().toVar(),r=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),s=n.add(4.1616724).mul(n).add(3.417594).toVar(),a=r.div(s),o=i.greaterThan(0).select(a,xl(i.mul(i).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return t.cross(e).mul(o)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),rp=ia((({N:t,V:e,P:i,mInv:n,p0:r,p1:s,p2:a,p3:o})=>{const l=s.sub(r).toVar(),h=o.sub(r).toVar(),c=l.cross(h),u=fa().toVar();return sa(c.dot(i.sub(r)).greaterThanEqual(0),(()=>{const l=e.sub(t.mul(e.dot(t))).normalize(),h=t.cross(l).negate(),c=n.mul(Ma(l,h,t).transpose()).toVar(),d=c.mul(r.sub(i)).normalize().toVar(),p=c.mul(s.sub(i)).normalize().toVar(),m=c.mul(a.sub(i)).normalize().toVar(),f=c.mul(o.sub(i)).normalize().toVar(),g=fa(0).toVar();g.addAssign(np({v1:d,v2:p})),g.addAssign(np({v1:p,v2:m})),g.addAssign(np({v1:m,v2:f})),g.addAssign(np({v1:f,v2:d})),u.assign(fa(ip({f:g})))})),u})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),sp=1/6,ap=t=>go(sp,go(t,go(t,t.negate().add(3)).sub(3)).add(1)),op=t=>go(sp,go(t,go(t,go(3,t).sub(6))).add(4)),lp=t=>go(sp,go(t,go(t,go(-3,t).add(3)).add(3)).add(1)),hp=t=>go(sp,Al(t,3)),cp=t=>ap(t).add(op(t)),up=t=>lp(t).add(hp(t)),dp=t=>mo(-1,op(t).div(ap(t).add(op(t)))),pp=t=>mo(1,hp(t).div(lp(t).add(hp(t)))),mp=(t,e,i)=>{const n=t.uvNode,r=go(n,e.zw).add(.5),s=Yo(r),a=Jo(r),o=cp(a.x),l=up(a.x),h=dp(a.x),c=pp(a.x),u=dp(a.y),d=pp(a.y),p=ua(s.x.add(h),s.y.add(u)).sub(.5).mul(e.xy),m=ua(s.x.add(c),s.y.add(u)).sub(.5).mul(e.xy),f=ua(s.x.add(h),s.y.add(d)).sub(.5).mul(e.xy),g=ua(s.x.add(c),s.y.add(d)).sub(.5).mul(e.xy),_=cp(a.y).mul(mo(o.mul(t.uv(p).level(i)),l.mul(t.uv(m).level(i)))),y=up(a.y).mul(mo(o.mul(t.uv(f).level(i)),l.mul(t.uv(g).level(i))));return _.add(y)},fp=ia((([t,e=oa(3)])=>{const i=ua(t.size(la(e))),n=ua(t.size(la(e.add(1)))),r=_o(1,i),s=_o(1,n),a=mp(t,xa(r,i),Yo(e)),o=mp(t,xa(s,n),Ko(e));return Jo(e).mix(a,o)})),gp=ia((([t,e,i,n,r])=>{const s=fa(Ll(e.negate(),Zo(t),_o(1,n))),a=fa(ol(r[0].xyz),ol(r[1].xyz),ol(r[2].xyz));return Zo(s).mul(i.mul(a))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),_p=ia((([t,e])=>t.mul(Ul(e.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),yp=Ku(),xp=Ku(),vp=ia((([t,e,i],{material:n})=>{const r=(1==n.side?yp:xp).uv(t),s=Xo(ju.x).mul(_p(e,i));return fp(r,s)})),bp=ia((([t,e,i])=>(sa(i.notEqual(0),(()=>{const n=jo(e).negate().div(i);return Ho(n.negate().mul(t))})),fa(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Sp=ia((([t,e,i,n,r,s,a,o,l,h,c,u,d,p,m])=>{let f,g;if(m){f=xa().toVar(),g=fa().toVar();const r=c.sub(1).mul(m.mul(.025)),s=fa(c.sub(r),c,c.add(r));Nu({start:0,end:3},(({i:r})=>{const c=s.element(r),m=gp(t,e,u,c,o),_=a.add(m),y=h.mul(l.mul(xa(_,1))),x=ua(y.xy.div(y.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(ua(x.x,x.y.oneMinus()));const v=vp(x,i,c);f.element(r).assign(v.element(r)),f.a.addAssign(v.a),g.element(r).assign(n.element(r).mul(bp(ol(m),d,p).element(r)))})),f.a.divAssign(3)}else{const r=gp(t,e,u,c,o),s=a.add(r),m=h.mul(l.mul(xa(s,1))),_=ua(m.xy.div(m.w)).toVar();_.addAssign(1),_.divAssign(2),_.assign(ua(_.x,_.y.oneMinus())),f=vp(_,i,c),g=n.mul(bp(ol(r),d,p))}const _=g.rgb.mul(f.rgb),y=t.dot(e).clamp(),x=fa(Kd({dotNV:y,specularColor:r,specularF90:s,roughness:i})),v=g.r.add(g.g,g.b).div(3);return xa(x.oneMinus().mul(_),f.a.oneMinus().mul(v).oneMinus())})),Tp=Ma(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),Mp=(t,e)=>t.sub(e).div(t.add(e)).pow2(),Ep=ia((({outsideIOR:t,eta2:e,cosTheta1:i,thinFilmThickness:n,baseF0:r})=>{const s=Il(t,e,Dl(0,.03,n)),a=t.div(s).pow2().mul(i.pow2().oneMinus()).oneMinus();sa(a.lessThan(0),(()=>fa(1)));const o=a.sqrt(),l=Mp(s,t),h=Id({f0:l,f90:1,dotVH:i}),c=h.oneMinus(),u=s.lessThan(t).select(Math.PI,0),d=oa(Math.PI).sub(u),p=(t=>{const e=t.sqrt();return fa(1).add(e).div(fa(1).sub(e))})(r.clamp(0,.9999)),m=Mp(p,s.toVec3()),f=Id({f0:m,f90:1,dotVH:o}),g=fa(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),_=s.mul(n,o,2),y=fa(d).add(g),x=h.mul(f).clamp(1e-5,.9999),v=x.sqrt(),b=c.pow2().mul(f).div(fa(1).sub(x)),S=h.add(b).toVar(),T=b.sub(c).toVar();return Nu({start:1,end:2,condition:"<=",name:"m"},(({m:t})=>{T.mulAssign(v);const e=((t,e)=>{const i=t.mul(2*Math.PI*1e-9),n=fa(54856e-17,44201e-17,52481e-17),r=fa(1681e3,1795300,2208400),s=fa(43278e5,93046e5,66121e5),a=oa(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(i.mul(2239900).add(e.x).cos()).mul(i.pow2().mul(-45282e5).exp());let o=n.mul(s.mul(2*Math.PI).sqrt()).mul(r.mul(i).add(e).cos()).mul(i.pow2().negate().mul(s).exp());return o=fa(o.x.add(a),o.y,o.z).div(1.0685e-7),Tp.mul(o)})(oa(t).mul(_),oa(t).mul(y)).mul(2);S.addAssign(T.mul(e))})),S.max(fa(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),wp=ia((({normal:t,viewDir:e,roughness:i})=>{const n=t.dot(e).saturate(),r=i.pow2(),s=zl(i.lessThan(.25),oa(-339.2).mul(r).add(oa(161.4).mul(i)).sub(25.9),oa(-8.48).mul(r).add(oa(14.3).mul(i)).sub(9.95)),a=zl(i.lessThan(.25),oa(44).mul(r).sub(oa(23.7).mul(i)).add(3.26),oa(1.97).mul(r).sub(oa(3.27).mul(i)).add(.72));return zl(i.lessThan(.25),0,oa(.1).mul(i).sub(.025)).add(s.mul(n).add(a).exp()).mul(1/Math.PI).saturate()})),Ap=fa(.04),Rp=oa(1);class Cp extends Rd{constructor(t=!1,e=!1,i=!1,n=!1,r=!1,s=!1){super(),this.clearcoat=t,this.sheen=e,this.iridescence=i,this.anisotropy=n,this.transmission=r,this.dispersion=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(t){if(!0===this.clearcoat&&(this.clearcoatRadiance=fa().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=fa().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=fa().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=fa().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=fa().toVar("sheenSpecularIndirect")),!0===this.iridescence){const t=Jh.dot(Wh).clamp();this.iridescenceFresnel=Ep({outsideIOR:oa(1),eta2:Xa,cosTheta1:t,thinFilmThickness:$a,baseF0:Ja}),this.iridescenceF0=Zd({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(!0===this.transmission){const e=Vh,i=Ih.sub(Vh).normalize(),n=Qh;t.backdrop=Sp(n,i,za,Fa,Ja,Qa,e,Dh,Ph,Nh,ro,ao,lo,oo,this.dispersion?ho:null),t.backdropAlpha=so,Fa.a.mulAssign(Il(1,t.backdrop.a,so))}}computeMultiscattering(t,e,i){const n=Jh.dot(Wh).clamp(),r=Yd({roughness:za,dotNV:n}),s=(this.iridescenceF0?ja.mix(Ja,this.iridescenceF0):Ja).mul(r.x).add(i.mul(r.y)),a=r.x.add(r.y).oneMinus(),o=Ja.add(Ja.oneMinus().mul(.047619)),l=s.mul(o).div(a.mul(o).oneMinus());t.addAssign(s),e.addAssign(l.mul(a))}direct({lightDirection:t,lightColor:e,reflectedLight:i}){const n=Jh.dot(t).clamp().mul(e);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(n.mul(tp({lightDirection:t}))),!0===this.clearcoat){const i=tc.dot(t).clamp().mul(e);this.clearcoatSpecularDirect.addAssign(i.mul(qd({lightDirection:t,f0:Ap,f90:Rp,roughness:Ga,normalView:tc})))}i.directDiffuse.addAssign(n.mul(Ud({diffuseColor:Fa.rgb}))),i.directSpecular.addAssign(n.mul(qd({lightDirection:t,f0:Ja,f90:1,roughness:za,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:t,lightPosition:e,halfWidth:i,halfHeight:n,reflectedLight:r,ltc_1:s,ltc_2:a}){const o=e.add(i).sub(n),l=e.sub(i).sub(n),h=e.sub(i).add(n),c=e.add(i).add(n),u=Jh,d=Wh,p=Hh.toVar(),m=ep({N:u,V:d,roughness:za}),f=s.uv(m).toVar(),g=a.uv(m).toVar(),_=Ma(fa(f.x,0,f.y),fa(0,1,0),fa(f.z,0,f.w)).toVar(),y=Ja.mul(g.x).add(Ja.oneMinus().mul(g.y)).toVar();r.directSpecular.addAssign(t.mul(y).mul(rp({N:u,V:d,P:p,mInv:_,p0:o,p1:l,p2:h,p3:c}))),r.directDiffuse.addAssign(t.mul(Fa).mul(rp({N:u,V:d,P:p,mInv:Ma(1,0,0,0,1,0,0,0,1),p0:o,p1:l,p2:h,p3:c})))}indirect(t,e,i){this.indirectDiffuse(t,e,i),this.indirectSpecular(t,e,i),this.ambientOcclusion(t,e,i)}indirectDiffuse({irradiance:t,reflectedLight:e}){e.indirectDiffuse.addAssign(t.mul(Ud({diffuseColor:Fa})))}indirectSpecular({radiance:t,iblIrradiance:e,reflectedLight:i}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(e.mul(Ha,wp({normal:Jh,viewDir:Wh,roughness:Wa}))),!0===this.clearcoat){const t=tc.dot(Wh).clamp(),e=Kd({dotNV:t,specularColor:Ap,specularF90:Rp,roughness:Ga});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(e))}const n=fa().toVar("singleScattering"),r=fa().toVar("multiScattering"),s=e.mul(1/Math.PI);this.computeMultiscattering(n,r,Qa);const a=n.add(r),o=Fa.mul(a.r.max(a.g).max(a.b).oneMinus());i.indirectSpecular.addAssign(t.mul(n)),i.indirectSpecular.addAssign(r.mul(s)),i.indirectDiffuse.addAssign(o.mul(s))}ambientOcclusion({ambientOcclusion:t,reflectedLight:e}){const i=Jh.dot(Wh).clamp().add(t),n=za.mul(-16).oneMinus().negate().exp2(),r=t.sub(i.pow(n).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(t),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(t),e.indirectDiffuse.mulAssign(t),e.indirectSpecular.mulAssign(r)}finish(t){const{outgoingLight:e}=t;if(!0===this.clearcoat){const t=tc.dot(Wh).clamp(),i=Id({dotVH:t,f0:Ap,f90:Rp}),n=e.mul(Va.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(Va));e.assign(n)}if(!0===this.sheen){const t=Ha.r.max(Ha.g).max(Ha.b).mul(.157).oneMinus(),i=e.mul(t).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);e.assign(i)}}}const Np=oa(1),Pp=oa(-2),Ip=oa(.8),Up=oa(-1),Lp=oa(.4),Dp=oa(2),Bp=oa(.305),Fp=oa(3),Op=oa(.21),zp=oa(4),kp=oa(4),Vp=oa(16),Gp=ia((([t])=>{const e=fa(sl(t)).toVar(),i=oa(-1).toVar();return sa(e.x.greaterThan(e.z),(()=>{sa(e.x.greaterThan(e.y),(()=>{i.assign(zl(t.x.greaterThan(0),0,3))})).Else((()=>{i.assign(zl(t.y.greaterThan(0),1,4))}))})).Else((()=>{sa(e.z.greaterThan(e.y),(()=>{i.assign(zl(t.z.greaterThan(0),2,5))})).Else((()=>{i.assign(zl(t.y.greaterThan(0),1,4))}))})),i})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Hp=ia((([t,e])=>{const i=ua().toVar();return sa(e.equal(0),(()=>{i.assign(ua(t.z,t.y).div(sl(t.x)))})).ElseIf(e.equal(1),(()=>{i.assign(ua(t.x.negate(),t.z.negate()).div(sl(t.y)))})).ElseIf(e.equal(2),(()=>{i.assign(ua(t.x.negate(),t.y).div(sl(t.z)))})).ElseIf(e.equal(3),(()=>{i.assign(ua(t.z.negate(),t.y).div(sl(t.x)))})).ElseIf(e.equal(4),(()=>{i.assign(ua(t.x.negate(),t.z).div(sl(t.y)))})).Else((()=>{i.assign(ua(t.x,t.y).div(sl(t.z)))})),go(.5,i.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),Wp=ia((([t])=>{const e=oa(0).toVar();return sa(t.greaterThanEqual(Ip),(()=>{e.assign(Np.sub(t).mul(Up.sub(Pp)).div(Np.sub(Ip)).add(Pp))})).ElseIf(t.greaterThanEqual(Lp),(()=>{e.assign(Ip.sub(t).mul(Dp.sub(Up)).div(Ip.sub(Lp)).add(Up))})).ElseIf(t.greaterThanEqual(Bp),(()=>{e.assign(Lp.sub(t).mul(Fp.sub(Dp)).div(Lp.sub(Bp)).add(Dp))})).ElseIf(t.greaterThanEqual(Op),(()=>{e.assign(Bp.sub(t).mul(zp.sub(Fp)).div(Bp.sub(Op)).add(Fp))})).Else((()=>{e.assign(oa(-2).mul(Xo(go(1.16,t))))})),e})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),jp=ia((([t,e])=>{const i=t.toVar();i.assign(go(2,i).sub(1));const n=fa(i,1).toVar();return sa(e.equal(0),(()=>{n.assign(n.zyx)})).ElseIf(e.equal(1),(()=>{n.assign(n.xzy),n.xz.mulAssign(-1)})).ElseIf(e.equal(2),(()=>{n.x.mulAssign(-1)})).ElseIf(e.equal(3),(()=>{n.assign(n.zyx),n.xz.mulAssign(-1)})).ElseIf(e.equal(4),(()=>{n.assign(n.xzy),n.xy.mulAssign(-1)})).ElseIf(e.equal(5),(()=>{n.z.mulAssign(-1)})),n})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Xp=ia((([t,e,i,n,r,s])=>{const a=oa(i),o=fa(e),l=Ul(Wp(a),Pp,s),h=Jo(l),c=Yo(l),u=fa($p(t,o,c,n,r,s)).toVar();return sa(h.notEqual(0),(()=>{const e=fa($p(t,o,c.add(1),n,r,s)).toVar();u.assign(Il(u,e,h))})),u})),$p=ia((([t,e,i,n,r,s])=>{const a=oa(i).toVar(),o=fa(e),l=oa(Gp(o)).toVar(),h=oa(xl(kp.sub(a),0)).toVar();a.assign(xl(a,kp));const c=oa(Wo(a)).toVar(),u=ua(Hp(o,l).mul(c.sub(2)).add(1)).toVar();return sa(l.greaterThan(2),(()=>{u.y.addAssign(c),l.subAssign(3)})),u.x.addAssign(l.mul(c)),u.x.addAssign(h.mul(go(3,Vp))),u.y.addAssign(go(4,Wo(s).sub(c))),u.x.mulAssign(n),u.y.mulAssign(r),t.uv(u).grad(ua(),ua())})),qp=ia((({envMap:t,mipInt:e,outputDirection:i,theta:n,axis:r,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:o})=>{const l=tl(n),h=i.mul(l).add(r.cross(i).mul(Qo(n))).add(r.mul(r.dot(i).mul(l.oneMinus())));return $p(t,h,e,s,a,o)})),Yp=ia((({n:t,latitudinal:e,poleAxis:i,outputDirection:n,weights:r,samples:s,dTheta:a,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:u})=>{const d=fa(zl(e,i,wl(i,n))).toVar();sa(Oo(d.equals(fa(0))),(()=>{d.assign(fa(n.z,0,n.x.negate()))})),d.assign(Zo(d));const p=fa().toVar();return p.addAssign(r.element(la(0)).mul(qp({theta:0,axis:d,outputDirection:n,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:u}))),Nu({start:la(1),end:t},(({i:t})=>{sa(t.greaterThanEqual(s),(()=>{gh("break").append()}));const e=oa(a.mul(oa(t))).toVar();p.addAssign(r.element(t).mul(qp({theta:e.mul(-1),axis:d,outputDirection:n,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:u}))),p.addAssign(r.element(t).mul(qp({theta:e,axis:d,outputDirection:n,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:u})))})),xa(p,1)}));let Kp=null;const Zp=new WeakMap;class Jp extends fs{static get type(){return"PMREMNode"}constructor(t,e=null,i=null){super("vec3"),this._value=t,this._pmrem=null,this.uvNode=e,this.levelNode=i,this._generator=null;const n=new Kt;n.isRenderTargetTexture=!0,this._texture=wh(n),this._width=Ua(0),this._height=Ua(0),this._maxMip=Ua(0),this.updateBeforeType=as}set value(t){this._value=t,this._pmrem=null}get value(){return this._value}updateFromTexture(t){const e=function(t){const e=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:i,maxMip:e}}(t.image.height);this._texture.value=t,this._width.value=e.texelWidth,this._height.value=e.texelHeight,this._maxMip.value=e.maxMip}updateBefore(){let t=this._pmrem;const e=t?t.pmremVersion:-1,i=this._value;e!==i.pmremVersion&&(t=!0===i.isPMREMTexture?i:function(t){let e=Zp.get(t);if((void 0!==e?e.pmremVersion:-1)!==t.pmremVersion){const i=t.image;if(t.isCubeTexture){if(!function(t){if(null==t)return!1;let e=0;for(let i=0;i<6;i++)void 0!==t[i]&&e++;return 6===e}(i))return null;e=Kp.fromCubemap(t,e)}else{if(!function(t){return null!=t&&t.height>0}(i))return null;e=Kp.fromEquirectangular(t,e)}e.pmremVersion=t.pmremVersion,Zp.set(t,e)}return e.texture}(i),null!==t&&(this._pmrem=t,this.updateFromTexture(t)))}setup(t){null===Kp&&(Kp=t.createPMREMGenerator()),this.updateBefore(t);let e=this.uvNode;null===e&&t.context.getUV&&(e=t.context.getUV(this));const i=this.value;t.renderer.coordinateSystem===_t&&!0!==i.isPMREMTexture&&!0===i.isRenderTargetTexture&&(e=fa(e.x.negate(),e.yz));let n=this.levelNode;return null===n&&t.context.getTextureLevel&&(n=t.context.getTextureLevel(this)),Xp(this._texture,e,n,this._width,this._height,this._maxMip)}}const Qp=ta(Jp),tm=new WeakMap;class em extends Bu{static get type(){return"EnvironmentNode"}constructor(t=null){super(),this.envNode=t}setup(t){const{material:e}=t;let i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const t=i.isTextureNode?i.value:e[i.property];let n=tm.get(t);void 0===n&&(n=Qp(t),tm.set(t,n)),i=n}const n=e.envMap?_c("envMapIntensity","float",t.material):_c("environmentIntensity","float",t.scene),r=!0===e.useAnisotropy||e.anisotropy>0?Ec:Jh,s=i.context(im(za,r)).mul(n),a=i.context(nm(Qh)).mul(Math.PI).mul(n),o=ch(s),l=ch(a);t.context.radiance.addAssign(o),t.context.iblIrradiance.addAssign(l);const h=t.context.lightingModel.clearcoatRadiance;if(h){const t=i.context(im(Ga,tc)).mul(n),e=ch(t);h.addAssign(e)}}}const im=(t,e)=>{let i=null;return{getUV:()=>(null===i&&(i=Wh.negate().reflect(e),i=t.mul(t).mix(i,e).normalize(),i=i.transformDirection(Ph)),i),getTextureLevel:()=>t}},nm=t=>({getUV:()=>t,getTextureLevel:()=>oa(1)}),rm=new tr;class sm extends ud{static get type(){return"MeshStandardNodeMaterial"}constructor(t){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(rm),this.setValues(t)}setupEnvironment(t){let e=super.setupEnvironment(t);return null===e&&t.environmentNode&&(e=t.environmentNode),e?new em(e):null}setupLightingModel(){return new Cp}setupSpecular(){const t=Il(fa(.04),Fa.rgb,ka);Ja.assign(t),Qa.assign(1)}setupVariants(){const t=this.metalnessNode?oa(this.metalnessNode):$c;ka.assign(t);let e=this.roughnessNode?oa(this.roughnessNode):Xc;e=Gd({roughness:e}),za.assign(e),this.setupSpecular(),Fa.assign(xa(Fa.rgb.mul(t.oneMinus()),Fa.a))}copy(t){return this.emissiveNode=t.emissiveNode,this.metalnessNode=t.metalnessNode,this.roughnessNode=t.roughnessNode,super.copy(t)}}const am=new er;class om extends sm{static get type(){return"MeshPhysicalNodeMaterial"}constructor(t){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(am),this.setValues(t)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const t=this.iorNode?oa(this.iorNode):ou;ro.assign(t),Ja.assign(Il(yl(Rl(ro.sub(1).div(ro.add(1))).mul(Hc),fa(1)).mul(Gc),Fa.rgb,ka)),Qa.assign(Il(Gc,1,ka))}setupLightingModel(){return new Cp(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(t){if(super.setupVariants(t),this.useClearcoat){const t=this.clearcoatNode?oa(this.clearcoatNode):Yc,e=this.clearcoatRoughnessNode?oa(this.clearcoatRoughnessNode):Kc;Va.assign(t),Ga.assign(Gd({roughness:e}))}if(this.useSheen){const t=this.sheenNode?fa(this.sheenNode):Qc,e=this.sheenRoughnessNode?oa(this.sheenRoughnessNode):tu;Ha.assign(t),Wa.assign(e)}if(this.useIridescence){const t=this.iridescenceNode?oa(this.iridescenceNode):iu,e=this.iridescenceIORNode?oa(this.iridescenceIORNode):nu,i=this.iridescenceThicknessNode?oa(this.iridescenceThicknessNode):ru;ja.assign(t),Xa.assign(e),$a.assign(i)}if(this.useAnisotropy){const t=(this.anisotropyNode?ua(this.anisotropyNode):eu).toVar();Ya.assign(t.length()),sa(Ya.equal(0),(()=>{t.assign(ua(1,0))})).Else((()=>{t.divAssign(ua(Ya)),Ya.assign(Ya.saturate())})),qa.assign(Ya.pow2().mix(za.pow2(),1)),Ka.assign(Mc[0].mul(t.x).add(Mc[1].mul(t.y))),Za.assign(Mc[1].mul(t.x).sub(Mc[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?oa(this.transmissionNode):su,e=this.thicknessNode?oa(this.thicknessNode):au,i=this.attenuationDistanceNode?oa(this.attenuationDistanceNode):lu,n=this.attenuationColorNode?fa(this.attenuationColorNode):hu;if(so.assign(t),ao.assign(e),oo.assign(i),lo.assign(n),this.useDispersion){const t=this.dispersionNode?oa(this.dispersionNode):pu;ho.assign(t)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?fa(this.clearcoatNormalNode):Zc}setup(t){t.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(t),super.setup(t)}copy(t){return this.clearcoatNode=t.clearcoatNode,this.clearcoatRoughnessNode=t.clearcoatRoughnessNode,this.clearcoatNormalNode=t.clearcoatNormalNode,this.sheenNode=t.sheenNode,this.sheenRoughnessNode=t.sheenRoughnessNode,this.iridescenceNode=t.iridescenceNode,this.iridescenceIORNode=t.iridescenceIORNode,this.iridescenceThicknessNode=t.iridescenceThicknessNode,this.specularIntensityNode=t.specularIntensityNode,this.specularColorNode=t.specularColorNode,this.transmissionNode=t.transmissionNode,this.thicknessNode=t.thicknessNode,this.attenuationDistanceNode=t.attenuationDistanceNode,this.attenuationColorNode=t.attenuationColorNode,this.dispersionNode=t.dispersionNode,this.anisotropyNode=t.anisotropyNode,super.copy(t)}}const lm=ia((({normal:t,lightDirection:e,builder:i})=>{const n=t.dot(e),r=ua(n.mul(.5).add(.5),0);if(i.material.gradientMap){const t=vc("gradientMap","texture").context({getUV:()=>r});return fa(t.r)}{const t=r.fwidth().mul(.5);return Il(fa(.7),fa(1),Dl(oa(.7).sub(t.x),oa(.7).add(t.x),r.x))}}));class hm extends Rd{direct({lightDirection:t,lightColor:e,reflectedLight:i},n,r){const s=lm({normal:$h,lightDirection:t,builder:r}).mul(e);i.directDiffuse.addAssign(s.mul(Ud({diffuseColor:Fa.rgb})))}indirect({ambientOcclusion:t,irradiance:e,reflectedLight:i}){i.indirectDiffuse.addAssign(e.mul(Ud({diffuseColor:Fa}))),i.indirectDiffuse.mulAssign(t)}}const cm=new nr;class um extends ud{static get type(){return"MeshToonNodeMaterial"}constructor(t){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(cm),this.setValues(t)}setupLightingModel(){return new hm}}class dm extends fs{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const t=fa(Wh.z,0,Wh.x.negate()).normalize(),e=Wh.cross(t);return ua(t.dot(Jh),e.dot(Jh)).mul(.495).add(.5)}}const pm=ea(dm),mm=new ar;class fm extends ud{static get type(){return"MeshMatcapNodeMaterial"}constructor(t){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(mm),this.setValues(t)}setupVariants(t){const e=pm;let i;i=t.material.matcap?vc("matcap","texture").context({getUV:()=>e}):fa(Il(.2,.8,e.y)),Fa.rgb.mulAssign(i.rgb)}}const gm=new qn;class _m extends ud{static get type(){return"PointsNodeMaterial"}constructor(t){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(gm),this.setValues(t)}copy(t){return this.sizeNode=t.sizeNode,super.copy(t)}}class ym extends fs{static get type(){return"RotateNode"}constructor(t,e){super(),this.positionNode=t,this.rotationNode=e}getNodeType(t){return this.positionNode.getNodeType(t)}setup(t){const{rotationNode:e,positionNode:i}=this;if("vec2"===this.getNodeType(t)){const t=e.cos(),n=e.sin();return Ta(t,n,n.negate(),t).mul(i)}{const t=e,n=Ea(xa(1,0,0,0),xa(0,tl(t.x),Qo(t.x).negate(),0),xa(0,Qo(t.x),tl(t.x),0),xa(0,0,0,1)),r=Ea(xa(tl(t.y),0,Qo(t.y),0),xa(0,1,0,0),xa(Qo(t.y).negate(),0,tl(t.y),0),xa(0,0,0,1)),s=Ea(xa(tl(t.z),Qo(t.z).negate(),0,0),xa(Qo(t.z),tl(t.z),0,0),xa(0,0,1,0),xa(0,0,0,1));return n.mul(r).mul(s).mul(xa(i,1)).xyz}}}const xm=ta(ym),vm=new En;class bm extends ud{static get type(){return"SpriteNodeMaterial"}constructor(t){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(vm),this.setValues(t)}setupPosition({object:t,camera:e,context:i}){const n=this.sizeAttenuation,{positionNode:r,rotationNode:s,scaleNode:a}=this,o=zh;let l=Fh.mul(fa(r||0)),h=ua(Dh[0].xyz.length(),Dh[1].xyz.length());if(null!==a&&(h=h.mul(a)),!n)if(e.isPerspectiveCamera)h=h.mul(l.z.negate());else{const t=oa(2).div(Nh.element(1).element(1));h=h.mul(t.mul(2))}let c=o.xy;if(t.center&&!0===t.center.isVector2){const t=Zs(new Ql("center","vec2",void 0));c=c.sub(t.sub(.5))}c=c.mul(h);const u=oa(s||Jc),d=xm(c,u);l=xa(l.xy.add(d),l.zw);const p=Nh.mul(l);return i.vertex=o,p}copy(t){return this.positionNode=t.positionNode,this.rotationNode=t.rotationNode,this.scaleNode=t.scaleNode,super.copy(t)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(t){this._useSizeAttenuation!==t&&(this._useSizeAttenuation=t,this.needsUpdate=!0)}}class Sm extends Rd{constructor(){super(),this.shadowNode=oa(1).toVar("shadowMask")}direct({shadowMask:t}){this.shadowNode.mulAssign(t)}finish(t){Fa.a.mulAssign(this.shadowNode.oneMinus()),t.outgoingLight.rgb.assign(Fa.rgb)}}const Tm=new Qn;class Mm extends ud{static get type(){return"ShadowNodeMaterial"}constructor(t){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Tm),this.setValues(t)}setupLightingModel(){return new Sm}}ia((({texture:t,uv:e})=>{const i=1e-4,n=fa().toVar();return sa(e.x.lessThan(i),(()=>{n.assign(fa(1,0,0))})).ElseIf(e.y.lessThan(i),(()=>{n.assign(fa(0,1,0))})).ElseIf(e.z.lessThan(i),(()=>{n.assign(fa(0,0,1))})).ElseIf(e.x.greaterThan(.9999),(()=>{n.assign(fa(-1,0,0))})).ElseIf(e.y.greaterThan(.9999),(()=>{n.assign(fa(0,-1,0))})).ElseIf(e.z.greaterThan(.9999),(()=>{n.assign(fa(0,0,-1))})).Else((()=>{const i=.01,r=t.uv(e.add(fa(-.01,0,0))).r.sub(t.uv(e.add(fa(i,0,0))).r),s=t.uv(e.add(fa(0,-.01,0))).r.sub(t.uv(e.add(fa(0,i,0))).r),a=t.uv(e.add(fa(0,0,-.01))).r.sub(t.uv(e.add(fa(0,0,i))).r);n.assign(fa(r,s,a))})),n.normalize()}));class Em{constructor(t,e){this.nodes=t,this.info=e,this.animationLoop=null,this.requestId=null,this._init()}_init(){const t=(e,i)=>{this.requestId=self.requestAnimationFrame(t),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this.animationLoop&&this.animationLoop(e,i)};t()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(t){this.animationLoop=t}}class wm{constructor(){this.weakMap=new WeakMap}get(t){let e=this.weakMap;for(let i=0;i<t.length;i++)if(e=e.get(t[i]),void 0===e)return;return e.get(t[t.length-1])}set(t,e){let i=this.weakMap;for(let e=0;e<t.length;e++){const n=t[e];!1===i.has(n)&&i.set(n,new WeakMap),i=i.get(n)}return i.set(t[t.length-1],e)}delete(t){let e=this.weakMap;for(let i=0;i<t.length;i++)if(e=e.get(t[i]),void 0===e)return!1;return e.delete(t[t.length-1])}}const Am=new Pn;class Rm{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new It,this.cacheKey=0}projectPlanes(t,e){const i=t.length,n=this.planes;for(let r=0;r<i;r++){Am.copy(t[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const i=n[e+r],s=Am.normal;i.x=-s.x,i.y=-s.y,i.z=-s.z,i.w=Am.constant}}updateGlobal(t,e){const i=t.clippingPlanes;this.viewMatrix=e.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let n=!1;if(Array.isArray(i)&&0!==i.length){const t=i.length;if(t!==this.globalClippingCount){const e=[];for(let i=0;i<t;i++)e.push(new Zt);this.globalClippingCount=t,this.planes=e,n=!0}this.projectPlanes(i,0)}else 0!==this.globalClippingCount&&(this.globalClippingCount=0,this.planes=[],n=!0);t.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=t.localClippingEnabled,n=!0),n&&(this.version++,this.cacheKey=Jr(this.globalClippingCount,!0===this.localClippingEnabled?1:0))}update(t,e){let i=!1;if(this!==t&&t.version!==this.parentVersion&&(this.globalClippingCount=e.isShadowNodeMaterial?0:t.globalClippingCount,this.localClippingEnabled=t.localClippingEnabled,this.planes=Array.from(t.planes),this.parentVersion=t.version,this.viewMatrix=t.viewMatrix,this.viewNormalMatrix=t.viewNormalMatrix,i=!0),this.localClippingEnabled){const t=e.clippingPlanes;if(Array.isArray(t)&&0!==t.length){const e=t.length,n=this.planes,r=this.globalClippingCount;if(i||e!==this.localClippingCount){n.length=r+e;for(let t=0;t<e;t++)n[r+t]=new Zt;this.localClippingCount=e,i=!0}this.projectPlanes(t,r)}else 0!==this.localClippingCount&&(this.localClippingCount=0,i=!0);this.localClipIntersection!==e.clipIntersection&&(this.localClipIntersection=e.clipIntersection,i=!0)}i&&(this.version+=t.version,this.cacheKey=Jr(t.cacheKey,this.localClippingCount,!0===this.localClipIntersection?1:0))}}let Cm=0;class Nm{constructor(t,e,i,n,r,s,a,o,l){this._nodes=t,this._geometries=e,this.id=Cm++,this.renderer=i,this.object=n,this.material=r,this.scene=s,this.camera=a,this.lightsNode=o,this.context=l,this.geometry=n.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(l.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(t){const e=this.material;let i=this.clippingContext;Array.isArray(e.clippingPlanes)?(i!==t&&i||(i=new Rm,this.clippingContext=i),i.update(t,e)):this.clippingContext!==t&&(this.clippingContext=t)}get clippingNeedsUpdate(){return this.clippingContext.version!==this.clippingContextVersion&&(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const t=this.getNodeBuilderState().nodeAttributes,e=this.geometry,i=[],n=new Set;for(const r of t){const t=r.node&&r.node.attribute?r.node.attribute:e.getAttribute(r.name);if(void 0===t)continue;i.push(t);const s=t.isInterleavedBufferAttribute?t.data:t;n.add(s)}return this.attributes=i,this.vertexBuffers=Array.from(n.values()),i}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:t,material:e,geometry:i,group:n,drawRange:r}=this,s=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),o=null!==a,l=i.isInstancedBufferGeometry?i.instanceCount:t.count>1?t.count:1;if(0===l)return null;if(s.instanceCount=l,!0===t.isBatchedMesh)return s;let h=1;!0!==e.wireframe||t.isPoints||t.isLineSegments||t.isLine||t.isLineLoop||(h=2);let c=r.start*h,u=(r.start+r.count)*h;null!==n&&(c=Math.max(c,n.start*h),u=Math.min(u,(n.start+n.count)*h));const d=i.attributes.position;let p=1/0;o?p=a.count:null!=d&&(p=d.count),c=Math.max(c,0),u=Math.min(u,p);const m=u-c;return m<0||m===1/0?null:(s.vertexCount=m,s.firstVertex=c,s)}getGeometryCacheKey(){const{geometry:t}=this;let e="";for(const i of Object.keys(t.attributes).sort()){const n=t.attributes[i];e+=i+",",n.data&&(e+=n.data.stride+","),n.offset&&(e+=n.offset+","),n.itemSize&&(e+=n.itemSize+","),n.normalized&&(e+="n,")}return t.index&&(e+="index,"),e}getMaterialCacheKey(){const{object:t,material:e}=this;let i=e.customProgramCacheKey();for(const t of function(t){const e=Object.keys(t);let i=Object.getPrototypeOf(t);for(;i;){const t=Object.getOwnPropertyDescriptors(i);for(const i in t)if(void 0!==t[i]){const n=t[i];n&&"function"==typeof n.get&&e.push(i)}i=Object.getPrototypeOf(i)}return e}(e)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(t))continue;const n=e[t];let r;if(null!==n){const t=typeof n;"number"===t?r=0!==n?"1":"0":"object"===t?(r="{",n.isTexture&&(r+=n.mapping),r+="}"):r=String(n)}else r=String(n);i+=r+","}return i+=this.clippingContext.cacheKey+",",t.geometry&&(i+=this.getGeometryCacheKey()),t.skeleton&&(i+=t.skeleton.bones.length+","),t.morphTargetInfluences&&(i+=t.morphTargetInfluences.length+","),t.isBatchedMesh&&(i+=t._matricesTexture.uuid+",",null!==t._colorsTexture&&(i+=t._colorsTexture.uuid+",")),t.count>1&&(i+=t.uuid+","),Kr(i)}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let t=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(t+=1),t}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Pm=[];class Im{constructor(t,e,i,n,r,s){this.renderer=t,this.nodes=e,this.geometries=i,this.pipelines=n,this.bindings=r,this.info=s,this.chainMaps={}}get(t,e,i,n,r,s,a){const o=this.getChainMap(a);Pm[0]=t,Pm[1]=e,Pm[2]=s,Pm[3]=r;let l=o.get(Pm);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,t,e,i,n,r,s,a),o.set(Pm,l)):(l.updateClipping(s.clippingContext),(l.version!==e.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(t,e,i,n,r,s,a)):l.version=e.version)),l}getChainMap(t="default"){return this.chainMaps[t]||(this.chainMaps[t]=new wm)}dispose(){this.chainMaps={}}createRenderObject(t,e,i,n,r,s,a,o,l,h){const c=this.getChainMap(h),u=new Nm(t,e,i,n,r,s,a,o,l);return u.onDispose=()=>{this.pipelines.delete(u),this.bindings.delete(u),this.nodes.delete(u),c.delete(u.getChainArray())},u}}class Um{constructor(){this.data=new WeakMap}get(t){let e=this.data.get(t);return void 0===e&&(e={},this.data.set(t,e)),e}delete(t){let e;return this.data.has(t)&&(e=this.data.get(t),this.data.delete(t)),e}has(t){return this.data.has(t)}dispose(){this.data=new WeakMap}}const Lm=16;class Dm extends Um{constructor(t){super(),this.backend=t}delete(t){const e=super.delete(t);return void 0!==e&&this.backend.destroyAttribute(t),e}update(t,e){const i=this.get(t);if(void 0===i.version)1===e?this.backend.createAttribute(t):2===e?this.backend.createIndexAttribute(t):3===e?this.backend.createStorageAttribute(t):4===e&&this.backend.createIndirectStorageAttribute(t),i.version=this._getBufferAttribute(t).version;else{const e=this._getBufferAttribute(t);(i.version<e.version||e.usage===gt)&&(this.backend.updateAttribute(t),i.version=e.version)}}_getBufferAttribute(t){return t.isInterleavedBufferAttribute&&(t=t.data),t}}function Bm(t){return null!==t.index?t.index.version:t.attributes.position.version}function Fm(t){const e=[],i=t.index,n=t.attributes.position;if(null!==i){const t=i.array;for(let i=0,n=t.length;i<n;i+=3){const n=t[i+0],r=t[i+1],s=t[i+2];e.push(n,r,r,s,s,n)}}else for(let t=0,i=n.array.length/3-1;t<i;t+=3){const i=t+0,n=t+1,r=t+2;e.push(i,n,n,r,r,i)}const r=new(function(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}(e)?Fi:Bi)(e,1);return r.version=Bm(t),r}class Om extends Um{constructor(t,e){super(),this.attributes=t,this.info=e,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(t){const e=t.geometry;return super.has(e)&&!0===this.get(e).initialized}updateForRender(t){!1===this.has(t)&&this.initGeometry(t),this.updateAttributes(t)}initGeometry(t){const e=t.geometry;this.get(e).initialized=!0,this.info.memory.geometries++;const i=()=>{this.info.memory.geometries--;const n=e.index,r=t.getAttributes();null!==n&&this.attributes.delete(n);for(const t of r)this.attributes.delete(t);const s=this.wireframes.get(e);void 0!==s&&this.attributes.delete(s),e.removeEventListener("dispose",i)};e.addEventListener("dispose",i)}updateAttributes(t){const e=t.getAttributes();for(const t of e)t.isStorageBufferAttribute||t.isStorageInstancedBufferAttribute?this.updateAttribute(t,3):this.updateAttribute(t,1);const i=this.getIndex(t);null!==i&&this.updateAttribute(i,2);const n=t.geometry.indirect;null!==n&&this.updateAttribute(n,4)}updateAttribute(t,e){const i=this.info.render.calls;t.isInterleavedBufferAttribute?void 0===this.attributeCall.get(t)?(this.attributes.update(t,e),this.attributeCall.set(t,i)):this.attributeCall.get(t.data)!==i&&(this.attributes.update(t,e),this.attributeCall.set(t.data,i),this.attributeCall.set(t,i)):this.attributeCall.get(t)!==i&&(this.attributes.update(t,e),this.attributeCall.set(t,i))}getIndirect(t){return t.geometry.indirect}getIndex(t){const{geometry:e,material:i}=t;let n=e.index;if(!0===i.wireframe){const t=this.wireframes;let i=t.get(e);void 0===i?(i=Fm(e),t.set(e,i)):i.version!==Bm(e)&&(this.attributes.delete(i),i=Fm(e),t.set(e,i)),n=i}return n}}class zm{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(t,e,i){this.render.drawCalls++,t.isMesh||t.isSprite?this.render.triangles+=i*(e/3):t.isPoints?this.render.points+=i*e:t.isLineSegments?this.render.lines+=i*(e/2):t.isLine?this.render.lines+=i*(e-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(t,e){0===this[t].timestampCalls&&(this[t].timestamp=0),this[t].timestamp+=e,this[t].timestampCalls++,this[t].timestampCalls>=this[t].previousFrameCalls&&(this[t].timestampCalls=0)}reset(){const t=this.render.frameCalls;this.render.previousFrameCalls=t;const e=this.compute.frameCalls;this.compute.previousFrameCalls=e,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class km{constructor(t){this.cacheKey=t,this.usedTimes=0}}class Vm extends km{constructor(t,e,i){super(t),this.vertexProgram=e,this.fragmentProgram=i}}class Gm extends km{constructor(t,e){super(t),this.computeProgram=e,this.isComputePipeline=!0}}let Hm=0;class Wm{constructor(t,e,i=null,n=null){this.id=Hm++,this.code=t,this.stage=e,this.transforms=i,this.attributes=n,this.usedTimes=0}}class jm extends Um{constructor(t,e){super(),this.backend=t,this.nodes=e,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(t,e){const{backend:i}=this,n=this.get(t);if(this._needsComputeUpdate(t)){const r=n.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const s=this.nodes.getForCompute(t);let a=this.programs.compute.get(s.computeShader);void 0===a&&(r&&0===r.computeProgram.usedTimes&&this._releaseProgram(r.computeProgram),a=new Wm(s.computeShader,"compute",s.transforms,s.nodeAttributes),this.programs.compute.set(s.computeShader,a),i.createProgram(a));const o=this._getComputeCacheKey(t,a);let l=this.caches.get(o);void 0===l&&(r&&0===r.usedTimes&&this._releasePipeline(r),l=this._getComputePipeline(t,a,o,e)),l.usedTimes++,a.usedTimes++,n.version=t.version,n.pipeline=l}return n.pipeline}getForRender(t,e=null){const{backend:i}=this,n=this.get(t);if(this._needsRenderUpdate(t)){const r=n.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const s=t.getNodeBuilderState();let a=this.programs.vertex.get(s.vertexShader);void 0===a&&(r&&0===r.vertexProgram.usedTimes&&this._releaseProgram(r.vertexProgram),a=new Wm(s.vertexShader,"vertex"),this.programs.vertex.set(s.vertexShader,a),i.createProgram(a));let o=this.programs.fragment.get(s.fragmentShader);void 0===o&&(r&&0===r.fragmentProgram.usedTimes&&this._releaseProgram(r.fragmentProgram),o=new Wm(s.fragmentShader,"fragment"),this.programs.fragment.set(s.fragmentShader,o),i.createProgram(o));const l=this._getRenderCacheKey(t,a,o);let h=this.caches.get(l);void 0===h?(r&&0===r.usedTimes&&this._releasePipeline(r),h=this._getRenderPipeline(t,a,o,l,e)):t.pipeline=h,h.usedTimes++,a.usedTimes++,o.usedTimes++,n.pipeline=h}return n.pipeline}delete(t){const e=this.get(t).pipeline;return e&&(e.usedTimes--,0===e.usedTimes&&this._releasePipeline(e),e.isComputePipeline?(e.computeProgram.usedTimes--,0===e.computeProgram.usedTimes&&this._releaseProgram(e.computeProgram)):(e.fragmentProgram.usedTimes--,e.vertexProgram.usedTimes--,0===e.vertexProgram.usedTimes&&this._releaseProgram(e.vertexProgram),0===e.fragmentProgram.usedTimes&&this._releaseProgram(e.fragmentProgram))),super.delete(t)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(t){this.getForRender(t)}_getComputePipeline(t,e,i,n){i=i||this._getComputeCacheKey(t,e);let r=this.caches.get(i);return void 0===r&&(r=new Gm(i,e),this.caches.set(i,r),this.backend.createComputePipeline(r,n)),r}_getRenderPipeline(t,e,i,n,r){n=n||this._getRenderCacheKey(t,e,i);let s=this.caches.get(n);return void 0===s&&(s=new Vm(n,e,i),this.caches.set(n,s),t.pipeline=s,this.backend.createRenderPipeline(t,r)),s}_getComputeCacheKey(t,e){return t.id+","+e.id}_getRenderCacheKey(t,e,i){return e.id+","+i.id+","+this.backend.getRenderCacheKey(t)}_releasePipeline(t){this.caches.delete(t.cacheKey)}_releaseProgram(t){const e=t.code,i=t.stage;this.programs[i].delete(e)}_needsComputeUpdate(t){const e=this.get(t);return void 0===e.pipeline||e.version!==t.version}_needsRenderUpdate(t){return void 0===this.get(t).pipeline||this.backend.needsRenderUpdate(t)}}class Xm extends Um{constructor(t,e,i,n,r,s){super(),this.backend=t,this.textures=i,this.pipelines=r,this.attributes=n,this.nodes=e,this.info=s,this.pipelines.bindings=this}getForRender(t){const e=t.getBindings();for(const t of e){const i=this.get(t);void 0===i.bindGroup&&(this._init(t),this.backend.createBindings(t,e),i.bindGroup=t)}return e}getForCompute(t){const e=this.nodes.getForCompute(t).bindings;for(const t of e){const i=this.get(t);void 0===i.bindGroup&&(this._init(t),this.backend.createBindings(t,e),i.bindGroup=t)}return e}updateForCompute(t){this._updateBindings(this.getForCompute(t))}updateForRender(t){this._updateBindings(this.getForRender(t))}_updateBindings(t){for(const e of t)this._update(e,t)}_init(t){for(const e of t.bindings)if(e.isSampledTexture)this.textures.updateTexture(e.texture);else if(e.isStorageBuffer){const t=e.attribute,i=t.isIndirectStorageBufferAttribute?4:3;this.attributes.update(t,i)}}_update(t,e){const{backend:i}=this;let n=!1;for(const e of t.bindings)if(!e.isNodeUniformsGroup||this.nodes.updateGroup(e))if(e.isUniformBuffer)e.update()&&i.updateBinding(e);else if(e.isSampler)e.update();else if(e.isSampledTexture){e.needsBindingsUpdate(this.textures.get(e.texture).generation)&&(n=!0);const t=e.update(),r=e.texture;t&&this.textures.updateTexture(r);const s=i.get(r);if(!0===i.isWebGPUBackend&&void 0===s.texture&&void 0===s.externalTexture&&(console.error("Bindings._update: binding should be available:",e,t,r,e.textureNode.value,n),this.textures.updateTexture(r),n=!0),!0===r.isStorageTexture){const t=this.get(r);!0===e.store?t.needsMipmap=!0:this.textures.needsMipmaps(r)&&!0===t.needsMipmap&&(this.backend.generateMipmaps(r),t.needsMipmap=!1)}}!0===n&&this.backend.updateBindings(t,e)}}function $m(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function qm(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ym(t){return(t.transmission>0||t.transmissionNode)&&2===t.side&&!1===t.forceSinglePass}class Km{constructor(t,e,i){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=t.getNode(e,i),this.lightsArray=[],this.scene=e,this.camera=i,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(t,e,i,n,r,s){let a=this.renderItems[this.renderItemsIndex];return void 0===a?(a={id:t.id,object:t,geometry:e,material:i,groupOrder:n,renderOrder:t.renderOrder,z:r,group:s},this.renderItems[this.renderItemsIndex]=a):(a.id=t.id,a.object=t,a.geometry=e,a.material=i,a.groupOrder=n,a.renderOrder=t.renderOrder,a.z=r,a.group=s),this.renderItemsIndex++,a}push(t,e,i,n,r,s){const a=this.getNextRenderItem(t,e,i,n,r,s);!0===t.occlusionTest&&this.occlusionQueryCount++,!0===i.transparent||i.transmission>0?(Ym(i)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(t,e,i,n,r,s){const a=this.getNextRenderItem(t,e,i,n,r,s);!0===i.transparent||i.transmission>0?(Ym(i)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(t){this.bundles.push(t)}pushLight(t){this.lightsArray.push(t)}sort(t,e){this.opaque.length>1&&this.opaque.sort(t||$m),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(e||qm),this.transparent.length>1&&this.transparent.sort(e||qm)}finish(){this.lightsNode.setLights(this.lightsArray);for(let t=this.renderItemsIndex,e=this.renderItems.length;t<e;t++){const e=this.renderItems[t];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.groupOrder=null,e.renderOrder=null,e.z=null,e.group=null}}}class Zm{constructor(t){this.lighting=t,this.lists=new wm}get(t,e){const i=this.lists,n=[t,e];let r=i.get(n);return void 0===r&&(r=new Km(this.lighting,t,e),i.set(n,r)),r}dispose(){this.lists=new wm}}let Jm=0;class Qm{constructor(){this.id=Jm++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Zt,this.scissor=!1,this.scissorValue=new Zt,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return tf(this)}}function tf(t){const{textures:e,activeCubeFace:i}=t,n=[i];for(const t of e)n.push(t.id);return Zr(n)}class ef{constructor(){this.chainMaps={}}get(t,e,i=null){const n=[t,e];let r;if(null===i)r="default";else{const t=i.texture.format;r=`${i.textures.length}:${t}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const s=this.getChainMap(r);let a=s.get(n);return void 0===a&&(a=new Qm,s.set(n,a)),null!==i&&(a.sampleCount=0===i.samples?1:i.samples),a}getChainMap(t){return this.chainMaps[t]||(this.chainMaps[t]=new wm)}dispose(){this.chainMaps={}}}const nf=new ie;class rf extends Um{constructor(t,e,i){super(),this.renderer=t,this.backend=e,this.info=i}updateRenderTarget(t,e=0){const i=this.get(t),n=0===t.samples?1:t.samples,r=i.depthTextureMips||(i.depthTextureMips={}),s=t.textures,a=this.getSize(s[0]),o=a.width>>e,l=a.height>>e;let h=t.depthTexture||r[e];const c=!0===t.depthBuffer||!0===t.stencilBuffer;let u=!1;void 0===h&&c&&(h=new Kn,h.format=t.stencilBuffer?L:U,h.type=t.stencilBuffer?N:A,h.image.width=o,h.image.height=l,r[e]=h),i.width===a.width&&a.height===i.height||(u=!0,h&&(h.needsUpdate=!0,h.image.width=o,h.image.height=l)),i.width=a.width,i.height=a.height,i.textures=s,i.depthTexture=h||null,i.depth=t.depthBuffer,i.stencil=t.stencilBuffer,i.renderTarget=t,i.sampleCount!==n&&(u=!0,h&&(h.needsUpdate=!0),i.sampleCount=n);const d={sampleCount:n};for(let t=0;t<s.length;t++){const e=s[t];u&&(e.needsUpdate=!0),this.updateTexture(e,d)}if(h&&this.updateTexture(h,d),!0!==i.initialized){i.initialized=!0;const e=()=>{t.removeEventListener("dispose",e);for(let t=0;t<s.length;t++)this._destroyTexture(s[t]);h&&this._destroyTexture(h),this.delete(t)};t.addEventListener("dispose",e)}}updateTexture(t,e={}){const i=this.get(t);if(!0===i.initialized&&i.version===t.version)return;const n=t.isRenderTargetTexture||t.isDepthTexture||t.isFramebufferTexture,r=this.backend;if(n&&!0===i.initialized&&(r.destroySampler(t),r.destroyTexture(t)),t.isFramebufferTexture){const e=this.renderer.getRenderTarget();t.type=e?e.texture.type:S}const{width:s,height:a,depth:o}=this.getSize(t);if(e.width=s,e.height=a,e.depth=o,e.needsMipmaps=this.needsMipmaps(t),e.levels=e.needsMipmaps?this.getMipLevels(t,s,a):1,n||!0===t.isStorageTexture)r.createSampler(t),r.createTexture(t,e),i.generation=t.version;else if(!0!==i.initialized&&r.createSampler(t),t.version>0){const n=t.image;if(void 0===n)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===n.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(t.images){const i=[];for(const e of t.images)i.push(e);e.images=i}else e.image=n;void 0!==i.isDefaultTexture&&!0!==i.isDefaultTexture||(r.createTexture(t,e),i.isDefaultTexture=!1,i.generation=t.version),!0===t.source.dataReady&&r.updateTexture(t,e),e.needsMipmaps&&0===t.mipmaps.length&&r.generateMipmaps(t)}}else r.createDefaultTexture(t),i.isDefaultTexture=!0,i.generation=t.version;if(!0!==i.initialized){i.initialized=!0,i.generation=t.version,this.info.memory.textures++;const e=()=>{t.removeEventListener("dispose",e),this._destroyTexture(t),this.info.memory.textures--};t.addEventListener("dispose",e)}i.version=t.version}getSize(t,e=nf){let i=t.images?t.images[0]:t.image;return i?(void 0!==i.image&&(i=i.image),e.width=i.width,e.height=i.height,e.depth=t.isCubeTexture?6:i.depth||1):e.width=e.height=e.depth=1,e}getMipLevels(t,e,i){let n;return n=t.isCompressedTexture?t.mipmaps.length:Math.floor(Math.log2(Math.max(e,i)))+1,n}needsMipmaps(t){return this.isEnvironmentTexture(t)||!0===t.isCompressedTexture||t.generateMipmaps}isEnvironmentTexture(t){const e=t.mapping;return e===u||e===d||e===h||e===c}_destroyTexture(t){this.backend.destroySampler(t),this.backend.destroyTexture(t),this.delete(t)}}class sf extends Mi{constructor(t,e,i,n=1){super(t,e,i),this.a=n}set(t,e,i,n=1){return this.a=n,super.set(t,e,i)}copy(t){return void 0!==t.a&&(this.a=t.a),super.copy(t)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class af extends La{static get type(){return"ParameterNode"}constructor(t,e=null){super(t,e),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class of extends ds{static get type(){return"StackNode"}constructor(t=null){super(),this.nodes=[],this.outputNode=null,this.parent=t,this._currentCond=null,this.isStackNode=!0}getNodeType(t){return this.outputNode?this.outputNode.getNodeType(t):"void"}add(t){return this.nodes.push(t),this}If(t,e){const i=new Ks(e);return this._currentCond=zl(t,i),this.add(this._currentCond)}ElseIf(t,e){const i=new Ks(e),n=zl(t,i);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(t){return this._currentCond.elseNode=new Ks(t),this}build(t,...e){const i=ra();na(this);for(const e of this.nodes)e.build(t,"void");return na(i),this.outputNode?this.outputNode.build(t,...e):super.build(t,...e)}else(...t){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...t)}elseif(...t){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...t)}}const lf=ta(of);new Pn,new ie,new ie,new ie,new Ie,new ie(0,0,-1),new Zt,new ie,new ie,new Zt,new Pt;const hf=new Jt;Wu.flipX(),hf.depthTexture=new Kn(1,1);const cf=new Pr(-1,1,1,-1,0,1);class uf extends $i{constructor(t=!1){super();const e=!1===t?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new zi([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new zi(e,2))}}const df=new uf;class pf extends an{constructor(t=null){super(df,t),this.camera=cf,this.isQuadMesh=!0}renderAsync(t){return t.renderAsync(this,cf)}render(t){t.render(this,cf)}}const mf=new Ge,ff=new Ie;class gf extends ds{static get type(){return"SceneNode"}constructor(t=gf.BACKGROUND_BLURRINESS,e=null){super(),this.scope=t,this.scene=e}setup(t){const e=this.scope,i=null!==this.scene?this.scene:t.scene;let n;return e===gf.BACKGROUND_BLURRINESS?n=_c("backgroundBlurriness","float",i):e===gf.BACKGROUND_INTENSITY?n=_c("backgroundIntensity","float",i):e===gf.BACKGROUND_ROTATION?n=Ua("mat4").label("backgroundRotation").setGroup(Na).onRenderUpdate((()=>{const t=i.background;return null!==t&&t.isTexture&&300!==t.mapping?(mf.copy(i.backgroundRotation),mf.x*=-1,mf.y*=-1,mf.z*=-1,ff.makeRotationFromEuler(mf)):ff.identity(),ff})):console.error("THREE.SceneNode: Unknown scope:",e),n}}gf.BACKGROUND_BLURRINESS="backgroundBlurriness",gf.BACKGROUND_INTENSITY="backgroundIntensity",gf.BACKGROUND_ROTATION="backgroundRotation";const _f=ea(gf,gf.BACKGROUND_BLURRINESS),yf=ea(gf,gf.BACKGROUND_INTENSITY),xf=ea(gf,gf.BACKGROUND_ROTATION),vf="triangle-strip",bf="never",Sf="less",Tf="equal",Mf="less-equal",Ef="greater",wf="not-equal",Af="greater-equal",Rf="always",Cf="store",Nf="load",Pf="clear",If="ccw",Uf="uint16",Lf="uint32",Df={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Bf="linear",Ff="nearest",Of="zero",zf="one",kf="src",Vf="one-minus-src",Gf="src-alpha",Hf="one-minus-src-alpha",Wf="add",jf="storage",Xf="2d",$f="2d-array",qf="cube",Yf="vertex",Kf="instance",Zf={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};new WeakMap;const Jf=new Pt;class Qf extends Eh{static get type(){return"PassTextureNode"}constructor(t,e){super(e),this.passNode=t,this.setUpdateMatrix(!1)}setup(t){return t.object.isQuadMesh&&this.passNode.build(t),super.setup(t)}clone(){return new this.constructor(this.passNode,this.value)}}class tg extends Qf{static get type(){return"PassMultipleTextureNode"}constructor(t,e,i=!1){super(t,null),this.textureName=e,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(t){return this.updateTexture(),super.setup(t)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class eg extends fs{static get type(){return"PassNode"}constructor(t,e,i,n={}){super("vec4"),this.scope=t,this.scene=e,this.camera=i,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const r=new Kn;r.isRenderTargetTexture=!0,r.name="depth";const s=new Jt(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:C,...n});s.texture.name="output",s.depthTexture=r,this.renderTarget=s,this.updateBeforeType=ss,this._textures={output:s.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Ua(0),this._cameraFar=Ua(0),this._mrt=null,this.isPassNode=!0}setMRT(t){return this._mrt=t,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(t){let e=this._textures[t];return void 0===e&&(e=this.renderTarget.texture.clone(),e.isRenderTargetTexture=!0,e.name=t,this._textures[t]=e,this.renderTarget.textures.push(e)),e}getPreviousTexture(t){let e=this._previousTextures[t];return void 0===e&&(e=this.getTexture(t).clone(),e.isRenderTargetTexture=!0,this._previousTextures[t]=e),e}toggleTexture(t){const e=this._previousTextures[t];if(void 0!==e){const i=this._textures[t],n=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[n]=e,this._textures[t]=e,this._previousTextures[t]=i,this._textureNodes[t].updateTexture(),this._previousTextureNodes[t].updateTexture()}}getTextureNode(t="output"){let e=this._textureNodes[t];return void 0===e&&(e=Zs(new tg(this,t)),e.updateTexture(),this._textureNodes[t]=e),e}getPreviousTextureNode(t="output"){let e=this._previousTextureNodes[t];return void 0===e&&(void 0===this._textureNodes[t]&&this.getTextureNode(t),e=Zs(new tg(this,t,!0)),e.updateTexture(),this._previousTextureNodes[t]=e),e}getViewZNode(t="depth"){let e=this._viewZNodes[t];if(void 0===e){const i=this._cameraNear,n=this._cameraFar;this._viewZNodes[t]=e=nd(this.getTextureNode(t),i,n)}return e}getLinearDepthNode(t="depth"){let e=this._linearDepthNodes[t];if(void 0===e){const i=this._cameraNear,n=this._cameraFar,r=this.getViewZNode(t);this._linearDepthNodes[t]=e=ed(r,i,n)}return e}setup({renderer:t}){return this.renderTarget.samples=void 0===this.options.samples?t.samples:this.options.samples,!0===t.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===eg.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(t){const{renderer:e}=t,{scene:i,camera:n}=this;this._pixelRatio=e.getPixelRatio();const r=e.getSize(Jf);this.setSize(r.width,r.height);const s=e.getRenderTarget(),a=e.getMRT();this._cameraNear.value=n.near,this._cameraFar.value=n.far;for(const t in this._previousTextures)this.toggleTexture(t);e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),e.render(i,n),e.setRenderTarget(s),e.setMRT(a)}setSize(t,e){this._width=t,this._height=e;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget.setSize(i,n)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}eg.COLOR="color",eg.DEPTH="depth";const ig=ia((([t,e])=>t.mul(e).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ng=ia((([t,e])=>(t=t.mul(e)).div(t.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),rg=ia((([t,e])=>{const i=(t=(t=t.mul(e)).sub(.004).max(0)).mul(t.mul(6.2).add(.5)),n=t.mul(t.mul(6.2).add(1.7)).add(.06);return i.div(n).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),sg=ia((([t])=>{const e=t.mul(t.add(.0245786)).sub(90537e-9),i=t.mul(t.add(.432951).mul(.983729)).add(.238081);return e.div(i)})),ag=ia((([t,e])=>{const i=Ma(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=Ma(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return t=t.mul(e).div(.6),t=i.mul(t),t=sg(t),(t=n.mul(t)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),og=Ma(fa(1.6605,-.1246,-.0182),fa(-.5876,1.1329,-.1006),fa(-.0728,-.0083,1.1187)),lg=Ma(fa(.6274,.0691,.0164),fa(.3293,.9195,.088),fa(.0433,.0113,.8956)),hg=ia((([t])=>{const e=fa(t).toVar(),i=fa(e.mul(e)).toVar(),n=fa(i.mul(i)).toVar();return oa(15.5).mul(n.mul(i)).sub(go(40.14,n.mul(e))).add(go(31.96,n).sub(go(6.868,i.mul(e))).add(go(.4298,i).add(go(.1191,e).sub(.00232))))})),cg=ia((([t,e])=>{const i=fa(t).toVar(),n=Ma(fa(.856627153315983,.137318972929847,.11189821299995),fa(.0951212405381588,.761241990602591,.0767994186031903),fa(.0482516061458583,.101439036467562,.811302368396859)),r=Ma(fa(1.1271005818144368,-.1413297634984383,-.14132976349843826),fa(-.11060664309660323,1.157823702216272,-.11060664309660294),fa(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=oa(-12.47393),a=oa(4.026069);return i.mulAssign(e),i.assign(lg.mul(i)),i.assign(n.mul(i)),i.assign(xl(i,1e-10)),i.assign(Xo(i)),i.assign(i.sub(s).div(a.sub(s))),i.assign(Ul(i,0,1)),i.assign(hg(i)),i.assign(r.mul(i)),i.assign(Al(xl(fa(0),i),fa(2.2))),i.assign(og.mul(i)),i.assign(Ul(i,0,1)),i})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ug=ia((([t,e])=>{const i=oa(.76),n=oa(.15);t=t.mul(e);const r=yl(t.r,yl(t.g,t.b)),s=zl(r.lessThan(.08),r.sub(go(6.25,r.mul(r))),.04);t.subAssign(s);const a=xl(t.r,xl(t.g,t.b));sa(a.lessThan(i),(()=>t));const o=fo(1,i),l=fo(1,o.mul(o).div(a.add(o.sub(i))));t.mulAssign(l.div(a));const h=fo(1,_o(1,n.mul(a.sub(l)).add(1)));return Il(t,fa(l),h)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class dg extends ds{static get type(){return"CodeNode"}constructor(t="",e=[],i=""){super("code"),this.isCodeNode=!0,this.code=t,this.language=i,this.includes=e}isGlobal(){return!0}setIncludes(t){return this.includes=t,this}getIncludes(){return this.includes}generate(t){const e=this.getIncludes(t);for(const i of e)i.build(t);const i=t.getCodeFromNode(this,this.getNodeType(t));return i.code=this.code,i.code}serialize(t){super.serialize(t),t.code=this.code,t.language=this.language}deserialize(t){super.deserialize(t),this.code=t.code,this.language=t.language}}class pg extends dg{static get type(){return"FunctionNode"}constructor(t="",e=[],i=""){super(t,e,i)}getNodeType(t){return this.getNodeFunction(t).type}getInputs(t){return this.getNodeFunction(t).inputs}getNodeFunction(t){const e=t.getDataFromNode(this);let i=e.nodeFunction;return void 0===i&&(i=t.parser.parseFunction(this.code),e.nodeFunction=i),i}generate(t,e){super.generate(t);const i=this.getNodeFunction(t),n=i.name,r=i.type,s=t.getCodeFromNode(this,r);""!==n&&(s.name=n);const a=t.getPropertyName(s),o=this.getNodeFunction(t).getCode(a);return s.code=o+"\n","property"===e?a:t.format(`${a}()`,r,e)}}class mg extends Map{get(t,e=null,...i){if(this.has(t))return super.get(t);if(null!==e){const n=e(...i);return this.set(t,n),n}}}new mg;class fg extends ds{static get type(){return"FogNode"}constructor(t,e){super("float"),this.isFogNode=!0,this.colorNode=t,this.factorNode=e}getViewZNode(t){let e;const i=t.context.getViewZ;return void 0!==i&&(e=i(this)),(e||Hh.z).negate()}setup(){return this.factorNode}}class gg extends fg{static get type(){return"FogRangeNode"}constructor(t,e,i){super(t),this.isFogRangeNode=!0,this.nearNode=e,this.farNode=i}setup(t){const e=this.getViewZNode(t);return Dl(this.nearNode,this.farNode,e)}}const _g=ta(gg);class yg extends fg{static get type(){return"FogExp2Node"}constructor(t,e){super(t),this.isFogExp2Node=!0,this.densityNode=e}setup(t){const e=this.getViewZNode(t),i=this.densityNode;return i.mul(i,e,e).negate().exp().oneMinus()}}const xg=ta(yg);ta(class extends ds{constructor(t){super(),this.scope=t}generate(t){const{scope:e}=this,{renderer:i}=t;!0===i.backend.isWebGLBackend?t.addFlowCode(`\t// ${e}Barrier \n`):t.addLineFlowCode(`${e}Barrier()`,this)}});class vg extends fs{static get type(){return"AtomicFunctionNode"}constructor(t,e,i,n=null){super("uint"),this.method=t,this.pointerNode=e,this.valueNode=i,this.storeNode=n}getInputType(t){return this.pointerNode.getNodeType(t)}getNodeType(t){return this.getInputType(t)}generate(t){const e=this.method,i=this.getNodeType(t),n=this.getInputType(t),r=this.pointerNode,s=this.valueNode,a=[];a.push(`&${r.build(t,n)}`),a.push(s.build(t,n));const o=`${t.getMethod(e,i)}( ${a.join(", ")} )`;if(null!==this.storeNode){const e=this.storeNode.build(t,n);t.addLineFlowCode(`${e} = ${o}`,this)}else t.addLineFlowCode(o,this)}}let bg;function Sg(t){bg=bg||new WeakMap;let e=bg.get(t);return void 0===e&&bg.set(t,e={}),e}function Tg(t){const e=Sg(t);return e.position||(e.position=Ua(new ie).setGroup(Na).onRenderUpdate(((e,i)=>i.value.setFromMatrixPosition(t.matrixWorld))))}function Mg(t){const e=Sg(t);return e.viewPosition||(e.viewPosition=Ua(new ie).setGroup(Na).onRenderUpdate((({camera:e},i)=>{i.value=i.value||new ie,i.value.setFromMatrixPosition(t.matrixWorld),i.value.applyMatrix4(e.matrixWorldInverse)})))}vg.ATOMIC_LOAD="atomicLoad",vg.ATOMIC_STORE="atomicStore",vg.ATOMIC_ADD="atomicAdd",vg.ATOMIC_SUB="atomicSub",vg.ATOMIC_MAX="atomicMax",vg.ATOMIC_MIN="atomicMin",vg.ATOMIC_AND="atomicAnd",vg.ATOMIC_OR="atomicOr",vg.ATOMIC_XOR="atomicXor",ta(vg);const Eg=t=>Ph.transformDirection(Tg(t).sub(function(t){const e=Sg(t);return e.targetPosition||(e.targetPosition=Ua(new ie).setGroup(Na).onRenderUpdate(((e,i)=>i.value.setFromMatrixPosition(t.target.matrixWorld))))}(t))),wg=(t,e)=>{for(const i of e)if(i.isAnalyticLightNode&&i.light.id===t)return i;return null},Ag=new WeakMap;class Rg extends ds{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=fa().toVar("totalDiffuse"),this.totalSpecularNode=fa().toVar("totalSpecular"),this.outgoingLightNode=fa().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(t){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(t);const e=[];for(const t of this._lightNodes)e.push(t.getSelf().getHash());this._lightNodesHash="lights-"+e.join(",")}return this._lightNodesHash}analyze(t){const e=t.getDataFromNode(this);for(const i of e.nodes)i.build(t)}setupLightsNode(t){const e=[],i=this._lightNodes,n=(t=>this._lights.sort(((t,e)=>t.id-e.id)))(),r=t.renderer.library;for(const t of n)if(t.isNode)e.push(Zs(t));else{let n=null;if(null!==i&&(n=wg(t.id,i)),null===n){const i=r.getLightNodeClass(t.constructor);if(null===i){console.warn(`LightsNode.setupNodeLights: Light node not found for ${t.constructor.name}`);continue}let n=null;Ag.has(t)?n=Ag.get(t):(n=Zs(new i(t)),Ag.set(t,n)),e.push(n)}}this._lightNodes=e}setupLights(t,e){for(const i of e)i.build(t)}setup(t){null===this._lightNodes&&this.setupLightsNode(t);const e=t.context,i=e.lightingModel;let n=this.outgoingLightNode;if(i){const{_lightNodes:r,totalDiffuseNode:s,totalSpecularNode:a}=this;e.outgoingLight=n;const o=t.addStack();t.getDataFromNode(this).nodes=o.nodes,i.start(e,o,t),this.setupLights(t,r),i.indirect(e,o,t);const{backdrop:l,backdropAlpha:h}=e,{directDiffuse:c,directSpecular:u,indirectDiffuse:d,indirectSpecular:p}=e.reflectedLight;let m=c.add(d);null!==l&&(m=fa(null!==h?h.mix(m,l):l),e.material.transparent=!0),s.assign(m),a.assign(u.add(p)),n.assign(s.add(a)),i.finish(e,o,t),n=n.bypass(t.removeStack())}return n}setLights(t){return this._lights=t,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const Cg=ia((({depthTexture:t,shadowCoord:e})=>wh(t,e.xy).compare(e.z))),Ng=ia((({depthTexture:t,shadowCoord:e,shadow:i})=>{const n=(e,i)=>wh(t,e).compare(i),r=_c("mapSize","vec2",i).setGroup(Na),s=_c("radius","float",i).setGroup(Na),a=ua(1).div(r),o=a.x.negate().mul(s),l=a.y.negate().mul(s),h=a.x.mul(s),c=a.y.mul(s),u=o.div(2),d=l.div(2),p=h.div(2),m=c.div(2);return mo(n(e.xy.add(ua(o,l)),e.z),n(e.xy.add(ua(0,l)),e.z),n(e.xy.add(ua(h,l)),e.z),n(e.xy.add(ua(u,d)),e.z),n(e.xy.add(ua(0,d)),e.z),n(e.xy.add(ua(p,d)),e.z),n(e.xy.add(ua(o,0)),e.z),n(e.xy.add(ua(u,0)),e.z),n(e.xy,e.z),n(e.xy.add(ua(p,0)),e.z),n(e.xy.add(ua(h,0)),e.z),n(e.xy.add(ua(u,m)),e.z),n(e.xy.add(ua(0,m)),e.z),n(e.xy.add(ua(p,m)),e.z),n(e.xy.add(ua(o,c)),e.z),n(e.xy.add(ua(0,c)),e.z),n(e.xy.add(ua(h,c)),e.z)).mul(1/17)})),Pg=ia((({depthTexture:t,shadowCoord:e,shadow:i})=>{const n=(e,i)=>wh(t,e).compare(i),r=_c("mapSize","vec2",i).setGroup(Na),s=ua(1).div(r),a=s.x,o=s.y,l=e.xy,h=Jo(l.mul(r).add(.5));return l.subAssign(h.mul(s)),mo(n(l,e.z),n(l.add(ua(a,0)),e.z),n(l.add(ua(0,o)),e.z),n(l.add(s),e.z),Il(n(l.add(ua(a.negate(),0)),e.z),n(l.add(ua(a.mul(2),0)),e.z),h.x),Il(n(l.add(ua(a.negate(),o)),e.z),n(l.add(ua(a.mul(2),o)),e.z),h.x),Il(n(l.add(ua(0,o.negate())),e.z),n(l.add(ua(0,o.mul(2))),e.z),h.y),Il(n(l.add(ua(a,o.negate())),e.z),n(l.add(ua(a,o.mul(2))),e.z),h.y),Il(Il(n(l.add(ua(a.negate(),o.negate())),e.z),n(l.add(ua(a.mul(2),o.negate())),e.z),h.x),Il(n(l.add(ua(a.negate(),o.mul(2))),e.z),n(l.add(ua(a.mul(2),o.mul(2))),e.z),h.x),h.y)).mul(1/9)})),Ig=ia((({depthTexture:t,shadowCoord:e})=>{const i=oa(1).toVar(),n=wh(t).uv(e.xy).rg,r=bl(e.z,n.x);return sa(r.notEqual(oa(1)),(()=>{const t=e.z.sub(n.x),s=xl(0,n.y.mul(n.y));let a=s.div(s.add(t.mul(t)));a=Ul(fo(a,.3).div(.95-.3)),i.assign(Ul(xl(r,a)))})),i})),Ug=ia((({samples:t,radius:e,size:i,shadowPass:n})=>{const r=oa(0).toVar(),s=oa(0).toVar(),a=t.lessThanEqual(oa(1)).select(oa(0),oa(2).div(t.sub(1))),o=t.lessThanEqual(oa(1)).select(oa(0),oa(-1));Nu({start:la(0),end:la(t),type:"int",condition:"<"},(({i:t})=>{const l=o.add(oa(t).mul(a)),h=n.uv(mo(Xu.xy,ua(0,l).mul(e)).div(i)).x;r.addAssign(h),s.addAssign(h.mul(h))})),r.divAssign(t),s.divAssign(t);const l=$o(s.sub(r.mul(r)));return ua(r,l)})),Lg=ia((({samples:t,radius:e,size:i,shadowPass:n})=>{const r=oa(0).toVar(),s=oa(0).toVar(),a=t.lessThanEqual(oa(1)).select(oa(0),oa(2).div(t.sub(1))),o=t.lessThanEqual(oa(1)).select(oa(0),oa(-1));Nu({start:la(0),end:la(t),type:"int",condition:"<"},(({i:t})=>{const l=o.add(oa(t).mul(a)),h=n.uv(mo(Xu.xy,ua(l,0).mul(e)).div(i));r.addAssign(h.x),s.addAssign(mo(h.y.mul(h.y),h.x.mul(h.x)))})),r.divAssign(t),s.divAssign(t);const l=$o(s.sub(r.mul(r)));return ua(r,l)})),Dg=[Cg,Ng,Pg,Ig];let Bg=null;const Fg=new pf;class Og extends ds{static get type(){return"ShadowNode"}constructor(t,e=null){super(),this.light=t,this.shadow=e||t.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=as,this._node=null,this.isShadowNode=!0}setupShadow(t){const{object:e,renderer:i}=t;null===Bg&&(Bg=new ud,Bg.fragmentNode=xa(0,0,0,1),Bg.isShadowNodeMaterial=!0,Bg.name="ShadowMaterial");const n=this.shadow,r=i.shadowMap.type,s=new Kn(n.mapSize.width,n.mapSize.height);s.compareFunction=513;const a=t.createRenderTarget(n.mapSize.width,n.mapSize.height);if(a.depthTexture=s,n.camera.updateProjectionMatrix(),3===r){s.compareFunction=null,this.vsmShadowMapVertical=t.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:F,type:C}),this.vsmShadowMapHorizontal=t.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:F,type:C});const e=wh(s),i=wh(this.vsmShadowMapVertical.texture),r=_c("blurSamples","float",n).setGroup(Na),a=_c("radius","float",n).setGroup(Na),o=_c("mapSize","vec2",n).setGroup(Na);let l=this.vsmMaterialVertical||(this.vsmMaterialVertical=new ud);l.fragmentNode=Ug({samples:r,radius:a,size:o,shadowPass:e}).context(t.getSharedContext()),l.name="VSMVertical",l=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new ud),l.fragmentNode=Lg({samples:r,radius:a,size:o,shadowPass:i}).context(t.getSharedContext()),l.name="VSMHorizontal"}const o=_c("intensity","float",n).setGroup(Na),l=_c("bias","float",n).setGroup(Na),h=_c("normalBias","float",n).setGroup(Na),c=e.material.shadowPositionNode||Vh;let u,d=Ua(n.matrix).setGroup(Na).mul(c.add(Qh.mul(h)));if(n.camera.isOrthographicCamera||!0!==i.logarithmicDepthBuffer)d=d.xyz.div(d.w),u=d.z,i.coordinateSystem===yt&&(u=u.mul(2).sub(1));else{const t=d.w;d=d.xy.div(t);const e=Ua("float").onRenderUpdate((()=>n.camera.near)),i=Ua("float").onRenderUpdate((()=>n.camera.far));u=rd(t,e,i)}d=fa(d.x,d.y.oneMinus(),u.add(l));const p=d.x.greaterThanEqual(0).and(d.x.lessThanEqual(1)).and(d.y.greaterThanEqual(0)).and(d.y.lessThanEqual(1)).and(d.z.lessThanEqual(1)),m=n.filterNode||Dg[i.shadowMap.type]||null;if(null===m)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=wh(a.texture,d),g=p.select(m({depthTexture:3===r?this.vsmShadowMapHorizontal.texture:s,shadowCoord:d,shadow:n}),oa(1));return this.shadowMap=a,this.shadow.map=a,Il(1,g.rgb.mix(f,1),o.mul(f.a))}setup(t){if(!1!==t.renderer.shadowMap.enabled)return null!==this._node?this._node:this._node=this.setupShadow(t)}updateShadow(t){const{shadowMap:e,light:i,shadow:n}=this,{renderer:r,scene:s,camera:a}=t,o=r.shadowMap.type,l=e.depthTexture.version;this._depthVersionCached=l;const h=s.overrideMaterial;s.overrideMaterial=Bg,e.setSize(n.mapSize.width,n.mapSize.height),n.updateMatrices(i),n.camera.layers.mask=a.layers.mask;const c=r.getRenderTarget(),u=r.getRenderObjectFunction();r.setRenderObjectFunction(((t,...e)=>{(!0===t.castShadow||t.receiveShadow&&3===o)&&r.renderObject(t,...e)})),r.setRenderTarget(e),r.render(s,n.camera),r.setRenderObjectFunction(u),!0!==i.isPointLight&&3===o&&this.vsmPass(r),r.setRenderTarget(c),s.overrideMaterial=h}vsmPass(t){const{shadow:e}=this;this.vsmShadowMapVertical.setSize(e.mapSize.width,e.mapSize.height),this.vsmShadowMapHorizontal.setSize(e.mapSize.width,e.mapSize.height),t.setRenderTarget(this.vsmShadowMapVertical),Fg.material=this.vsmMaterialVertical,Fg.render(t),t.setRenderTarget(this.vsmShadowMapHorizontal),Fg.material=this.vsmMaterialHorizontal,Fg.render(t)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=rs}updateBefore(t){const{shadow:e}=this;(e.needsUpdate||e.autoUpdate)&&(this.updateShadow(t),this.shadowMap.depthTexture.version===this._depthVersionCached&&(e.needsUpdate=!1))}}class zg extends Bu{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=ss,this.light=t,this.color=new Mi,this.colorNode=Ua(this.color).setGroup(Na),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0}getCacheKey(){return Jr(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(t){const{renderer:e}=t;if(!1===e.shadowMap.enabled)return;let i=this.shadowColorNode;if(null===i){const t=this.light.shadow.shadowNode;let e;e=void 0!==t?Zs(t):(n=this.light,Zs(new Og(n,void 0))),this.shadowNode=e,this.shadowColorNode=i=this.colorNode.mul(e),this.baseColorNode=this.colorNode}var n;this.colorNode=i}setup(t){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?t.object.receiveShadow&&this.setupShadow(t):null!==this.shadowNode&&this.shadowNode.dispose()}update(){const{light:t}=this;this.color.copy(t.color).multiplyScalar(t.intensity)}}const kg=ia((t=>{const{lightDistance:e,cutoffDistance:i,decayExponent:n}=t,r=e.pow(n).max(.01).reciprocal();return i.greaterThan(0).select(r.mul(e.div(i).pow4().oneMinus().clamp().pow2()),r)})),Vg=ia((({color:t,lightViewPosition:e,cutoffDistance:i,decayExponent:n},r)=>{const s=r.context.lightingModel,a=e.sub(Hh),o=a.normalize(),l=a.length(),h=kg({lightDistance:l,cutoffDistance:i,decayExponent:n}),c=t.mul(h),u=r.context.reflectedLight;s.direct({lightDirection:o,lightColor:c,reflectedLight:u},r.stack,r)}));class Gg extends zg{static get type(){return"PointLightNode"}constructor(t=null){super(t),this.cutoffDistanceNode=Ua(0).setGroup(Na),this.decayExponentNode=Ua(0).setGroup(Na)}update(t){const{light:e}=this;super.update(t),this.cutoffDistanceNode.value=e.distance,this.decayExponentNode.value=e.decay}setup(){Vg({color:this.colorNode,lightViewPosition:Mg(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const Hg=ia((([t,e])=>{const i=t.x,n=t.y,r=t.z;let s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(1.023328).mul(n)),s=s.add(e.element(2).mul(1.023328).mul(r)),s=s.add(e.element(3).mul(1.023328).mul(i)),s=s.add(e.element(4).mul(.858086).mul(i).mul(n)),s=s.add(e.element(5).mul(.858086).mul(n).mul(r)),s=s.add(e.element(6).mul(r.mul(r).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(.858086).mul(i).mul(r)),s=s.add(e.element(8).mul(.429043).mul(go(i,i).sub(go(n,n)))),s})),Wg=new sf;class jg extends Um{constructor(t,e){super(),this.renderer=t,this.nodes=e}update(t,e,i){const n=this.renderer,r=this.nodes.getBackgroundNode(t)||t.background;let s=!1;if(null===r)n._clearColor.getRGB(Wg,ut),Wg.a=n._clearColor.a;else if(!0===r.isColor)r.getRGB(Wg,ut),Wg.a=1,s=!0;else if(!0===r.isNode){const i=this.get(t),s=r;Wg.copy(n._clearColor);let a=i.backgroundMesh;if(void 0===a){const t=Vl(xa(s).mul(yf),{getUV:()=>xf.mul(Zh),getTextureLevel:()=>_f});let e=yu();e=e.setZ(e.w);const n=new ud;n.name="Background.material",n.side=1,n.depthTest=!1,n.depthWrite=!1,n.fog=!1,n.lights=!1,n.vertexNode=e,n.colorNode=t,i.backgroundMeshNode=t,i.backgroundMesh=a=new an(new Zn(1,32,32),n),a.frustumCulled=!1,a.name="Background.mesh",a.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)}}const o=s.getCacheKey();i.backgroundCacheKey!==o&&(i.backgroundMeshNode.node=xa(s).mul(yf),i.backgroundMeshNode.needsUpdate=!0,a.material.needsUpdate=!0,i.backgroundCacheKey=o),e.unshift(a,a.geometry,a.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);if(!0===n.autoClear||!0===s){const t=i.clearColorValue;t.r=Wg.r,t.g=Wg.g,t.b=Wg.b,t.a=Wg.a,!0!==n.backend.isWebGLBackend&&!0!==n.alpha||(t.r*=t.a,t.g*=t.a,t.b*=t.a),i.depthClearValue=n._clearDepth,i.stencilClearValue=n._clearStencil,i.clearColor=!0===n.autoClearColor,i.clearDepth=!0===n.autoClearDepth,i.clearStencil=!0===n.autoClearStencil}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}let Xg=0;class $g{constructor(t="",e=[],i=0,n=[]){this.name=t,this.bindings=e,this.index=i,this.bindingsReference=n,this.id=Xg++}}class qg{constructor(t,e,i,n,r,s,a,o,l,h=[]){this.vertexShader=t,this.fragmentShader=e,this.computeShader=i,this.transforms=h,this.nodeAttributes=n,this.bindings=r,this.updateNodes=s,this.updateBeforeNodes=a,this.updateAfterNodes=o,this.monitor=l,this.usedTimes=0}createBindings(){const t=[];for(const e of this.bindings)if(!0!==e.bindings[0].groupNode.shared){const i=new $g(e.name,[],e.index,e);t.push(i);for(const t of e.bindings)i.bindings.push(t.clone())}else t.push(e);return t}}class Yg{constructor(t,e,i=null){this.isNodeAttribute=!0,this.name=t,this.type=e,this.node=i}}class Kg{constructor(t,e,i){this.isNodeUniform=!0,this.name=t,this.type=e,this.node=i.getSelf()}get value(){return this.node.value}set value(t){this.node.value=t}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class Zg{constructor(t,e){this.isNodeVar=!0,this.name=t,this.type=e}}class Jg extends Zg{constructor(t,e){super(t,e),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Qg{constructor(t,e,i=""){this.name=t,this.type=e,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let t_=0;class e_{constructor(t=null){this.id=t_++,this.nodesData=new WeakMap,this.parent=t}getData(t){let e=this.nodesData.get(t);return void 0===e&&null!==this.parent&&(e=this.parent.getData(t)),e}setData(t,e){this.nodesData.set(t,e)}}class i_{constructor(t,e){this.name=t,this.value=e,this.boundary=0,this.itemSize=0,this.offset=0}setValue(t){this.value=t}getValue(){return this.value}}class n_ extends i_{constructor(t,e=0){super(t,e),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class r_ extends i_{constructor(t,e=new Pt){super(t,e),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class s_ extends i_{constructor(t,e=new ie){super(t,e),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class a_ extends i_{constructor(t,e=new Zt){super(t,e),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class o_ extends i_{constructor(t,e=new Mi){super(t,e),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class l_ extends i_{constructor(t,e=new It){super(t,e),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class h_ extends i_{constructor(t,e=new Ie){super(t,e),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class c_ extends n_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class u_ extends r_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class d_ extends s_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class p_ extends a_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class m_ extends o_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class f_ extends l_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class g_ extends h_{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}const __=[.125,.215,.35,.446,.526,.582],y_=new Pr(-1,1,1,-1,0,1),x_=new fn(90,1),v_=new Mi;let b_=null,S_=0,T_=0;const M_=(1+Math.sqrt(5))/2,E_=1/M_,w_=[new ie(-M_,E_,0),new ie(M_,E_,0),new ie(-E_,0,M_),new ie(E_,0,M_),new ie(0,M_,-E_),new ie(0,M_,E_),new ie(-1,1,-1),new ie(1,1,-1),new ie(-1,1,1),new ie(1,1,1)],A_=[3,1,5,0,4,2],R_=jp(vh(),xh("faceIndex")).normalize(),C_=fa(R_.x,R_.y.negate(),R_.z);class N_{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(t,e=0,i=.1,n=100){b_=this._renderer.getRenderTarget(),S_=this._renderer.getActiveCubeFace(),T_=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,i,n,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=L_(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=D_(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(b_,S_,T_),t.scissorTest=!1,I_(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===h||t.mapping===c?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),b_=this._renderer.getRenderTarget(),S_=this._renderer.getActiveCubeFace(),T_=this._renderer.getActiveMipmapLevel();const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:x,minFilter:x,generateMipmaps:!1,type:C,format:I,colorSpace:ut},n=P_(t,e,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=P_(t,e,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(t){const e=[],i=[],n=[],r=[];let s=t;const a=t-4+1+__.length;for(let o=0;o<a;o++){const a=Math.pow(2,s);i.push(a);let l=1/a;o>t-4?l=__[o-t+4-1]:0===o&&(l=0),n.push(l);const h=1/(a-2),c=-h,u=1+h,d=[c,c,u,c,u,u,c,c,u,u,c,u],p=6,m=6,f=3,g=2,_=1,y=new Float32Array(f*m*p),x=new Float32Array(g*m*p),v=new Float32Array(_*m*p);for(let t=0;t<p;t++){const e=t%3*2/3-1,i=t>2?0:-1,n=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0],r=A_[t];y.set(n,f*m*r),x.set(d,g*m*r);const s=[r,r,r,r,r,r];v.set(s,_*m*r)}const b=new $i;b.setAttribute("position",new Di(y,f)),b.setAttribute("uv",new Di(x,g)),b.setAttribute("faceIndex",new Di(v,_)),e.push(b),r.push(new an(b,null)),s>4&&s--}return{lodPlanes:e,sizeLods:i,sigmas:n,lodMeshes:r}}(n)),this._blurMaterial=function(t,e,i){const n=mc(new Array(20).fill(0)),r=Ua(new ie(0,1,0)),s=Ua(0),a=oa(20),o=Ua(0),l=Ua(1),h=wh(null),c=Ua(0),u=oa(1/e),d=oa(1/i),p=oa(t),m={n:a,latitudinal:o,weights:n,poleAxis:r,outputDirection:C_,dTheta:s,samples:l,envMap:h,mipInt:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:p},f=U_("blur");return f.uniforms=m,f.fragmentNode=Yp({...m,latitudinal:o.equal(1)}),f}(n,t,e)}return n}async _compileMaterial(t){const e=new an(this._lodPlanes[0],t);await this._renderer.compile(e,y_)}_sceneToCubeUV(t,e,i,n){const r=x_;r.near=e,r.far=i;const s=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear;o.getClearColor(v_),o.autoClear=!1;let h=this._backgroundBox;if(null===h){const t=new Ri({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1});h=new an(new ln,t)}let c=!1;const u=t.background;u?u.isColor&&(h.material.color.copy(u),t.background=null,c=!0):(h.material.color.copy(v_),c=!0),o.setRenderTarget(n),o.clear(),c&&o.render(h,r);for(let e=0;e<6;e++){const i=e%3;0===i?(r.up.set(0,s[e],0),r.lookAt(a[e],0,0)):1===i?(r.up.set(0,0,s[e]),r.lookAt(0,a[e],0)):(r.up.set(0,s[e],0),r.lookAt(0,0,a[e]));const l=this._cubeSize;I_(n,i*l,e>2?l:0,l,l),o.render(t,r)}o.autoClear=l,t.background=u}_textureToCubeUV(t,e){const i=this._renderer,n=t.mapping===h||t.mapping===c;n?null===this._cubemapMaterial&&(this._cubemapMaterial=L_(t)):null===this._equirectMaterial&&(this._equirectMaterial=D_(t));const r=n?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=t;const s=this._lodMeshes[0];s.material=r;const a=this._cubeSize;I_(e,0,0,3*a,2*a),i.setRenderTarget(e),i.render(s,y_)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;const n=this._lodPlanes.length;for(let e=1;e<n;e++){const i=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),r=w_[(n-e-1)%w_.length];this._blur(t,e-1,e,i,r)}e.autoClear=i}_blur(t,e,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,i,n,"latitudinal",r),this._halfBlur(s,t,i,i,n,"longitudinal",r)}_halfBlur(t,e,i,n,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const h=this._lodMeshes[n];h.material=l;const c=l.uniforms,u=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<20;++t){const e=t/p,i=Math.exp(-e*e/2);f.push(i),0===t?g+=i:t<m&&(g+=2*i)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;t.texture.frame=(t.texture.frame||0)+1,c.envMap.value=t.texture,c.samples.value=m,c.weights.array=f,c.latitudinal.value="latitudinal"===s?1:0,a&&(c.poleAxis.value=a);const{_lodMax:_}=this;c.dTheta.value=d,c.mipInt.value=_-i;const y=this._sizeLods[n];I_(e,3*y*(n>_-4?n-_+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(h,y_)}}function P_(t,e,i){const n=new Jt(t,e,i);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function I_(t,e,i,n,r){t.viewport.set(e,i,n,r),t.scissor.set(e,i,n,r)}function U_(t){const e=new ud;return e.depthTest=!1,e.depthWrite=!1,e.blending=r,e.name=`PMREM_${t}`,e}function L_(t){const e=U_("cubemap");return e.fragmentNode=hc(t,C_),e}function D_(t){const e=U_("equirect");return e.fragmentNode=wh(t,xd(C_),0),e}const B_=new WeakMap,F_=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),O_=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),z_=t=>/e/g.test(t)?String(t).replace(/\+/g,""):(t=Number(t))+(t%1?"":".0");class k_{constructor(t,e,i){this.object=t,this.material=t&&t.material||null,this.geometry=t&&t.geometry||null,this.renderer=e,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=lf(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new e_,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let t=B_.get(this.renderer);return void 0===t&&(t=new wm,B_.set(this.renderer,t)),t}createRenderTarget(t,e,i){return new Jt(t,e,i)}createCubeRenderTarget(t,e){return new vd(t,e)}createPMREMGenerator(){return new N_(this.renderer)}includes(t){return this.nodes.includes(t)}_getBindGroup(t,e){const i=this.getBindGroupsCache(),n=[];let r,s=!0;for(const t of e)n.push(t),s=s&&!0!==t.groupNode.shared;return s?(r=i.get(n),void 0===r&&(r=new $g(t,n,this.bindingsIndexes[t].group,n),i.set(n,r))):r=new $g(t,n,this.bindingsIndexes[t].group,n),r}getBindGroupArray(t,e){const i=this.bindings[e];let n=i[t];return void 0===n&&(void 0===this.bindingsIndexes[t]&&(this.bindingsIndexes[t]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[t]=n=[]),n}getBindings(){let t=this.bindGroups;if(null===t){const e={},i=this.bindings;for(const t of hs)for(const n in i[t]){const r=i[t][n];(e[n]||(e[n]=[])).push(...r)}t=[];for(const i in e){const n=e[i],r=this._getBindGroup(i,n);t.push(r)}this.bindGroups=t}return t}sortBindingGroups(){const t=this.getBindings();t.sort(((t,e)=>t.bindings[0].groupNode.order-e.bindings[0].groupNode.order));for(let e=0;e<t.length;e++){const i=t[e];this.bindingsIndexes[i.name].group=e,i.index=e}}setHashNode(t,e){this.hashNodes[e]=t}addNode(t){!1===this.nodes.includes(t)&&(this.nodes.push(t),this.setHashNode(t,t.getHash(this)))}addSequentialNode(t){!1===this.sequentialNodes.includes(t)&&this.sequentialNodes.push(t)}buildUpdateNodes(){for(const t of this.nodes)t.getUpdateType()!==rs&&this.updateNodes.push(t.getSelf());for(const t of this.sequentialNodes){const e=t.getUpdateBeforeType(),i=t.getUpdateAfterType();e!==rs&&this.updateBeforeNodes.push(t.getSelf()),i!==rs&&this.updateAfterNodes.push(t.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(t){return t.magFilter===x||t.magFilter===v||t.magFilter===y||t.magFilter===b||t.minFilter===x||t.minFilter===v||t.minFilter===y||t.minFilter===b}addChain(t){this.chaining.push(t)}removeChain(t){if(this.chaining.pop()!==t)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(t){return t}getNodeFromHash(t){return this.hashNodes[t]}addFlow(t,e){return this.flowNodes[t].push(e),e}setContext(t){this.context=t}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(t){this.cache=t}getCache(){return this.cache}getCacheFromNode(t,e=!0){const i=this.getDataFromNode(t);return void 0===i.cache&&(i.cache=new e_(e?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(t){const e=this.getDataFromNode(t);return e.usageCount=void 0===e.usageCount?1:e.usageCount+1,e.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(t,e=null){if(null===e&&("float"===t||"int"===t||"uint"===t?e=0:"bool"===t?e=!1:"color"===t?e=new Mi:"vec2"===t?e=new Pt:"vec3"===t?e=new ie:"vec4"===t&&(e=new Zt)),"float"===t)return z_(e);if("int"===t)return`${Math.round(e)}`;if("uint"===t)return e>=0?`${Math.round(e)}u`:"0u";if("bool"===t)return e?"true":"false";if("color"===t)return`${this.getType("vec3")}( ${z_(e.r)}, ${z_(e.g)}, ${z_(e.b)} )`;const i=this.getTypeLength(t),n=this.getComponentType(t),r=t=>this.generateConst(n,t);if(2===i)return`${this.getType(t)}( ${r(e.x)}, ${r(e.y)} )`;if(3===i)return`${this.getType(t)}( ${r(e.x)}, ${r(e.y)}, ${r(e.z)} )`;if(4===i)return`${this.getType(t)}( ${r(e.x)}, ${r(e.y)}, ${r(e.z)}, ${r(e.w)} )`;if(i>4&&e&&(e.isMatrix3||e.isMatrix4))return`${this.getType(t)}( ${e.elements.map(r).join(", ")} )`;if(i>4)return`${this.getType(t)}()`;throw new Error(`NodeBuilder: Type '${t}' not found in generate constant attempt.`)}getType(t){return"color"===t?"vec3":t}hasGeometryAttribute(t){return this.geometry&&void 0!==this.geometry.getAttribute(t)}getAttribute(t,e){const i=this.attributes;for(const e of i)if(e.name===t)return e;const n=new Yg(t,e);return i.push(n),n}getPropertyName(t){return t.name}isVector(t){return/vec\d/.test(t)}isMatrix(t){return/mat\d/.test(t)}isReference(t){return"void"===t||"property"===t||"sampler"===t||"texture"===t||"cubeTexture"===t||"storageTexture"===t||"depthTexture"===t||"texture3D"===t}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(t){const e=t.type;if(t.isDataTexture){if(e===w)return"int";if(e===A)return"uint"}return"float"}getElementType(t){return"mat2"===t?"vec2":"mat3"===t?"vec3":"mat4"===t?"vec4":this.getComponentType(t)}getComponentType(t){if("float"===(t=this.getVectorType(t))||"bool"===t||"int"===t||"uint"===t)return t;const e=/(b|i|u|)(vec|mat)([2-4])/.exec(t);return null===e?null:"b"===e[1]?"bool":"i"===e[1]?"int":"u"===e[1]?"uint":"float"}getVectorType(t){return"color"===t?"vec3":"texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t?"vec4":t}getTypeFromLength(t,e="float"){if(1===t)return e;const i=F_.get(t);return("float"===e?"":e[0])+i}getTypeFromArray(t){return O_.get(t.constructor)}getTypeFromAttribute(t){let e=t;t.isInterleavedBufferAttribute&&(e=t.data);const i=e.array,n=t.itemSize,r=t.normalized;let s;return t instanceof Oi||!0===r||(s=this.getTypeFromArray(i)),this.getTypeFromLength(n,s)}getTypeLength(t){const e=this.getVectorType(t),i=/vec([2-4])/.exec(e);return null!==i?Number(i[1]):"float"===e||"bool"===e||"int"===e||"uint"===e?1:!0===/mat2/.test(t)?4:!0===/mat3/.test(t)?9:!0===/mat4/.test(t)?16:0}getVectorFromMatrix(t){return t.replace("mat","vec")}changeComponentType(t,e){return this.getTypeFromLength(this.getTypeLength(t),e)}getIntegerType(t){const e=this.getComponentType(t);return"int"===e||"uint"===e?t:this.changeComponentType(t,"int")}addStack(){return this.stack=lf(this.stack),this.stacks.push(ra()||this.stack),na(this.stack),this.stack}removeStack(){const t=this.stack;return this.stack=t.parent,na(this.stacks.pop()),t}getDataFromNode(t,e=this.shaderStage,i=null){let n=(i=null===i?t.isGlobal(this)?this.globalCache:this.cache:i).getData(t);return void 0===n&&(n={},i.setData(t,n)),void 0===n[e]&&(n[e]={}),n[e]}getNodeProperties(t,e="any"){const i=this.getDataFromNode(t,e);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(t,e){const i=this.getDataFromNode(t);let n=i.bufferAttribute;if(void 0===n){const r=this.uniforms.index++;n=new Yg("nodeAttribute"+r,e,t),this.bufferAttributes.push(n),i.bufferAttribute=n}return n}getStructTypeFromNode(t,e=this.shaderStage){const i=this.getDataFromNode(t,e);if(void 0===i.structType){const n=this.structs.index++;t.name=`StructType${n}`,this.structs[e].push(t),i.structType=t}return t}getUniformFromNode(t,e,i=this.shaderStage,n=null){const r=this.getDataFromNode(t,i,this.globalCache);let s=r.uniform;if(void 0===s){const a=this.uniforms.index++;s=new Kg(n||"nodeUniform"+a,e,t),this.uniforms[i].push(s),r.uniform=s}return s}getVarFromNode(t,e=null,i=t.getNodeType(this),n=this.shaderStage){const r=this.getDataFromNode(t,n);let s=r.variable;if(void 0===s){const t=this.vars[n]||(this.vars[n]=[]);null===e&&(e="nodeVar"+t.length),s=new Zg(e,i),t.push(s),r.variable=s}return s}getVaryingFromNode(t,e=null,i=t.getNodeType(this)){const n=this.getDataFromNode(t,"any");let r=n.varying;if(void 0===r){const t=this.varyings,s=t.length;null===e&&(e="nodeVarying"+s),r=new Jg(e,i),t.push(r),n.varying=r}return r}getCodeFromNode(t,e,i=this.shaderStage){const n=this.getDataFromNode(t);let r=n.code;if(void 0===r){const t=this.codes[i]||(this.codes[i]=[]),s=t.length;r=new Qg("nodeCode"+s,e),t.push(r),n.code=r}return r}addFlowCodeHierarchy(t,e){const{flowCodes:i,flowCodeBlock:n}=this.getDataFromNode(t);let r=!0,s=e;for(;s;){if(!0===n.get(s)){r=!1;break}s=this.getDataFromNode(s).parentNodeBlock}if(r)for(const t of i)this.addLineFlowCode(t)}addLineFlowCodeBlock(t,e,i){const n=this.getDataFromNode(t),r=n.flowCodes||(n.flowCodes=[]),s=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);r.push(e),s.set(i,!0)}addLineFlowCode(t,e=null){return""===t||(null!==e&&this.context.nodeBlock&&this.addLineFlowCodeBlock(e,t,this.context.nodeBlock),t=this.tab+t,/;\s*$/.test(t)||(t+=";\n"),this.flow.code+=t),this}addFlowCode(t){return this.flow.code+=t,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(t){return this.flowsData.get(t)}flowNode(t){const e=t.getNodeType(this),i=this.flowChildNode(t,e);return this.flowsData.set(t,i),i}buildFunctionNode(t){const e=new pg,i=this.currentFunctionNode;return this.currentFunctionNode=e,e.code=this.buildFunctionCode(t),this.currentFunctionNode=i,e}flowShaderNode(t){const e=t.layout,i={[Symbol.iterator](){let t=0;const e=Object.values(this);return{next:()=>({value:e[t],done:t++>=e.length})}}};for(const t of e.inputs)i[t.name]=new af(t.type,t.name);t.layout=null;const n=t.call(i),r=this.flowStagesNode(n,e.type);return t.layout=e,r}flowStagesNode(t,e=null){const i=this.flow,n=this.vars,r=this.cache,s=this.buildStage,a=this.stack,o={code:""};this.flow=o,this.vars={},this.cache=new e_,this.stack=lf();for(const i of ls)this.setBuildStage(i),o.result=t.build(this,e);return o.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=n,this.cache=r,this.stack=a,this.setBuildStage(s),o}getFunctionOperator(){return null}flowChildNode(t,e=null){const i=this.flow,n={code:""};return this.flow=n,n.result=t.build(this,e),this.flow=i,n}flowNodeFromShaderStage(t,e,i=null,n=null){const r=this.shaderStage;this.setShaderStage(t);const s=this.flowChildNode(e,i);return null!==n&&(s.code+=`${this.tab+n} = ${s.result};\n`),this.flowCode[t]=this.flowCode[t]+s.code,this.setShaderStage(r),s}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(t,e){return`${this.getType(t)} ${e}`}getVars(t){let e="";const i=this.vars[t];if(void 0!==i)for(const t of i)e+=`${this.getVar(t.type,t.name)}; `;return e}getUniforms(){console.warn("Abstract function.")}getCodes(t){const e=this.codes[t];let i="";if(void 0!==e)for(const t of e)i+=t.code+"\n";return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(t){this.shaderStage=t}getShaderStage(){return this.shaderStage}setBuildStage(t){this.buildStage=t}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:t,material:e,renderer:i}=this;if(null!==e){let t=i.library.fromMaterial(e);null===t&&(console.error(`NodeMaterial: Material "${e.type}" is not compatible.`),t=new ud),t.build(this)}else this.addFlow("compute",t);for(const t of ls){this.setBuildStage(t),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const e of hs){this.setShaderStage(e);const i=this.flowNodes[e];for(const e of i)"generate"===t?this.flowNode(e):e.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(t,e){if("float"===e||"int"===e||"uint"===e)return new c_(t);if("vec2"===e||"ivec2"===e||"uvec2"===e)return new u_(t);if("vec3"===e||"ivec3"===e||"uvec3"===e)return new d_(t);if("vec4"===e||"ivec4"===e||"uvec4"===e)return new p_(t);if("color"===e)return new m_(t);if("mat3"===e)return new f_(t);if("mat4"===e)return new g_(t);throw new Error(`Uniform "${e}" not declared.`)}createNodeMaterial(t="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${t}() instead.`)}format(t,e,i){if((e=this.getVectorType(e))===(i=this.getVectorType(i))||null===i||this.isReference(i))return t;const n=this.getTypeLength(e),r=this.getTypeLength(i);return 16===n&&9===r?`${this.getType(i)}(${t}[0].xyz, ${t}[1].xyz, ${t}[2].xyz)`:9===n&&4===r?`${this.getType(i)}(${t}[0].xy, ${t}[1].xy)`:n>4||r>4||0===r?t:n===r?`${this.getType(i)}( ${t} )`:n>r?this.format(`${t}.${"xyz".slice(0,r)}`,this.getTypeFromLength(r,this.getComponentType(e)),i):4===r&&n>1?`${this.getType(i)}( ${this.format(t,e,"vec3")}, 1.0 )`:2===n?`${this.getType(i)}( ${this.format(t,e,"vec2")}, 0.0 )`:(1===n&&r>1&&e!==this.getComponentType(i)&&(t=`${this.getType(this.getComponentType(i))}( ${t} )`),`${this.getType(i)}( ${t} )`)}getSignature(){return`// Three.js r${n} - Node System\n`}}class V_{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(t,e){let i=t.get(e);return void 0===i&&(i={renderMap:new WeakMap,frameMap:new WeakMap},t.set(e,i)),i}updateBeforeNode(t){const e=t.getUpdateBeforeType(),i=t.updateReference(this);if(e===ss){const{frameMap:e}=this._getMaps(this.updateBeforeMap,i);e.get(i)!==this.frameId&&!1!==t.updateBefore(this)&&e.set(i,this.frameId)}else if(e===as){const{renderMap:e}=this._getMaps(this.updateBeforeMap,i);e.get(i)!==this.renderId&&!1!==t.updateBefore(this)&&e.set(i,this.renderId)}else e===os&&t.updateBefore(this)}updateAfterNode(t){const e=t.getUpdateAfterType(),i=t.updateReference(this);if(e===ss){const{frameMap:e}=this._getMaps(this.updateAfterMap,i);e.get(i)!==this.frameId&&!1!==t.updateAfter(this)&&e.set(i,this.frameId)}else if(e===as){const{renderMap:e}=this._getMaps(this.updateAfterMap,i);e.get(i)!==this.renderId&&!1!==t.updateAfter(this)&&e.set(i,this.renderId)}else e===os&&t.updateAfter(this)}updateNode(t){const e=t.getUpdateType(),i=t.updateReference(this);if(e===ss){const{frameMap:e}=this._getMaps(this.updateMap,i);e.get(i)!==this.frameId&&!1!==t.update(this)&&e.set(i,this.frameId)}else if(e===as){const{renderMap:e}=this._getMaps(this.updateMap,i);e.get(i)!==this.renderId&&!1!==t.update(this)&&e.set(i,this.renderId)}else e===os&&t.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class G_{constructor(t,e,i=null,n="",r=!1){this.type=t,this.name=e,this.count=i,this.qualifier=n,this.isConst=r}}G_.isNodeFunctionInput=!0;class H_ extends zg{static get type(){return"DirectionalLightNode"}constructor(t=null){super(t)}setup(t){super.setup(t);const e=t.context.lightingModel,i=this.colorNode,n=Eg(this.light),r=t.context.reflectedLight;e.direct({lightDirection:n,lightColor:i,reflectedLight:r},t.stack,t)}}const W_=new Ie,j_=new Ie;let X_=null;class $_ extends zg{static get type(){return"RectAreaLightNode"}constructor(t=null){super(t),this.halfHeight=Ua(new ie).setGroup(Na),this.halfWidth=Ua(new ie).setGroup(Na),this.updateType=as}update(t){super.update(t);const{light:e}=this,i=t.camera.matrixWorldInverse;j_.identity(),W_.copy(e.matrixWorld),W_.premultiply(i),j_.extractRotation(W_),this.halfWidth.value.set(.5*e.width,0,0),this.halfHeight.value.set(0,.5*e.height,0),this.halfWidth.value.applyMatrix4(j_),this.halfHeight.value.applyMatrix4(j_)}setup(t){let e,i;super.setup(t),t.isAvailable("float32Filterable")?(e=wh(X_.LTC_FLOAT_1),i=wh(X_.LTC_FLOAT_2)):(e=wh(X_.LTC_HALF_1),i=wh(X_.LTC_HALF_2));const{colorNode:n,light:r}=this,s=t.context.lightingModel,a=Mg(r),o=t.context.reflectedLight;s.directRectArea({lightColor:n,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:o,ltc_1:e,ltc_2:i},t.stack,t)}static setLTC(t){X_=t}}class q_ extends zg{static get type(){return"SpotLightNode"}constructor(t=null){super(t),this.coneCosNode=Ua(0).setGroup(Na),this.penumbraCosNode=Ua(0).setGroup(Na),this.cutoffDistanceNode=Ua(0).setGroup(Na),this.decayExponentNode=Ua(0).setGroup(Na)}update(t){super.update(t);const{light:e}=this;this.coneCosNode.value=Math.cos(e.angle),this.penumbraCosNode.value=Math.cos(e.angle*(1-e.penumbra)),this.cutoffDistanceNode.value=e.distance,this.decayExponentNode.value=e.decay}getSpotAttenuation(t){const{coneCosNode:e,penumbraCosNode:i}=this;return Dl(e,i,t)}setup(t){super.setup(t);const e=t.context.lightingModel,{colorNode:i,cutoffDistanceNode:n,decayExponentNode:r,light:s}=this,a=Mg(s).sub(Hh),o=a.normalize(),l=o.dot(Eg(s)),h=this.getSpotAttenuation(l),c=a.length(),u=kg({lightDistance:c,cutoffDistance:n,decayExponent:r}),d=i.mul(h).mul(u),p=t.context.reflectedLight;e.direct({lightDirection:o,lightColor:d,reflectedLight:p},t.stack,t)}}class Y_ extends q_{static get type(){return"IESSpotLightNode"}getSpotAttenuation(t){const e=this.light.iesMap;let i=null;if(e&&!0===e.isTexture){const n=t.acos().mul(1/Math.PI);i=wh(e,ua(n,0),0).r}else i=super.getSpotAttenuation(t);return i}}class K_ extends zg{static get type(){return"AmbientLightNode"}constructor(t=null){super(t)}setup({context:t}){t.irradiance.addAssign(this.colorNode)}}class Z_ extends zg{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=Tg(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Ua(new Mi).setGroup(Na)}update(t){const{light:e}=this;super.update(t),this.lightPositionNode.object3d=e,this.groundColorNode.value.copy(e.groundColor).multiplyScalar(e.intensity)}setup(t){const{colorNode:e,groundColorNode:i,lightDirectionNode:n}=this,r=Kh.dot(n).mul(.5).add(.5),s=Il(i,e,r);t.context.irradiance.addAssign(s)}}class J_ extends zg{static get type(){return"LightProbeNode"}constructor(t=null){super(t);const e=[];for(let t=0;t<9;t++)e.push(new ie);this.lightProbe=mc(e)}update(t){const{light:e}=this;super.update(t);for(let t=0;t<9;t++)this.lightProbe.array[t].copy(e.sh.coefficients[t]).multiplyScalar(e.intensity)}setup(t){const e=Hg(Zh,this.lightProbe);t.context.irradiance.addAssign(e)}}class Q_{parseFunction(){console.warn("Abstract function.")}}class ty{constructor(t,e,i="",n=""){this.type=t,this.inputs=e,this.name=i,this.precision=n}getCode(){console.warn("Abstract function.")}}ty.isNodeFunction=!0;const ey=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,iy=/[a-z_0-9]+/gi;class ny extends ty{constructor(t){const{type:e,inputs:i,name:n,precision:r,inputsCode:s,blockCode:a,headerCode:o}=(t=>{const e=(t=t.trim()).indexOf("#pragma main"),i=-1!==e?t.slice(e+12):t,n=i.match(ey);if(null!==n&&5===n.length){const r=n[4],s=[];let a=null;for(;null!==(a=iy.exec(r));)s.push(a);const o=[];let l=0;for(;l<s.length;){const t="const"===s[l][0];!0===t&&l++;let e=s[l][0];"in"===e||"out"===e||"inout"===e?l++:e="";const i=s[l++][0];let n=Number.parseInt(s[l][0]);!1===Number.isNaN(n)?l++:n=null;const r=s[l++][0];o.push(new G_(i,r,n,e,t))}const h=i.substring(n[0].length),c=void 0!==n[3]?n[3]:"";return{type:n[2],inputs:o,name:c,precision:void 0!==n[1]?n[1]:"",inputsCode:r,blockCode:h,headerCode:-1!==e?t.slice(0,e):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(t);super(e,i,n,r),this.inputsCode=s,this.blockCode=a,this.headerCode=o}getCode(t=this.name){let e;const i=this.blockCode;if(""!==i){const{type:n,inputsCode:r,headerCode:s,precision:a}=this;let o=`${n} ${t} ( ${r.trim()} )`;""!==a&&(o=`${a} ${o}`),e=s+o+i}else e="";return e}}class ry extends Q_{parseFunction(t){return new ny(t)}}const sy=new WeakMap;class ay extends Um{constructor(t,e){super(),this.renderer=t,this.backend=e,this.nodeFrame=new V_,this.nodeBuilderCache=new Map,this.callHashCache=new wm,this.groupsData=new wm}updateGroup(t){const e=t.groupNode,i=e.name;if(i===Pa.name)return!0;if(i===Na.name){const e=this.get(t),i=this.nodeFrame.renderId;return e.renderId!==i&&(e.renderId=i,!0)}if(i===Ca.name){const e=this.get(t),i=this.nodeFrame.frameId;return e.frameId!==i&&(e.frameId=i,!0)}const n=[e,t];let r=this.groupsData.get(n);return void 0===r&&this.groupsData.set(n,r={}),r.version!==e.version&&(r.version=e.version,!0)}getForRenderCacheKey(t){return t.initialCacheKey}getForRender(t){const e=this.get(t);let i=e.nodeBuilderState;if(void 0===i){const{nodeBuilderCache:n}=this,r=this.getForRenderCacheKey(t);if(i=n.get(r),void 0===i){const e=this.backend.createNodeBuilder(t.object,this.renderer);e.scene=t.scene,e.material=t.material,e.camera=t.camera,e.context.material=t.material,e.lightsNode=t.lightsNode,e.environmentNode=this.getEnvironmentNode(t.scene),e.fogNode=this.getFogNode(t.scene),e.clippingContext=t.clippingContext,e.build(),i=this._createNodeBuilderState(e),n.set(r,i)}i.usedTimes++,e.nodeBuilderState=i}return i}delete(t){if(t.isRenderObject){const e=this.get(t).nodeBuilderState;e.usedTimes--,0===e.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(t))}return super.delete(t)}getForCompute(t){const e=this.get(t);let i=e.nodeBuilderState;if(void 0===i){const n=this.backend.createNodeBuilder(t,this.renderer);n.build(),i=this._createNodeBuilderState(n),e.nodeBuilderState=i}return i}_createNodeBuilderState(t){return new qg(t.vertexShader,t.fragmentShader,t.computeShader,t.getAttributesArray(),t.getBindings(),t.updateNodes,t.updateBeforeNodes,t.updateAfterNodes,t.monitor,t.transforms)}getEnvironmentNode(t){return t.environmentNode||this.get(t).environmentNode||null}getBackgroundNode(t){return t.backgroundNode||this.get(t).backgroundNode||null}getFogNode(t){return t.fogNode||this.get(t).fogNode||null}getCacheKey(t,e){const i=[t,e],n=this.renderer.info.calls;let r=this.callHashCache.get(i);if(void 0===r||r.callId!==n){const s=this.getEnvironmentNode(t),a=this.getFogNode(t),o=[];e&&o.push(e.getCacheKey(!0)),s&&o.push(s.getCacheKey()),a&&o.push(a.getCacheKey()),o.push(this.renderer.shadowMap.enabled?1:0),r={callId:n,cacheKey:Zr(o)},this.callHashCache.set(i,r)}return r.cacheKey}updateScene(t){this.updateEnvironment(t),this.updateFog(t),this.updateBackground(t)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(t){const e=this.get(t),i=t.background;if(i){const n=0===t.backgroundBlurriness&&e.backgroundBlurriness>0||t.backgroundBlurriness>0&&0===e.backgroundBlurriness;if(e.background!==i||n){let n=null;if(!0===i.isCubeTexture||i.mapping===u||i.mapping===d||306===i.mapping)if(t.backgroundBlurriness>0||306===i.mapping)n=Qp(i);else{let t;t=!0===i.isCubeTexture?hc(i):wh(i),n=Ed(t)}else!0===i.isTexture?n=wh(i,Wu.flipY()).setUpdateMatrix(!0):!0!==i.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",i);e.backgroundNode=n,e.background=i,e.backgroundBlurriness=t.backgroundBlurriness}}else e.backgroundNode&&(delete e.backgroundNode,delete e.background)}updateFog(t){const e=this.get(t),i=t.fog;if(i){if(e.fog!==i){let t=null;if(i.isFogExp2){const e=_c("color","color",i).setGroup(Na),n=_c("density","float",i).setGroup(Na);t=xg(e,n)}else if(i.isFog){const e=_c("color","color",i).setGroup(Na),n=_c("near","float",i).setGroup(Na),r=_c("far","float",i).setGroup(Na);t=_g(e,n,r)}else console.error("WebGPUNodes: Unsupported fog configuration.",i);e.fogNode=t,e.fog=i}}else delete e.fogNode,delete e.fog}updateEnvironment(t){const e=this.get(t),i=t.environment;if(i){if(e.environment!==i){let t=null;!0===i.isCubeTexture?t=hc(i):!0===i.isTexture?t=wh(i):console.error("Nodes: Unsupported environment configuration.",i),e.environmentNode=t,e.environment=i}}else e.environmentNode&&(delete e.environmentNode,delete e.environment)}getNodeFrame(t=this.renderer,e=null,i=null,n=null,r=null){const s=this.nodeFrame;return s.renderer=t,s.scene=e,s.object=i,s.camera=n,s.material=r,s}getNodeFrameForRender(t){return this.getNodeFrame(t.renderer,t.scene,t.object,t.camera,t.material)}getOutputCacheKey(){const t=this.renderer;return t.toneMapping+","+t.currentColorSpace}hasOutputChange(t){return sy.get(t)!==this.getOutputCacheKey()}getOutputNode(t){const e=this.renderer,i=this.getOutputCacheKey(),n=wh(t,Wu).renderOutput(e.toneMapping,e.currentColorSpace);return sy.set(t,i),n}updateBefore(t){const e=t.getNodeBuilderState();for(const i of e.updateBeforeNodes)this.getNodeFrameForRender(t).updateBeforeNode(i)}updateAfter(t){const e=t.getNodeBuilderState();for(const i of e.updateAfterNodes)this.getNodeFrameForRender(t).updateAfterNode(i)}updateForCompute(t){const e=this.getNodeFrame(),i=this.getForCompute(t);for(const t of i.updateNodes)e.updateNode(t)}updateForRender(t){const e=this.getNodeFrameForRender(t),i=t.getNodeBuilderState();for(const t of i.updateNodes)e.updateNode(t)}needsRefresh(t){const e=this.getNodeFrameForRender(t);return t.getMonitor().needsRefresh(t,e)}dispose(){super.dispose(),this.nodeFrame=new V_,this.nodeBuilderCache=new Map}}class oy{constructor(t,e){this.scene=t,this.camera=e}clone(){return Object.assign(new this.constructor,this)}}class ly{constructor(){this.lists=new wm}get(t,e){const i=this.lists,n=[t,e];let r=i.get(n);return void 0===r&&(r=new oy(t,e),i.set(n,r)),r}dispose(){this.lists=new wm}}class hy{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(t){if(t.isNodeMaterial)return t;let e=null;const i=this.getMaterialNodeClass(t.type);if(null!==i){e=new i;for(const i in t)e[i]=t[i]}return e}addToneMapping(t,e){this.addType(t,e,this.toneMappingNodes)}getToneMappingFunction(t){return this.toneMappingNodes.get(t)||null}getMaterialNodeClass(t){return this.materialNodes.get(t)||null}addMaterial(t,e){this.addType(t,e.type,this.materialNodes)}getLightNodeClass(t){return this.lightNodes.get(t)||null}addLight(t,e){this.addClass(t,e,this.lightNodes)}addType(t,e,i){if(i.has(e))console.warn(`Redefinition of node ${e}`);else{if("function"!=typeof t)throw new Error(`Node class ${t.name} is not a class.`);if("function"==typeof e||"object"==typeof e)throw new Error(`Base class ${e} is not a class.`);i.set(e,t)}}addClass(t,e,i){if(i.has(e))console.warn(`Redefinition of node ${e.name}`);else{if("function"!=typeof t)throw new Error(`Node class ${t.name} is not a class.`);if("function"!=typeof e)throw new Error(`Base class ${e.name} is not a class.`);i.set(e,t)}}}const cy=new Rg;class uy extends wm{constructor(){super()}createNode(t=[]){return(new Rg).setLights(t)}getNode(t,e){if(t.isQuadMesh)return cy;const i=[t,e];let n=this.get(i);return void 0===n&&(n=this.createNode(),this.set(i,n)),n}}const dy=new bn,py=new Pt,my=new Zt,fy=new Ln,gy=new Ie,_y=new Zt;class yy{constructor(t,e={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:n=!0,depth:r=!0,stencil:s=!1,antialias:a=!1,samples:o=0,getFallback:l=null}=e;this.domElement=t.getDomElement(),this.backend=t,this.samples=o||!0===a?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=i,this.outputColorSpace=ct,this.toneMapping=0,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=s,this.clippingPlanes=[],this.info=new zm,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new hy,this.lighting=new uy,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Zt(0,0,this._width,this._height),this._scissor=new Zt(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new pf(new ud),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=!0===this.alpha?0:1;this._clearColor=new sf(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:1},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(t,e,i)=>{await this.compileAsync(t,e);const n=this._renderLists.get(t,e),r=this._renderContexts.get(t,e,this._renderTarget),s=t.overrideMaterial||i.material,a=this._objects.get(i,s,t,e,n.lightsNode,r),{fragmentShader:o,vertexShader:l}=a.getNodeBuilderState();return{fragmentShader:o,vertexShader:l}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(t,e)=>{let i=this.backend;try{await i.init(this)}catch(t){if(null===this._getFallback)return void e(t);try{this.backend=i=this._getFallback(t),await i.init(this)}catch(t){return void e(t)}}this._nodes=new ay(this,i),this._animation=new Em(this._nodes,this.info),this._attributes=new Dm(i),this._background=new jg(this,this._nodes),this._geometries=new Om(this._attributes,this.info),this._textures=new rf(this,i,this.info),this._pipelines=new jm(i,this._nodes),this._bindings=new Xm(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Im(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Zm(this.lighting),this._bundles=new ly,this._renderContexts=new ef,this._initialized=!0,t()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(t,e,i=null){if(!0===this._isDeviceLost)return;!1===this._initialized&&await this.init();const n=this._nodes.nodeFrame,r=n.renderId,s=this._currentRenderContext,a=this._currentRenderObjectFunction,o=this._compilationPromises,l=!0===t.isScene?t:dy;null===i&&(i=t);const h=this._renderTarget,c=this._renderContexts.get(i,e,h),u=this._activeMipmapLevel,d=[];this._currentRenderContext=c,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=d,n.renderId++,n.update(),c.depth=this.depth,c.stencil=this.stencil,c.clippingContext||(c.clippingContext=new Rm),c.clippingContext.updateGlobal(this,e),l.onBeforeRender(this,t,e,h);const p=this._renderLists.get(t,e);if(p.begin(),this._projectObject(t,e,0,p),i!==t&&i.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&p.pushLight(t)})),p.finish(),null!==h){this._textures.updateRenderTarget(h,u);const t=this._textures.get(h);c.textures=t.textures,c.depthTexture=t.depthTexture}else c.textures=null,c.depthTexture=null;this._nodes.updateScene(l),this._background.update(l,p,c);const m=p.opaque,f=p.transparent,g=p.lightsNode;!0===this.opaque&&m.length>0&&this._renderObjects(m,e,l,g),!0===this.transparent&&f.length>0&&this._renderTransparents(f,e,l,g),n.renderId=r,this._currentRenderContext=s,this._currentRenderObjectFunction=a,this._compilationPromises=o,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(d)}async renderAsync(t,e){!1===this._initialized&&await this.init();const i=this._renderScene(t,e);await this.backend.resolveTimestampAsync(i,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(t){return this._mrt=t,this}getMRT(){return this._mrt}_onDeviceLost(t){let e=`THREE.WebGPURenderer: ${t.api} Device Lost:\n\nMessage: ${t.message}`;t.reason&&(e+=`\nReason: ${t.reason}`),console.error(e),this._isDeviceLost=!0}_renderBundle(t,e,i){const{bundleGroup:n,camera:r,renderList:s}=t,a=this._currentRenderContext,o=this._bundles.get(n,r),l=this.backend.get(o);void 0===l.renderContexts&&(l.renderContexts=new Set);const h=n.version!==l.version,c=!1===l.renderContexts.has(a)||h;if(l.renderContexts.add(a),c){this.backend.beginBundle(a),(void 0===l.renderObjects||h)&&(l.renderObjects=[]),this._currentRenderBundle=o;const t=s.opaque;!0===this.opaque&&t.length>0&&this._renderObjects(t,r,e,i),this._currentRenderBundle=null,this.backend.finishBundle(a,o),l.version=n.version}else{const{renderObjects:t}=l;for(let e=0,i=t.length;e<i;e++){const i=t[e];this._nodes.needsRefresh(i)&&(this._nodes.updateBefore(i),this._nodes.updateForRender(i),this._bindings.updateForRender(i),this._nodes.updateAfter(i))}}this.backend.addBundle(a,o)}render(t,e){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(t,e);this._renderScene(t,e)}_getFrameBufferTarget(){const{currentToneMapping:t,currentColorSpace:e}=this;if(!1==(0!==t)&&!1==(e!==ut))return null;const{width:i,height:n}=this.getDrawingBufferSize(py),{depth:r,stencil:s}=this;let a=this._frameBufferTarget;return null===a&&(a=new Jt(i,n,{depthBuffer:r,stencilBuffer:s,type:C,format:I,colorSpace:ut,generateMipmaps:!1,minFilter:x,magFilter:x,samples:this.samples}),a.isPostProcessingRenderTarget=!0,this._frameBufferTarget=a),a.depthBuffer=r,a.stencilBuffer=s,a.setSize(i,n),a.viewport.copy(this._viewport),a.scissor.copy(this._scissor),a.viewport.multiplyScalar(this._pixelRatio),a.scissor.multiplyScalar(this._pixelRatio),a.scissorTest=this._scissorTest,a}_renderScene(t,e,i=!0){if(!0===this._isDeviceLost)return;const n=i?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,s=r.renderId,a=this._currentRenderContext,o=this._currentRenderObjectFunction,l=!0===t.isScene?t:dy,h=this._renderTarget,c=this._activeCubeFace,u=this._activeMipmapLevel;let d;null!==n?(d=n,this.setRenderTarget(d)):d=h;const p=this._renderContexts.get(t,e,d);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const m=this.coordinateSystem;e.coordinateSystem!==m&&(e.coordinateSystem=m,e.updateProjectionMatrix()),!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld();let f=this._viewport,g=this._scissor,_=this._pixelRatio;null!==d&&(f=d.viewport,g=d.scissor,_=1),this.getDrawingBufferSize(py),my.set(0,0,py.width,py.height);const y=void 0===f.minDepth?0:f.minDepth,x=void 0===f.maxDepth?1:f.maxDepth;p.viewportValue.copy(f).multiplyScalar(_).floor(),p.viewportValue.width>>=u,p.viewportValue.height>>=u,p.viewportValue.minDepth=y,p.viewportValue.maxDepth=x,p.viewport=!1===p.viewportValue.equals(my),p.scissorValue.copy(g).multiplyScalar(_).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(my),p.scissorValue.width>>=u,p.scissorValue.height>>=u,p.clippingContext||(p.clippingContext=new Rm),p.clippingContext.updateGlobal(this,e),l.onBeforeRender(this,t,e,d),gy.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),fy.setFromProjectionMatrix(gy,m);const v=this._renderLists.get(t,e);if(v.begin(),this._projectObject(t,e,0,v),v.finish(),!0===this.sortObjects&&v.sort(this._opaqueSort,this._transparentSort),null!==d){this._textures.updateRenderTarget(d,u);const t=this._textures.get(d);p.textures=t.textures,p.depthTexture=t.depthTexture,p.width=t.width,p.height=t.height,p.renderTarget=d,p.depth=d.depthBuffer,p.stencil=d.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=u,p.height>>=u,p.activeCubeFace=c,p.activeMipmapLevel=u,p.occlusionQueryCount=v.occlusionQueryCount,this._nodes.updateScene(l),this._background.update(l,v,p),this.backend.beginRender(p);const{bundles:b,lightsNode:S,transparentDoublePass:T,transparent:M,opaque:E}=v;if(b.length>0&&this._renderBundles(b,l,S),!0===this.opaque&&E.length>0&&this._renderObjects(E,e,l,S),!0===this.transparent&&M.length>0&&this._renderTransparents(M,T,e,l,S),this.backend.finishRender(p),r.renderId=s,this._currentRenderContext=a,this._currentRenderObjectFunction=o,null!==n){this.setRenderTarget(h,c,u);const t=this._quad;this._nodes.hasOutputChange(d.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(d.texture),t.material.needsUpdate=!0),this._renderScene(t,t.camera,!1)}return l.onAfterRender(this,t,e,d),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(t){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(t)}async getArrayBufferAsync(t){return await this.backend.getArrayBufferAsync(t)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(t){return t.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(t){return t.set(this._width,this._height)}setPixelRatio(t=1){this._pixelRatio!==t&&(this._pixelRatio=t,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(t,e,i){this._width=t,this._height=e,this._pixelRatio=i,this.domElement.width=Math.floor(t*i),this.domElement.height=Math.floor(e*i),this.setViewport(0,0,t,e),this._initialized&&this.backend.updateSize()}setSize(t,e,i=!0){this._width=t,this._height=e,this.domElement.width=Math.floor(t*this._pixelRatio),this.domElement.height=Math.floor(e*this._pixelRatio),!0===i&&(this.domElement.style.width=t+"px",this.domElement.style.height=e+"px"),this.setViewport(0,0,t,e),this._initialized&&this.backend.updateSize()}setOpaqueSort(t){this._opaqueSort=t}setTransparentSort(t){this._transparentSort=t}getScissor(t){const e=this._scissor;return t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,t}setScissor(t,e,i,n){const r=this._scissor;t.isVector4?r.copy(t):r.set(t,e,i,n)}getScissorTest(){return this._scissorTest}setScissorTest(t){this._scissorTest=t,this.backend.setScissorTest(t)}getViewport(t){return t.copy(this._viewport)}setViewport(t,e,i,n,r=0,s=1){const a=this._viewport;t.isVector4?a.copy(t):a.set(t,e,i,n),a.minDepth=r,a.maxDepth=s}getClearColor(t){return t.copy(this._clearColor)}setClearColor(t,e=1){this._clearColor.set(t),this._clearColor.a=e}getClearAlpha(){return this._clearColor.a}setClearAlpha(t){this._clearColor.a=t}getClearDepth(){return this._clearDepth}setClearDepth(t){this._clearDepth=t}getClearStencil(){return this._clearStencil}setClearStencil(t){this._clearStencil=t}isOccluded(t){const e=this._currentRenderContext;return e&&this.backend.isOccluded(e,t)}clear(t=!0,e=!0,i=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(t,e,i);const n=this._renderTarget||this._getFrameBufferTarget();let r=null;if(null!==n&&(this._textures.updateRenderTarget(n),r=this._textures.get(n)),this.backend.clear(t,e,i,r),null!==n&&null===this._renderTarget){const t=this._quad;this._nodes.hasOutputChange(n.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(n.texture),t.material.needsUpdate=!0),this._renderScene(t,t.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(t=!0,e=!0,i=!0){!1===this._initialized&&await this.init(),this.clear(t,e,i)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return null!==this._renderTarget?0:this.toneMapping}get currentColorSpace(){return null!==this._renderTarget?ut:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(t,e=0,i=0){this._renderTarget=t,this._activeCubeFace=e,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(t){this._renderObjectFunction=t}getRenderObjectFunction(){return this._renderObjectFunction}compute(t){if(!0===this.isDeviceLost)return;if(!1===this._initialized)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(t);const e=this._nodes.nodeFrame,i=e.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,e.renderId=this.info.calls;const n=this.backend,r=this._pipelines,s=this._bindings,a=this._nodes,o=Array.isArray(t)?t:[t];if(void 0===o[0]||!0!==o[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");n.beginCompute(t);for(const e of o){if(!1===r.has(e)){const t=()=>{e.removeEventListener("dispose",t),r.delete(e),s.delete(e),a.delete(e)};e.addEventListener("dispose",t);const i=e.onInitFunction;null!==i&&i.call(e,{renderer:this})}a.updateForCompute(e),s.updateForCompute(e);const i=s.getForCompute(e),o=r.getForCompute(e,i);n.compute(t,e,i,o)}n.finishCompute(t),e.renderId=i}async computeAsync(t){!1===this._initialized&&await this.init(),this.compute(t),await this.backend.resolveTimestampAsync(t,"compute")}async hasFeatureAsync(t){return!1===this._initialized&&await this.init(),this.backend.hasFeature(t)}hasFeature(t){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(t)}copyFramebufferToTexture(t,e=null){if(null!==e)if(e.isVector2)e=_y.set(e.x,e.y,t.image.width,t.image.height).floor();else{if(!e.isVector4)return void console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");e=_y.copy(e).floor()}else e=_y.set(0,0,t.image.width,t.image.height);let i,n=this._currentRenderContext;null!==n?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),null!==i&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(t,{renderTarget:i}),this.backend.copyFramebufferToTexture(t,n,e)}copyTextureToTexture(t,e,i=null,n=null,r=0){this._textures.updateTexture(t),this._textures.updateTexture(e),this.backend.copyTextureToTexture(t,e,i,n,r)}readRenderTargetPixelsAsync(t,e,i,n,r,s=0,a=0){return this.backend.copyTextureToBuffer(t.textures[s],e,i,n,r,a)}_projectObject(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)n.pushLight(t);else if(t.isSprite){if(!t.frustumCulled||fy.intersectsSprite(t)){!0===this.sortObjects&&_y.setFromMatrixPosition(t.matrixWorld).applyMatrix4(gy);const{geometry:e,material:r}=t;r.visible&&n.push(t,e,r,i,_y.z,null)}}else if(t.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||fy.intersectsObject(t))){const{geometry:e,material:r}=t;if(!0===this.sortObjects&&(null===e.boundingSphere&&e.computeBoundingSphere(),_y.copy(e.boundingSphere.center).applyMatrix4(t.matrixWorld).applyMatrix4(gy)),Array.isArray(r)){const s=e.groups;for(let a=0,o=s.length;a<o;a++){const o=s[a],l=r[o.materialIndex];l&&l.visible&&n.push(t,e,l,i,_y.z,o)}}else r.visible&&n.push(t,e,r,i,_y.z,null)}if(!0===t.isBundleGroup&&void 0!==this.backend.beginBundle){const i=n;(n=this._renderLists.get(t,e)).begin(),i.pushBundle({bundleGroup:t,camera:e,renderList:n}),n.finish()}const r=t.children;for(let t=0,s=r.length;t<s;t++)this._projectObject(r[t],e,i,n)}_renderBundles(t,e,i){for(const n of t)this._renderBundle(n,e,i)}_renderTransparents(t,e,i,n,r){if(e.length>0){for(const{material:t}of e)t.side=1;this._renderObjects(e,i,n,r,"backSide");for(const{material:t}of e)t.side=0;this._renderObjects(t,i,n,r);for(const{material:t}of e)t.side=2}else this._renderObjects(t,i,n,r)}_renderObjects(t,e,i,n,r=null){for(let s=0,a=t.length;s<a;s++){const a=t[s],{object:o,geometry:l,material:h,group:c}=a;if(e.isArrayCamera){const t=e.cameras;for(let e=0,s=t.length;e<s;e++){const s=t[e];if(o.layers.test(s.layers)){const t=s.viewport,e=void 0===t.minDepth?0:t.minDepth,a=void 0===t.maxDepth?1:t.maxDepth,u=this._currentRenderContext.viewportValue;u.copy(t).multiplyScalar(this._pixelRatio).floor(),u.minDepth=e,u.maxDepth=a,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(o,i,s,l,h,c,n,r)}}}else this._currentRenderObjectFunction(o,i,e,l,h,c,n,r)}}renderObject(t,e,i,n,r,s,a,o=null){let l,h,c;if(t.onBeforeRender(this,e,i,n,r,s),null!==e.overrideMaterial){const t=e.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(l=t.positionNode,t.positionNode=r.positionNode),t.isShadowNodeMaterial&&(t.side=null===r.shadowSide?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(c=t.depthNode,t.depthNode=r.depthNode),r.shadowNode&&r.shadowNode.isNode&&(h=t.fragmentNode,t.fragmentNode=r.shadowNode),this.localClippingEnabled&&(r.clipShadows?(t.clippingPlanes!==r.clippingPlanes&&(t.clippingPlanes=r.clippingPlanes,t.needsUpdate=!0),t.clipIntersection!==r.clipIntersection&&(t.clipIntersection=r.clipIntersection)):Array.isArray(t.clippingPlanes)&&(t.clippingPlanes=null,t.needsUpdate=!0))),r=t}!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,this._handleObjectFunction(t,r,e,i,a,s,"backSide"),r.side=0,this._handleObjectFunction(t,r,e,i,a,s,o),r.side=2):this._handleObjectFunction(t,r,e,i,a,s,o),void 0!==l&&(e.overrideMaterial.positionNode=l),void 0!==c&&(e.overrideMaterial.depthNode=c),void 0!==h&&(e.overrideMaterial.fragmentNode=h),t.onAfterRender(this,e,i,n,r,s)}_renderObjectDirect(t,e,i,n,r,s,a){const o=this._objects.get(t,e,i,n,r,this._currentRenderContext,a);o.drawRange=t.geometry.drawRange,o.group=s;const l=this._nodes.needsRefresh(o);l&&(this._nodes.updateBefore(o),this._geometries.updateForRender(o),this._nodes.updateForRender(o),this._bindings.updateForRender(o)),this._pipelines.updateForRender(o),null!==this._currentRenderBundle&&(this.backend.get(this._currentRenderBundle).renderObjects.push(o),o.bundle=this._currentRenderBundle.scene),this.backend.draw(o,this.info),l&&this._nodes.updateAfter(o)}_createObjectPipeline(t,e,i,n,r,s){const a=this._objects.get(t,e,i,n,r,this._currentRenderContext,s);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class xy{constructor(t=""){this.name=t,this.visibility=0}setVisibility(t){this.visibility|=t}clone(){return Object.assign(new this.constructor,this)}}class vy extends xy{constructor(t,e=null){super(t),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=e}get byteLength(){return(t=this._buffer.byteLength)+(Lm-t%Lm)%Lm;var t}get buffer(){return this._buffer}update(){return!0}}class by extends vy{constructor(t,e=null){super(t,e),this.isUniformBuffer=!0}}let Sy=0;class Ty extends by{constructor(t,e){super("UniformBuffer_"+Sy++,t?t.value:null),this.nodeUniform=t,this.groupNode=e}get buffer(){return this.nodeUniform.value}}class My extends by{constructor(t){super(t),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(t){return this.uniforms.push(t),this}removeUniform(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let t=this._buffer;if(null===t){const e=this.byteLength;t=new Float32Array(new ArrayBuffer(e)),this._buffer=t}return t}get byteLength(){let t=0;for(let e=0,i=this.uniforms.length;e<i;e++){const i=this.uniforms[e],{boundary:n,itemSize:r}=i,s=t%Lm;0!==s&&Lm-s-n<0?t+=Lm-s:s%n!=0&&(t+=s%n),i.offset=t/this.bytesPerElement,t+=r*this.bytesPerElement}return Math.ceil(t/Lm)*Lm}update(){let t=!1;for(const e of this.uniforms)!0===this.updateByType(e)&&(t=!0);return t}updateByType(t){return t.isNumberUniform?this.updateNumber(t):t.isVector2Uniform?this.updateVector2(t):t.isVector3Uniform?this.updateVector3(t):t.isVector4Uniform?this.updateVector4(t):t.isColorUniform?this.updateColor(t):t.isMatrix3Uniform?this.updateMatrix3(t):t.isMatrix4Uniform?this.updateMatrix4(t):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",t)}updateNumber(t){let e=!1;const i=this.values,n=t.getValue(),r=t.offset;return i[r]!==n&&(this.buffer[r]=i[r]=n,e=!0),e}updateVector2(t){let e=!1;const i=this.values,n=t.getValue(),r=t.offset;if(i[r+0]!==n.x||i[r+1]!==n.y){const t=this.buffer;t[r+0]=i[r+0]=n.x,t[r+1]=i[r+1]=n.y,e=!0}return e}updateVector3(t){let e=!1;const i=this.values,n=t.getValue(),r=t.offset;if(i[r+0]!==n.x||i[r+1]!==n.y||i[r+2]!==n.z){const t=this.buffer;t[r+0]=i[r+0]=n.x,t[r+1]=i[r+1]=n.y,t[r+2]=i[r+2]=n.z,e=!0}return e}updateVector4(t){let e=!1;const i=this.values,n=t.getValue(),r=t.offset;if(i[r+0]!==n.x||i[r+1]!==n.y||i[r+2]!==n.z||i[r+4]!==n.w){const t=this.buffer;t[r+0]=i[r+0]=n.x,t[r+1]=i[r+1]=n.y,t[r+2]=i[r+2]=n.z,t[r+3]=i[r+3]=n.w,e=!0}return e}updateColor(t){let e=!1;const i=this.values,n=t.getValue(),r=t.offset;if(i[r+0]!==n.r||i[r+1]!==n.g||i[r+2]!==n.b){const t=this.buffer;t[r+0]=i[r+0]=n.r,t[r+1]=i[r+1]=n.g,t[r+2]=i[r+2]=n.b,e=!0}return e}updateMatrix3(t){let e=!1;const i=this.values,n=t.getValue().elements,r=t.offset;if(i[r+0]!==n[0]||i[r+1]!==n[1]||i[r+2]!==n[2]||i[r+4]!==n[3]||i[r+5]!==n[4]||i[r+6]!==n[5]||i[r+8]!==n[6]||i[r+9]!==n[7]||i[r+10]!==n[8]){const t=this.buffer;t[r+0]=i[r+0]=n[0],t[r+1]=i[r+1]=n[1],t[r+2]=i[r+2]=n[2],t[r+4]=i[r+4]=n[3],t[r+5]=i[r+5]=n[4],t[r+6]=i[r+6]=n[5],t[r+8]=i[r+8]=n[6],t[r+9]=i[r+9]=n[7],t[r+10]=i[r+10]=n[8],e=!0}return e}updateMatrix4(t){let e=!1;const i=this.values,n=t.getValue().elements,r=t.offset;return!1===function(t,e,i){for(let n=0,r=e.length;n<r;n++)if(t[i+n]!==e[n])return!1;return!0}(i,n,r)&&(this.buffer.set(n,r),function(t,e,i){for(let n=0,r=e.length;n<r;n++)t[i+n]=e[n]}(i,n,r),e=!0),e}}let Ey=0;class wy extends My{constructor(t,e){super(t),this.id=Ey++,this.groupNode=e,this.isNodeUniformsGroup=!0}getNodes(){const t=[];for(const e of this.uniforms){const i=e.nodeUniform.node;if(!i)throw new Error("NodeUniformsGroup: Uniform has no node.");t.push(i)}return t}}let Ay=0;class Ry extends xy{constructor(t,e){super(t),this.id=Ay++,this.texture=e,this.version=e?e.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(t){const{texture:e}=this;return t!==this.generation?(this.generation=t,!0):e.isVideoTexture}update(){const{texture:t,version:e}=this;return e!==t.version&&(this.version=t.version,!0)}}class Cy extends Ry{constructor(t,e,i,n=null){super(t,e?e.value:null),this.textureNode=e,this.groupNode=i,this.access=n}needsBindingsUpdate(t){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(t)}update(){const{textureNode:t}=this;return this.texture!==t.value?(this.texture=t.value,!0):super.update()}}class Ny extends Cy{constructor(t,e,i,n){super(t,e,i,n),this.isSampledCubeTexture=!0}}class Py extends Cy{constructor(t,e,i,n){super(t,e,i,n),this.isSampledTexture3D=!0}}const Iy={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},Uy={low:"lowp",medium:"mediump",high:"highp"},Ly={swizzleAssign:!0,storageBuffer:!1},Dy="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\n";class By extends k_{constructor(t,e){super(t,e,new ry),this.uniformGroups={},this.transforms=[],this.extensions={},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(t){return!0===t.isVideoTexture&&""!==t.colorSpace}getMethod(t){return Iy[t]||t}getOutputStructName(){return""}buildFunctionCode(t){const e=t.layout,i=this.flowShaderNode(t),n=[];for(const t of e.inputs)n.push(this.getType(t.type)+" "+t.name);return`${this.getType(e.type)} ${e.name}( ${n.join(", ")} ) {\n\n\t${i.vars}\n\n${i.code}\n\treturn ${i.result};\n\n}`}setupPBO(t){const e=t.value;if(void 0===e.pbo){const t=e.array,i=e.count*e.itemSize,{itemSize:n}=e,r=e.array.constructor.name.toLowerCase().includes("int");let s=r?B:D;2===n?s=r?O:F:3===n?s=r?1032:P:4===n&&(s=r?z:I);const a={Float32Array:R,Uint8Array:S,Uint16Array:E,Uint32Array:A,Int8Array:T,Int16Array:M,Int32Array:w,Uint8ClampedArray:S},o=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/n))));let l=Math.ceil(i/n/o);o*l*n<i&&l++;const h=o*l*n,c=new t.constructor(h);c.set(t,0),e.array=c;const u=new wn(e.array,o,l,s,a[e.array.constructor.name]||R);u.needsUpdate=!0,u.isPBOTexture=!0;const d=new Eh(u,null,null);d.setPrecision("high"),e.pboNode=d,e.pbo=d.value,this.getUniformFromNode(e.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(t,e=this.shaderStage){return t.isNodeUniform&&!0!==t.node.isTextureNode&&!0!==t.node.isBufferNode?e.charAt(0)+"_"+t.name:super.getPropertyName(t,e)}generatePBO(t){const{node:e,indexNode:i}=t,n=e.value;this.renderer.backend.has(n)&&(this.renderer.backend.get(n).pbo=n.pbo);const r=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.label),s=this.getPropertyName(r);this.increaseUsage(i);const a=i.build(this,"uint"),o=this.getDataFromNode(t);let l=o.propertyName;if(void 0===l){const i=this.getVarFromNode(t);l=this.getPropertyName(i);const r=this.getDataFromNode(e);let h=r.propertySizeName;void 0===h&&(h=l+"Size",this.getVarFromNode(e,h,"uint"),this.addLineFlowCode(`${h} = uint( textureSize( ${s}, 0 ).x )`,t),r.propertySizeName=h);const{itemSize:c}=n,u="."+cs.join("").slice(0,c),d=`ivec2(${a} % ${h}, ${a} / ${h})`,p=this.generateTextureLoad(null,s,d,null,"0");let m="vec4";n.pbo.type===A?m="uvec4":n.pbo.type===w&&(m="ivec4"),this.addLineFlowCode(`${l} = ${m}(${p})${u}`,t),o.propertyName=l}return l}generateTextureLoad(t,e,i,n,r="0"){return n?`texelFetch( ${e}, ivec3( ${i}, ${n} ), ${r} )`:`texelFetch( ${e}, ${i}, ${r} )`}generateTexture(t,e,i,n){return t.isDepthTexture?`texture( ${e}, ${i} ).x`:(n&&(i=`vec3( ${i}, ${n} )`),`texture( ${e}, ${i} )`)}generateTextureLevel(t,e,i,n){return`textureLod( ${e}, ${i}, ${n} )`}generateTextureBias(t,e,i,n){return`texture( ${e}, ${i}, ${n} )`}generateTextureGrad(t,e,i,n){return`textureGrad( ${e}, ${i}, ${n[0]}, ${n[1]} )`}generateTextureCompare(t,e,i,n,r,s=this.shaderStage){if("fragment"===s)return`texture( ${e}, vec3( ${i}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${s} shader.`)}getVars(t){const e=[],i=this.vars[t];if(void 0!==i)for(const t of i)e.push(`${this.getVar(t.type,t.name)};`);return e.join("\n\t")}getUniforms(t){const e=this.uniforms[t],i=[],n={};for(const r of e){let e=null,s=!1;if("texture"===r.type){const t=r.node.value;let i="";!0===t.isDataTexture&&(t.type===A?i="u":t.type===w&&(i="i")),e=t.compareFunction?`sampler2DShadow ${r.name};`:!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture?`${i}sampler2DArray ${r.name};`:`${i}sampler2D ${r.name};`}else if("cubeTexture"===r.type)e=`samplerCube ${r.name};`;else if("texture3D"===r.type)e=`sampler3D ${r.name};`;else if("buffer"===r.type){const t=r.node,i=this.getType(t.bufferType),n=t.bufferCount,s=n>0?n:"";e=`${t.name} {\n\t${i} ${r.name}[${s}];\n};\n`}else e=`${this.getVectorType(r.type)} ${this.getPropertyName(r,t)};`,s=!0;const a=r.node.precision;if(null!==a&&(e=Uy[a]+" "+e),s){e="\t"+e;const t=r.groupNode.name;(n[t]||(n[t]=[])).push(e)}else e="uniform "+e,i.push(e)}let r="";for(const e in n){const i=n[e];r+=this._getGLSLUniformStruct(t+"_"+e,i.join("\n"))+"\n"}return r+=i.join("\n"),r}getTypeFromAttribute(t){let e=super.getTypeFromAttribute(t);if(/^[iu]/.test(e)&&t.gpuType!==w){let i=t;t.isInterleavedBufferAttribute&&(i=t.data);const n=i.array;0==(n instanceof Uint32Array||n instanceof Int32Array)&&(e=e.slice(1))}return e}getAttributes(t){let e="";if("vertex"===t||"compute"===t){const t=this.getAttributesArray();let i=0;for(const n of t)e+=`layout( location = ${i++} ) in ${n.type} ${n.name};\n`}return e}getStructMembers(t){const e=[],i=t.getMemberTypes();for(let t=0;t<i.length;t++){const n=i[t];e.push(`layout( location = ${t} ) out ${n} m${t};`)}return e.join("\n")}getStructs(t){const e=[],i=this.structs[t];if(0===i.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let t=0,n=i.length;t<n;t++){const n=i[t];let r="\n";r+=this.getStructMembers(n),r+="\n",e.push(r)}return e.join("\n\n")}getVaryings(t){let e="";const i=this.varyings;if("vertex"===t||"compute"===t)for(const n of i){"compute"===t&&(n.needsInterpolation=!0);const i=n.type;e+=`${i.includes("int")||i.includes("uv")||i.includes("iv")?"flat ":""}${n.needsInterpolation?"out":"/*out*/"} ${i} ${n.name};\n`}else if("fragment"===t)for(const t of i)if(t.needsInterpolation){const i=t.type;e+=`${i.includes("int")||i.includes("uv")||i.includes("iv")?"flat ":""}in ${i} ${t.name};\n`}return e}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce(((t,e)=>t*e),1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(t,e,i=this.shaderStage){const n=this.extensions[i]||(this.extensions[i]=new Map);!1===n.has(t)&&n.set(t,{name:t,behavior:e})}getExtensions(t){const e=[];if("vertex"===t){const e=this.renderer.backend.extensions;this.object.isBatchedMesh&&e.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",t)}const i=this.extensions[t];if(void 0!==i)for(const{name:t,behavior:n}of i.values())e.push(`#extension ${t} : ${n}`);return e.join("\n")}isAvailable(t){let e=Ly[t];if(void 0===e){if("float32Filterable"===t){const t=this.renderer.backend.extensions;t.has("OES_texture_float_linear")?(t.get("OES_texture_float_linear"),e=!0):e=!1}Ly[t]=e}return e}isFlipY(){return!0}registerTransform(t,e){this.transforms.push({varyingName:t,attributeNode:e})}getTransforms(){const t=this.transforms;let e="";for(let i=0;i<t.length;i++){const n=t[i],r=this.getPropertyName(n.attributeNode);e+=`${n.varyingName} = ${r};\n\t`}return e}_getGLSLUniformStruct(t,e){return`\nlayout( std140 ) uniform ${t} {\n${e}\n};`}_getGLSLVertexCode(t){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions \n${t.extensions}\n\n// precision\n${Dy}\n\n// uniforms\n${t.uniforms}\n\n// varyings\n${t.varyings}\n\n// attributes\n${t.attributes}\n\n// codes\n${t.codes}\n\nvoid main() {\n\n\t// vars\n\t${t.vars}\n\n\t// transforms\n\t${t.transforms}\n\n\t// flow\n\t${t.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(t){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${Dy}\n\n// uniforms\n${t.uniforms}\n\n// varyings\n${t.varyings}\n\n// codes\n${t.codes}\n\n${t.structs}\n\nvoid main() {\n\n\t// vars\n\t${t.vars}\n\n\t// flow\n\t${t.flow}\n\n}\n`}buildCode(){const t=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const e in t){let i="// code\n\n";i+=this.flowCode[e];const n=this.flowNodes[e],r=n[n.length-1];for(const t of n){const n=this.getFlowData(t),s=t.name;s&&(i.length>0&&(i+="\n"),i+=`\t// flow -> ${s}\n\t`),i+=`${n.code}\n\t`,t===r&&"compute"!==e&&(i+="// result\n\t","vertex"===e?(i+="gl_Position = ",i+=`${n.result};`):"fragment"===e&&(t.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${n.result};`)))}const s=t[e];s.extensions=this.getExtensions(e),s.uniforms=this.getUniforms(e),s.attributes=this.getAttributes(e),s.varyings=this.getVaryings(e),s.vars=this.getVars(e),s.structs=this.getStructs(e),s.codes=this.getCodes(e),s.transforms=this.getTransforms(e),s.flow=i}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(t.vertex),this.fragmentShader=this._getGLSLFragmentCode(t.fragment)):this.computeShader=this._getGLSLVertexCode(t.compute)}getUniformFromNode(t,e,i,n=null){const r=super.getUniformFromNode(t,e,i,n),s=this.getDataFromNode(t,i,this.globalCache);let a=s.uniformGPU;if(void 0===a){const n=t.groupNode,o=n.name,l=this.getBindGroupArray(o,i);if("texture"===e)a=new Cy(r.name,r.node,n),l.push(a);else if("cubeTexture"===e)a=new Ny(r.name,r.node,n),l.push(a);else if("texture3D"===e)a=new Py(r.name,r.node,n),l.push(a);else if("buffer"===e){t.name=`NodeBuffer_${t.id}`,r.name=`buffer${t.id}`;const e=new Ty(t,n);e.name=t.name,l.push(e),a=e}else{const t=this.uniformGroups[i]||(this.uniformGroups[i]={});let s=t[o];void 0===s&&(s=new wy(i+"_"+o,n),t[o]=s,l.push(s)),a=this.getNodeUniform(r,e),s.addUniform(a)}s.uniformGPU=a}return r}}let Fy=null,Oy=null,zy=null;class ky{constructor(t={}){this.parameters=Object.assign({},t),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(t){this.renderer=t}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(t){const{object:e,geometry:i}=t;return i.isInstancedBufferGeometry?i.instanceCount:e.count>1?e.count:1}getDrawingBufferSize(){return Fy=Fy||new Pt,this.renderer.getDrawingBufferSize(Fy)}getScissor(){return Oy=Oy||new Zt,this.renderer.getScissor(Oy)}setScissorTest(){}getClearColor(){const t=this.renderer;return zy=zy||new sf,t.getClearColor(zy),zy.getRGB(zy,this.renderer.currentColorSpace),zy}getDomElement(){let t=this.domElement;return null===t&&(t=void 0!==this.parameters.canvas?this.parameters.canvas:function(){const t=Lt("canvas");return t.style.display="block",t}(),"setAttribute"in t&&t.setAttribute("data-engine",`three.js r${n} webgpu`),this.domElement=t),t}set(t,e){this.data.set(t,e)}get(t){let e=this.data.get(t);return void 0===e&&(e={},this.data.set(t,e)),e}has(t){return this.data.has(t)}delete(t){this.data.delete(t)}dispose(){}}let Vy=0;class Gy{constructor(t,e){this.buffers=[t.bufferGPU,e],this.type=t.type,this.bufferType=t.bufferType,this.pbo=t.pbo,this.byteLength=t.byteLength,this.bytesPerElement=t.BYTES_PER_ELEMENT,this.version=t.version,this.isInteger=t.isInteger,this.activeBufferIndex=0,this.baseId=t.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class Hy{constructor(t){this.backend=t}createAttribute(t,e){const i=this.backend,{gl:n}=i,r=t.array,s=t.usage||n.STATIC_DRAW,a=t.isInterleavedBufferAttribute?t.data:t,o=i.get(a);let l,h=o.bufferGPU;if(void 0===h&&(h=this._createBuffer(n,e,r,s),o.bufferGPU=h,o.bufferType=e,o.version=a.version),r instanceof Float32Array)l=n.FLOAT;else if(r instanceof Uint16Array)l=t.isFloat16BufferAttribute?n.HALF_FLOAT:n.UNSIGNED_SHORT;else if(r instanceof Int16Array)l=n.SHORT;else if(r instanceof Uint32Array)l=n.UNSIGNED_INT;else if(r instanceof Int32Array)l=n.INT;else if(r instanceof Int8Array)l=n.BYTE;else if(r instanceof Uint8Array)l=n.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);l=n.UNSIGNED_BYTE}let c={bufferGPU:h,bufferType:e,type:l,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version,pbo:t.pbo,isInteger:l===n.INT||l===n.UNSIGNED_INT||t.gpuType===w,id:Vy++};if(t.isStorageBufferAttribute||t.isStorageInstancedBufferAttribute){const t=this._createBuffer(n,e,r,s);c=new Gy(c,t)}i.set(t,c)}updateAttribute(t){const e=this.backend,{gl:i}=e,n=t.array,r=t.isInterleavedBufferAttribute?t.data:t,s=e.get(r),a=s.bufferType,o=t.isInterleavedBufferAttribute?t.data.updateRanges:t.updateRanges;if(i.bindBuffer(a,s.bufferGPU),0===o.length)i.bufferSubData(a,0,n);else{for(let t=0,e=o.length;t<e;t++){const e=o[t];i.bufferSubData(a,e.start*n.BYTES_PER_ELEMENT,n,e.start,e.count)}r.clearUpdateRanges()}i.bindBuffer(a,null),s.version=r.version}destroyAttribute(t){const e=this.backend,{gl:i}=e;t.isInterleavedBufferAttribute&&e.delete(t.data);const n=e.get(t);i.deleteBuffer(n.bufferGPU),e.delete(t)}async getArrayBufferAsync(t){const e=this.backend,{gl:i}=e,n=t.isInterleavedBufferAttribute?t.data:t,{bufferGPU:r}=e.get(n),s=t.array,a=s.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,r);const o=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,o),i.bufferData(i.COPY_WRITE_BUFFER,a,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,a),await e.utils._clientWaitAsync();const l=new t.array.constructor(s.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,o),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,l),i.deleteBuffer(o),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(t,e,i,n){const r=t.createBuffer();return t.bindBuffer(e,r),t.bufferData(e,i,n),t.bindBuffer(e,null),r}}let Wy,jy,Xy=!1;class $y{constructor(t){this.backend=t,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},!1===Xy&&(this._init(this.gl),Xy=!0)}_init(t){Wy={[s]:t.FUNC_ADD,101:t.FUNC_SUBTRACT,102:t.FUNC_REVERSE_SUBTRACT},jy={200:t.ZERO,201:t.ONE,202:t.SRC_COLOR,[a]:t.SRC_ALPHA,210:t.SRC_ALPHA_SATURATE,208:t.DST_COLOR,206:t.DST_ALPHA,203:t.ONE_MINUS_SRC_COLOR,[o]:t.ONE_MINUS_SRC_ALPHA,209:t.ONE_MINUS_DST_COLOR,207:t.ONE_MINUS_DST_ALPHA}}enable(t){const{enabled:e}=this;!0!==e[t]&&(this.gl.enable(t),e[t]=!0)}disable(t){const{enabled:e}=this;!1!==e[t]&&(this.gl.disable(t),e[t]=!1)}setFlipSided(t){if(this.currentFlipSided!==t){const{gl:e}=this;t?e.frontFace(e.CW):e.frontFace(e.CCW),this.currentFlipSided=t}}setCullFace(t){const{gl:e}=this;0!==t?(this.enable(e.CULL_FACE),t!==this.currentCullFace&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):this.disable(e.CULL_FACE),this.currentCullFace=t}setLineWidth(t){const{currentLineWidth:e,gl:i}=this;t!==e&&(i.lineWidth(t),this.currentLineWidth=t)}setBlending(t,e,i,n,a,o,l,h){const{gl:c}=this;if(t!==r){if(!1===this.currentBlendingEnabled&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),5===t)a=a||e,o=o||i,l=l||n,e===this.currentBlendEquation&&a===this.currentBlendEquationAlpha||(c.blendEquationSeparate(Wy[e],Wy[a]),this.currentBlendEquation=e,this.currentBlendEquationAlpha=a),i===this.currentBlendSrc&&n===this.currentBlendDst&&o===this.currentBlendSrcAlpha&&l===this.currentBlendDstAlpha||(c.blendFuncSeparate(jy[i],jy[n],jy[o],jy[l]),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=l),this.currentBlending=t,this.currentPremultipledAlpha=!1;else if(t!==this.currentBlending||h!==this.currentPremultipledAlpha){if(this.currentBlendEquation===s&&this.currentBlendEquationAlpha===s||(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=s,this.currentBlendEquationAlpha=s),h)switch(t){case 1:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case 2:c.blendFunc(c.ONE,c.ONE);break;case 3:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case 4:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case 2:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case 3:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case 4:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=t,this.currentPremultipledAlpha=h}}else!0===this.currentBlendingEnabled&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1)}setColorMask(t){this.currentColorMask!==t&&(this.gl.colorMask(t,t,t,t),this.currentColorMask=t)}setDepthTest(t){const{gl:e}=this;t?this.enable(e.DEPTH_TEST):this.disable(e.DEPTH_TEST)}setDepthMask(t){this.currentDepthMask!==t&&(this.gl.depthMask(t),this.currentDepthMask=t)}setDepthFunc(t){if(this.currentDepthFunc!==t){const{gl:e}=this;switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}this.currentDepthFunc=t}}setStencilTest(t){const{gl:e}=this;t?this.enable(e.STENCIL_TEST):this.disable(e.STENCIL_TEST)}setStencilMask(t){this.currentStencilMask!==t&&(this.gl.stencilMask(t),this.currentStencilMask=t)}setStencilFunc(t,e,i){this.currentStencilFunc===t&&this.currentStencilRef===e&&this.currentStencilFuncMask===i||(this.gl.stencilFunc(t,e,i),this.currentStencilFunc=t,this.currentStencilRef=e,this.currentStencilFuncMask=i)}setStencilOp(t,e,i){this.currentStencilFail===t&&this.currentStencilZFail===e&&this.currentStencilZPass===i||(this.gl.stencilOp(t,e,i),this.currentStencilFail=t,this.currentStencilZFail=e,this.currentStencilZPass=i)}setMaterial(t,e){const{gl:i}=this;2===t.side?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let n=1===t.side;e&&(n=!n),this.setFlipSided(n),1===t.blending&&!1===t.transparent?this.setBlending(r):this.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),this.setDepthFunc(t.depthFunc),this.setDepthTest(t.depthTest),this.setDepthMask(t.depthWrite),this.setColorMask(t.colorWrite);const s=t.stencilWrite;this.setStencilTest(s),s&&(this.setStencilMask(t.stencilWriteMask),this.setStencilFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),this.setStencilOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),this.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(t,e,i){const{gl:n}=this;t?(this.enable(n.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===e&&this.currentPolygonOffsetUnits===i||(n.polygonOffset(e,i),this.currentPolygonOffsetFactor=e,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(t){return this.currentProgram!==t&&(this.gl.useProgram(t),this.currentProgram=t,!0)}bindFramebuffer(t,e){const{gl:i,currentBoundFramebuffers:n}=this;return n[t]!==e&&(i.bindFramebuffer(t,e),n[t]=e,t===i.DRAW_FRAMEBUFFER&&(n[i.FRAMEBUFFER]=e),t===i.FRAMEBUFFER&&(n[i.DRAW_FRAMEBUFFER]=e),!0)}drawBuffers(t,e){const{gl:i}=this;let n=[],r=!1;if(null!==t.textures){n=this.currentDrawbuffers.get(e),void 0===n&&(n=[],this.currentDrawbuffers.set(e,n));const s=t.textures;if(n.length!==s.length||n[0]!==i.COLOR_ATTACHMENT0){for(let t=0,e=s.length;t<e;t++)n[t]=i.COLOR_ATTACHMENT0+t;n.length=s.length,r=!0}}else n[0]!==i.BACK&&(n[0]=i.BACK,r=!0);r&&i.drawBuffers(n)}activeTexture(t){const{gl:e,currentTextureSlot:i,maxTextures:n}=this;void 0===t&&(t=e.TEXTURE0+n-1),i!==t&&(e.activeTexture(t),this.currentTextureSlot=t)}bindTexture(t,e,i){const{gl:n,currentTextureSlot:r,currentBoundTextures:s,maxTextures:a}=this;void 0===i&&(i=null===r?n.TEXTURE0+a-1:r);let o=s[i];void 0===o&&(o={type:void 0,texture:void 0},s[i]=o),o.type===t&&o.texture===e||(r!==i&&(n.activeTexture(i),this.currentTextureSlot=i),n.bindTexture(t,e),o.type=t,o.texture=e)}bindBufferBase(t,e,i){const{gl:n}=this,r=`${t}-${e}`;return this.currentBoundBufferBases[r]!==i&&(n.bindBufferBase(t,e,i),this.currentBoundBufferBases[r]=i,!0)}unbindTexture(){const{gl:t,currentTextureSlot:e,currentBoundTextures:i}=this,n=i[e];void 0!==n&&void 0!==n.type&&(t.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class qy{constructor(t){this.backend=t,this.gl=this.backend.gl,this.extensions=t.extensions}convert(t,e=""){const{gl:i,extensions:n}=this;let r;if(t===S)return i.UNSIGNED_BYTE;if(1017===t)return i.UNSIGNED_SHORT_4_4_4_4;if(1018===t)return i.UNSIGNED_SHORT_5_5_5_1;if(35902===t)return i.UNSIGNED_INT_5_9_9_9_REV;if(t===T)return i.BYTE;if(t===M)return i.SHORT;if(t===E)return i.UNSIGNED_SHORT;if(t===w)return i.INT;if(t===A)return i.UNSIGNED_INT;if(t===R)return i.FLOAT;if(t===C)return i.HALF_FLOAT;if(1021===t)return i.ALPHA;if(t===P)return i.RGB;if(t===I)return i.RGBA;if(1024===t)return i.LUMINANCE;if(1025===t)return i.LUMINANCE_ALPHA;if(t===U)return i.DEPTH_COMPONENT;if(t===L)return i.DEPTH_STENCIL;if(t===D)return i.RED;if(t===B)return i.RED_INTEGER;if(t===F)return i.RG;if(t===O)return i.RG_INTEGER;if(t===z)return i.RGBA_INTEGER;if(t===k||t===V||t===G||t===H)if(e===ct){if(r=n.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(t===k)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===V)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===G)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===H)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=n.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(t===k)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===V)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===G)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===H)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(r=n.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(35840===t)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t||t===W||t===j){if(r=n.get("WEBGL_compressed_texture_etc"),null===r)return null;if(36196===t||t===W)return e===ct?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(t===j)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(t===X||t===$||t===q||t===Y||t===K||t===Z||t===J||t===Q||t===tt||t===et||t===it||t===nt||t===rt||t===st){if(r=n.get("WEBGL_compressed_texture_astc"),null===r)return null;if(t===X)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===$)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===q)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===Y)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===K)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===Z)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===J)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===Q)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===tt)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===et)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===it)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===nt)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===rt)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===st)return e===ct?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(t===at){if(r=n.get("EXT_texture_compression_bptc"),null===r)return null;if(t===at)return e===ct?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(36283===t||36284===t||36285===t||36286===t){if(r=n.get("EXT_texture_compression_rgtc"),null===r)return null;if(t===at)return r.COMPRESSED_RED_RGTC1_EXT;if(36284===t)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===t)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===t)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return t===N?i.UNSIGNED_INT_24_8:void 0!==i[t]?i[t]:null}_clientWaitAsync(){const{gl:t}=this,e=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return t.flush(),new Promise(((i,n)=>{!function r(){const s=t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0);if(s===t.WAIT_FAILED)return t.deleteSync(e),void n();s!==t.TIMEOUT_EXPIRED?(t.deleteSync(e),i()):requestAnimationFrame(r)}()}))}}let Yy,Ky,Zy,Jy=!1;class Qy{constructor(t){this.backend=t,this.gl=t.gl,this.extensions=t.extensions,this.defaultTextures={},!1===Jy&&(this._init(this.gl),Jy=!0)}_init(t){Yy={[p]:t.REPEAT,[m]:t.CLAMP_TO_EDGE,[f]:t.MIRRORED_REPEAT},Ky={[g]:t.NEAREST,[_]:t.NEAREST_MIPMAP_NEAREST,[y]:t.NEAREST_MIPMAP_LINEAR,[x]:t.LINEAR,[v]:t.LINEAR_MIPMAP_NEAREST,[b]:t.LINEAR_MIPMAP_LINEAR},Zy={512:t.NEVER,519:t.ALWAYS,513:t.LESS,515:t.LEQUAL,514:t.EQUAL,518:t.GEQUAL,516:t.GREATER,517:t.NOTEQUAL}}filterFallback(t){const{gl:e}=this;return t===g||t===_||t===y?e.NEAREST:e.LINEAR}getGLTextureType(t){const{gl:e}=this;let i;return i=!0===t.isCubeTexture?e.TEXTURE_CUBE_MAP:!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture?e.TEXTURE_2D_ARRAY:!0===t.isData3DTexture?e.TEXTURE_3D:e.TEXTURE_2D,i}getInternalFormat(t,e,i,n,r=!1){const{gl:s,extensions:a}=this;if(null!==t){if(void 0!==s[t])return s[t];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+t+"'")}let o=e;return e===s.RED&&(i===s.FLOAT&&(o=s.R32F),i===s.HALF_FLOAT&&(o=s.R16F),i===s.UNSIGNED_BYTE&&(o=s.R8),i===s.UNSIGNED_SHORT&&(o=s.R16),i===s.UNSIGNED_INT&&(o=s.R32UI),i===s.BYTE&&(o=s.R8I),i===s.SHORT&&(o=s.R16I),i===s.INT&&(o=s.R32I)),e===s.RED_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.R8UI),i===s.UNSIGNED_SHORT&&(o=s.R16UI),i===s.UNSIGNED_INT&&(o=s.R32UI),i===s.BYTE&&(o=s.R8I),i===s.SHORT&&(o=s.R16I),i===s.INT&&(o=s.R32I)),e===s.RG&&(i===s.FLOAT&&(o=s.RG32F),i===s.HALF_FLOAT&&(o=s.RG16F),i===s.UNSIGNED_BYTE&&(o=s.RG8),i===s.UNSIGNED_SHORT&&(o=s.RG16),i===s.UNSIGNED_INT&&(o=s.RG32UI),i===s.BYTE&&(o=s.RG8I),i===s.SHORT&&(o=s.RG16I),i===s.INT&&(o=s.RG32I)),e===s.RG_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.RG8UI),i===s.UNSIGNED_SHORT&&(o=s.RG16UI),i===s.UNSIGNED_INT&&(o=s.RG32UI),i===s.BYTE&&(o=s.RG8I),i===s.SHORT&&(o=s.RG16I),i===s.INT&&(o=s.RG32I)),e===s.RGB&&(i===s.FLOAT&&(o=s.RGB32F),i===s.HALF_FLOAT&&(o=s.RGB16F),i===s.UNSIGNED_BYTE&&(o=s.RGB8),i===s.UNSIGNED_SHORT&&(o=s.RGB16),i===s.UNSIGNED_INT&&(o=s.RGB32UI),i===s.BYTE&&(o=s.RGB8I),i===s.SHORT&&(o=s.RGB16I),i===s.INT&&(o=s.RGB32I),i===s.UNSIGNED_BYTE&&(o=n===ct&&!1===r?s.SRGB8:s.RGB8),i===s.UNSIGNED_SHORT_5_6_5&&(o=s.RGB565),i===s.UNSIGNED_SHORT_5_5_5_1&&(o=s.RGB5_A1),i===s.UNSIGNED_SHORT_4_4_4_4&&(o=s.RGB4),i===s.UNSIGNED_INT_5_9_9_9_REV&&(o=s.RGB9_E5)),e===s.RGB_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.RGB8UI),i===s.UNSIGNED_SHORT&&(o=s.RGB16UI),i===s.UNSIGNED_INT&&(o=s.RGB32UI),i===s.BYTE&&(o=s.RGB8I),i===s.SHORT&&(o=s.RGB16I),i===s.INT&&(o=s.RGB32I)),e===s.RGBA&&(i===s.FLOAT&&(o=s.RGBA32F),i===s.HALF_FLOAT&&(o=s.RGBA16F),i===s.UNSIGNED_BYTE&&(o=s.RGBA8),i===s.UNSIGNED_SHORT&&(o=s.RGBA16),i===s.UNSIGNED_INT&&(o=s.RGBA32UI),i===s.BYTE&&(o=s.RGBA8I),i===s.SHORT&&(o=s.RGBA16I),i===s.INT&&(o=s.RGBA32I),i===s.UNSIGNED_BYTE&&(o=n===ct&&!1===r?s.SRGB8_ALPHA8:s.RGBA8),i===s.UNSIGNED_SHORT_4_4_4_4&&(o=s.RGBA4),i===s.UNSIGNED_SHORT_5_5_5_1&&(o=s.RGB5_A1)),e===s.RGBA_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.RGBA8UI),i===s.UNSIGNED_SHORT&&(o=s.RGBA16UI),i===s.UNSIGNED_INT&&(o=s.RGBA32UI),i===s.BYTE&&(o=s.RGBA8I),i===s.SHORT&&(o=s.RGBA16I),i===s.INT&&(o=s.RGBA32I)),e===s.DEPTH_COMPONENT&&(i===s.UNSIGNED_INT&&(o=s.DEPTH24_STENCIL8),i===s.FLOAT&&(o=s.DEPTH_COMPONENT32F)),e===s.DEPTH_STENCIL&&i===s.UNSIGNED_INT_24_8&&(o=s.DEPTH24_STENCIL8),o!==s.R16F&&o!==s.R32F&&o!==s.RG16F&&o!==s.RG32F&&o!==s.RGBA16F&&o!==s.RGBA32F||a.get("EXT_color_buffer_float"),o}setTextureParameters(t,e){const{gl:i,extensions:n,backend:r}=this;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,e.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE),i.texParameteri(t,i.TEXTURE_WRAP_S,Yy[e.wrapS]),i.texParameteri(t,i.TEXTURE_WRAP_T,Yy[e.wrapT]),t!==i.TEXTURE_3D&&t!==i.TEXTURE_2D_ARRAY||i.texParameteri(t,i.TEXTURE_WRAP_R,Yy[e.wrapR]),i.texParameteri(t,i.TEXTURE_MAG_FILTER,Ky[e.magFilter]);const s=void 0!==e.mipmaps&&e.mipmaps.length>0,a=e.minFilter===x&&s?b:e.minFilter;if(i.texParameteri(t,i.TEXTURE_MIN_FILTER,Ky[a]),e.compareFunction&&(i.texParameteri(t,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(t,i.TEXTURE_COMPARE_FUNC,Zy[e.compareFunction])),!0===n.has("EXT_texture_filter_anisotropic")){if(e.magFilter===g)return;if(e.minFilter!==y&&e.minFilter!==b)return;if(e.type===R&&!1===n.has("OES_texture_float_linear"))return;if(e.anisotropy>1){const s=n.get("EXT_texture_filter_anisotropic");i.texParameterf(t,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(t){const{gl:e,backend:i,defaultTextures:n}=this,r=this.getGLTextureType(t);let s=n[r];void 0===s&&(s=e.createTexture(),i.state.bindTexture(r,s),e.texParameteri(r,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(r,e.TEXTURE_MAG_FILTER,e.NEAREST),n[r]=s),i.set(t,{textureGPU:s,glTextureType:r,isDefault:!0})}createTexture(t,e){const{gl:i,backend:n}=this,{levels:r,width:s,height:a,depth:o}=e,l=n.utils.convert(t.format,t.colorSpace),h=n.utils.convert(t.type),c=this.getInternalFormat(t.internalFormat,l,h,t.colorSpace,t.isVideoTexture),u=i.createTexture(),d=this.getGLTextureType(t);n.state.bindTexture(d,u),this.setTextureParameters(d,t),t.isDataArrayTexture||t.isCompressedArrayTexture?i.texStorage3D(i.TEXTURE_2D_ARRAY,r,c,s,a,o):t.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,r,c,s,a,o):t.isVideoTexture||i.texStorage2D(d,r,c,s,a),n.set(t,{textureGPU:u,glTextureType:d,glFormat:l,glType:h,glInternalFormat:c})}copyBufferToTexture(t,e){const{gl:i,backend:n}=this,{textureGPU:r,glTextureType:s,glFormat:a,glType:o}=n.get(e),{width:l,height:h}=e.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,t),n.state.bindTexture(s,r),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(s,0,0,0,l,h,a,o,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(t,e){const{gl:i}=this,{width:n,height:r}=e,{textureGPU:s,glTextureType:a,glFormat:o,glType:l,glInternalFormat:h}=this.backend.get(t);if(t.isRenderTargetTexture||void 0===s)return;const c=t=>t.isDataTexture?t.image.data:t instanceof ImageBitmap||t instanceof OffscreenCanvas||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement?t:t.data;if(this.backend.state.bindTexture(a,s),this.setTextureParameters(a,t),t.isCompressedTexture){const n=t.mipmaps,r=e.image;for(let e=0;e<n.length;e++){const s=n[e];t.isCompressedArrayTexture?t.format!==i.RGBA?null!==o?i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,e,0,0,0,s.width,s.height,r.depth,o,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texSubImage3D(i.TEXTURE_2D_ARRAY,e,0,0,0,s.width,s.height,r.depth,o,l,s.data):null!==o?i.compressedTexSubImage2D(i.TEXTURE_2D,e,0,0,s.width,s.height,o,s.data):console.warn("Unsupported compressed texture format")}}else if(t.isCubeTexture){const t=e.images;for(let e=0;e<6;e++){const s=c(t[e]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,n,r,o,l,s)}}else if(t.isDataArrayTexture){const t=e.image;i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,t.width,t.height,t.depth,o,l,t.data)}else if(t.isData3DTexture){const t=e.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,t.width,t.height,t.depth,o,l,t.data)}else if(t.isVideoTexture)t.update(),i.texImage2D(a,0,h,o,l,e.image);else{const t=c(e.image);i.texSubImage2D(a,0,0,0,n,r,o,l,t)}}generateMipmaps(t){const{gl:e,backend:i}=this,{textureGPU:n,glTextureType:r}=i.get(t);i.state.bindTexture(r,n),e.generateMipmap(r)}deallocateRenderBuffers(t){const{gl:e,backend:i}=this;if(t){const n=i.get(t);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const t in n.framebuffers)e.deleteFramebuffer(n.framebuffers[t]);delete n.framebuffers}if(n.depthRenderbuffer&&(e.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(e.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(e.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let t=0;t<n.msaaRenderbuffers.length;t++)e.deleteRenderbuffer(n.msaaRenderbuffers[t]);delete n.msaaRenderbuffers}}}destroyTexture(t){const{gl:e,backend:i}=this,{textureGPU:n,renderTarget:r}=i.get(t);this.deallocateRenderBuffers(r),e.deleteTexture(n),i.delete(t)}copyTextureToTexture(t,e,i=null,n=null,r=0){const{gl:s,backend:a}=this,{state:o}=this.backend,{textureGPU:l,glTextureType:h,glType:c,glFormat:u}=a.get(e);let d,p,m,f,g,_;null!==i?(d=i.max.x-i.min.x,p=i.max.y-i.min.y,m=i.min.x,f=i.min.y):(d=t.image.width,p=t.image.height,m=0,f=0),null!==n?(g=n.x,_=n.y):(g=0,_=0),o.bindTexture(h,l),s.pixelStorei(s.UNPACK_ALIGNMENT,e.unpackAlignment),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,e.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,e.unpackAlignment);const y=s.getParameter(s.UNPACK_ROW_LENGTH),x=s.getParameter(s.UNPACK_IMAGE_HEIGHT),v=s.getParameter(s.UNPACK_SKIP_PIXELS),b=s.getParameter(s.UNPACK_SKIP_ROWS),S=s.getParameter(s.UNPACK_SKIP_IMAGES),T=t.isCompressedTexture?t.mipmaps[r]:t.image;if(s.pixelStorei(s.UNPACK_ROW_LENGTH,T.width),s.pixelStorei(s.UNPACK_IMAGE_HEIGHT,T.height),s.pixelStorei(s.UNPACK_SKIP_PIXELS,m),s.pixelStorei(s.UNPACK_SKIP_ROWS,f),t.isRenderTargetTexture||t.isDepthTexture){const i=a.get(t),n=a.get(e),r=a.get(i.renderTarget),l=a.get(n.renderTarget),h=r.framebuffers[i.cacheKey],c=l.framebuffers[n.cacheKey];o.bindFramebuffer(s.READ_FRAMEBUFFER,h),o.bindFramebuffer(s.DRAW_FRAMEBUFFER,c);let u=s.COLOR_BUFFER_BIT;t.isDepthTexture&&(u=s.DEPTH_BUFFER_BIT),s.blitFramebuffer(m,f,d,p,g,_,d,p,u,s.NEAREST),o.bindFramebuffer(s.READ_FRAMEBUFFER,null),o.bindFramebuffer(s.DRAW_FRAMEBUFFER,null)}else t.isDataTexture?s.texSubImage2D(s.TEXTURE_2D,r,g,_,d,p,u,c,T.data):t.isCompressedTexture?s.compressedTexSubImage2D(s.TEXTURE_2D,r,g,_,T.width,T.height,u,T.data):s.texSubImage2D(s.TEXTURE_2D,r,g,_,d,p,u,c,T);s.pixelStorei(s.UNPACK_ROW_LENGTH,y),s.pixelStorei(s.UNPACK_IMAGE_HEIGHT,x),s.pixelStorei(s.UNPACK_SKIP_PIXELS,v),s.pixelStorei(s.UNPACK_SKIP_ROWS,b),s.pixelStorei(s.UNPACK_SKIP_IMAGES,S),0===r&&e.generateMipmaps&&s.generateMipmap(s.TEXTURE_2D),o.unbindTexture()}copyFramebufferToTexture(t,e,i){const{gl:n}=this,{state:r}=this.backend,{textureGPU:s}=this.backend.get(t),{x:a,y:o,z:l,w:h}=i,c=!0===t.isDepthTexture||e.renderTarget&&e.renderTarget.samples>0,u=e.renderTarget?e.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(c){const i=0!==a||0!==o;let c,d;if(!0===t.isDepthTexture?(c=n.DEPTH_BUFFER_BIT,d=n.DEPTH_ATTACHMENT,e.stencil&&(c|=n.STENCIL_BUFFER_BIT)):(c=n.COLOR_BUFFER_BIT,d=n.COLOR_ATTACHMENT0),i){const t=this.backend.get(e.renderTarget),i=t.framebuffers[e.getCacheKey()],d=t.msaaFrameBuffer;r.bindFramebuffer(n.DRAW_FRAMEBUFFER,i),r.bindFramebuffer(n.READ_FRAMEBUFFER,d);const p=u-o-h;n.blitFramebuffer(a,p,a+l,p+h,a,p,a+l,p+h,c,n.NEAREST),r.bindFramebuffer(n.READ_FRAMEBUFFER,i),r.bindTexture(n.TEXTURE_2D,s),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,p,l,h),r.unbindTexture()}else{const t=n.createFramebuffer();r.bindFramebuffer(n.DRAW_FRAMEBUFFER,t),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,d,n.TEXTURE_2D,s,0),n.blitFramebuffer(0,0,l,h,0,0,l,h,c,n.NEAREST),n.deleteFramebuffer(t)}}else r.bindTexture(n.TEXTURE_2D,s),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,u-h-o,l,h),r.unbindTexture();t.generateMipmaps&&this.generateMipmaps(t),this.backend._setFramebuffer(e)}setupRenderBufferStorage(t,e){const{gl:i}=this,n=e.renderTarget,{samples:r,depthTexture:s,depthBuffer:a,stencilBuffer:o,width:l,height:h}=n;if(i.bindRenderbuffer(i.RENDERBUFFER,t),a&&!o){let e=i.DEPTH_COMPONENT24;r>0?(s&&s.isDepthTexture&&s.type===i.FLOAT&&(e=i.DEPTH_COMPONENT32F),i.renderbufferStorageMultisample(i.RENDERBUFFER,r,e,l,h)):i.renderbufferStorage(i.RENDERBUFFER,e,l,h),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,t)}else a&&o&&(r>0?i.renderbufferStorageMultisample(i.RENDERBUFFER,r,i.DEPTH24_STENCIL8,l,h):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,l,h),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,t))}async copyTextureToBuffer(t,e,i,n,r,s){const{backend:a,gl:o}=this,{textureGPU:l,glFormat:h,glType:c}=this.backend.get(t),u=o.createFramebuffer();o.bindFramebuffer(o.READ_FRAMEBUFFER,u);const d=t.isCubeTexture?o.TEXTURE_CUBE_MAP_POSITIVE_X+s:o.TEXTURE_2D;o.framebufferTexture2D(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,d,l,0);const p=this._getTypedArrayType(c),m=n*r*this._getBytesPerTexel(c,h),f=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,f),o.bufferData(o.PIXEL_PACK_BUFFER,m,o.STREAM_READ),o.readPixels(e,i,n,r,h,c,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const g=new p(m/p.BYTES_PER_ELEMENT);return o.bindBuffer(o.PIXEL_PACK_BUFFER,f),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,g),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteFramebuffer(u),g}_getTypedArrayType(t){const{gl:e}=this;if(t===e.UNSIGNED_BYTE)return Uint8Array;if(t===e.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(t===e.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(t===e.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(t===e.UNSIGNED_SHORT)return Uint16Array;if(t===e.UNSIGNED_INT)return Uint32Array;if(t===e.HALF_FLOAT)return Uint16Array;if(t===e.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${t}`)}_getBytesPerTexel(t,e){const{gl:i}=this;let n=0;return t===i.UNSIGNED_BYTE&&(n=1),t!==i.UNSIGNED_SHORT_4_4_4_4&&t!==i.UNSIGNED_SHORT_5_5_5_1&&t!==i.UNSIGNED_SHORT_5_6_5&&t!==i.UNSIGNED_SHORT&&t!==i.HALF_FLOAT||(n=2),t!==i.UNSIGNED_INT&&t!==i.FLOAT||(n=4),e===i.RGBA?4*n:e===i.RGB?3*n:e===i.ALPHA?n:void 0}}class tx{constructor(t){this.backend=t,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(t){let e=this.extensions[t];return void 0===e&&(e=this.gl.getExtension(t),this.extensions[t]=e),e}has(t){return this.availableExtensions.includes(t)}}class ex{constructor(t){this.backend=t,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const t=this.backend.gl,e=this.backend.extensions;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const ix={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class nx{constructor(t){this.gl=t.gl,this.extensions=t.extensions,this.info=t.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(t,e){const{gl:i,mode:n,object:r,type:s,info:a,index:o}=this;0!==o?i.drawElements(n,e,s,t):i.drawArrays(n,t,e),a.update(r,e,n,1)}renderInstances(t,e,i){const{gl:n,mode:r,type:s,index:a,object:o,info:l}=this;0!==i&&(0!==a?n.drawElementsInstanced(r,e,s,t,i):n.drawArraysInstanced(r,t,e,i),l.update(o,e,r,i))}renderMultiDraw(t,e,i){const{extensions:n,mode:r,object:s,info:a}=this;if(0===i)return;const o=n.get("WEBGL_multi_draw");if(null===o)for(let n=0;n<i;n++)this.render(t[n],e[n]);else{0!==this.index?o.multiDrawElementsWEBGL(r,e,0,this.type,t,0,i):o.multiDrawArraysWEBGL(r,t,0,e,0,i);let n=0;for(let t=0;t<i;t++)n+=e[t];a.update(s,n,r,1)}}renderMultiDrawInstances(t,e,i,n){const{extensions:r,mode:s,object:a,info:o}=this;if(0===i)return;const l=r.get("WEBGL_multi_draw");if(null===l)for(let r=0;r<i;r++)this.renderInstances(t[r],e[r],n[r]);else{0!==this.index?l.multiDrawElementsInstancedWEBGL(s,e,0,this.type,t,0,n,0,i):l.multiDrawArraysInstancedWEBGL(s,t,0,e,0,n,0,i);let r=0;for(let t=0;t<i;t++)r+=e[t]*n[t];o.update(a,r,s,1)}}}class rx extends ky{constructor(t={}){super(t),this.isWebGLBackend=!0}init(t){super.init(t);const e=this.parameters,i=void 0!==e.context?e.context:t.domElement.getContext("webgl2");function n(e){e.preventDefault();const i={api:"WebGL",message:e.statusMessage||"Unknown reason",reason:null,originalEvent:e};t.onDeviceLost(i)}this._onContextLost=n,t.domElement.addEventListener("webglcontextlost",n,!1),this.gl=i,this.extensions=new tx(this),this.capabilities=new ex(this),this.attributeUtils=new Hy(this),this.textureUtils=new Qy(this),this.bufferRenderer=new nx(this),this.state=new $y(this),this.utils=new qy(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=!0===e.trackTimestamp,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return _t}async getArrayBufferAsync(t){return await this.attributeUtils.getArrayBufferAsync(t)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(t){if(!this.disjoint||!this.trackTimestamp)return;const e=this.get(t);if(this.queryRunning)return e.queryQueue||(e.queryQueue=[]),void e.queryQueue.push(t);e.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),e.activeQuery=null),e.activeQuery=this.gl.createQuery(),null!==e.activeQuery&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,e.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(t){if(!this.disjoint||!this.trackTimestamp)return;const e=this.get(t);if(e.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),e.gpuQueries||(e.gpuQueries=[]),e.gpuQueries.push({query:e.activeQuery}),e.activeQuery=null,this.queryRunning=!1,e.queryQueue&&e.queryQueue.length>0)){const t=e.queryQueue.shift();this.initTimestampQuery(t)}}async resolveTimestampAsync(t,e="render"){if(!this.disjoint||!this.trackTimestamp)return;const i=this.get(t);i.gpuQueries||(i.gpuQueries=[]);for(let t=0;t<i.gpuQueries.length;t++){const n=i.gpuQueries[t],r=this.gl.getQueryParameter(n.query,this.gl.QUERY_RESULT_AVAILABLE),s=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(r&&!s){const r=this.gl.getQueryParameter(n.query,this.gl.QUERY_RESULT),s=Number(r)/1e6;this.gl.deleteQuery(n.query),i.gpuQueries.splice(t,1),t--,this.renderer.info.updateTimestamp(e,s)}}}getContext(){return this.gl}beginRender(t){const{gl:e}=this,i=this.get(t);if(this.initTimestampQuery(t),i.previousContext=this._currentContext,this._currentContext=t,this._setFramebuffer(t),this.clear(t.clearColor,t.clearDepth,t.clearStencil,t,!1),t.viewport?this.updateViewport(t):e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),t.scissor){const{x:i,y:n,width:r,height:s}=t.scissorValue;e.scissor(i,t.height-s-n,r,s)}const n=t.occlusionQueryCount;n>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(n),i.occlusionQueryObjects=new Array(n),i.occlusionQueryIndex=0)}finishRender(t){const{gl:e,state:i}=this,n=this.get(t),r=n.previousContext,s=t.occlusionQueryCount;s>0&&(s>n.occlusionQueryIndex&&e.endQuery(e.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(t));const a=t.textures;if(null!==a)for(let t=0;t<a.length;t++){const e=a[t];e.generateMipmaps&&this.generateMipmaps(e)}if(this._currentContext=r,null!==t.textures&&t.renderTarget){const n=this.get(t.renderTarget),{samples:r}=t.renderTarget;if(r>0){const r=n.framebuffers[t.getCacheKey()],s=e.COLOR_BUFFER_BIT,a=n.msaaFrameBuffer,o=t.textures;i.bindFramebuffer(e.READ_FRAMEBUFFER,a),i.bindFramebuffer(e.DRAW_FRAMEBUFFER,r);for(let i=0;i<o.length;i++)if(t.scissor){const{x:i,y:r,width:a,height:o}=t.scissorValue,l=t.height-o-r;e.blitFramebuffer(i,l,i+a,l+o,i,l,i+a,l+o,s,e.NEAREST),e.invalidateSubFramebuffer(e.READ_FRAMEBUFFER,n.invalidationArray,i,l,a,o)}else e.blitFramebuffer(0,0,t.width,t.height,0,0,t.width,t.height,s,e.NEAREST),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,n.invalidationArray)}}null!==r&&(this._setFramebuffer(r),r.viewport?this.updateViewport(r):e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight)),this.prepareTimestampBuffer(t)}resolveOccludedAsync(t){const e=this.get(t),{currentOcclusionQueries:i,currentOcclusionQueryObjects:n}=e;if(i&&n){const t=new WeakSet,{gl:r}=this;e.currentOcclusionQueryObjects=null,e.currentOcclusionQueries=null;const s=()=>{let a=0;for(let e=0;e<i.length;e++){const s=i[e];null!==s&&r.getQueryParameter(s,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(s,r.QUERY_RESULT)>0&&t.add(n[e]),i[e]=null,r.deleteQuery(s),a++)}a<i.length?requestAnimationFrame(s):e.occluded=t};s()}}isOccluded(t,e){const i=this.get(t);return i.occluded&&i.occluded.has(e)}updateViewport(t){const e=this.gl,{x:i,y:n,width:r,height:s}=t.viewportValue;e.viewport(i,t.height-s-n,r,s)}setScissorTest(t){const e=this.gl;t?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST)}clear(t,e,i,n=null,r=!0){const{gl:s}=this;if(null===n){const t=this.getClearColor();t.r*=t.a,t.g*=t.a,t.b*=t.a,n={textures:null,clearColorValue:t}}let a=0;if(t&&(a|=s.COLOR_BUFFER_BIT),e&&(a|=s.DEPTH_BUFFER_BIT),i&&(a|=s.STENCIL_BUFFER_BIT),0!==a){let o;if(n.clearColorValue?o=n.clearColorValue:(o=this.getClearColor(),o.r*=o.a,o.g*=o.a,o.b*=o.a),e&&this.state.setDepthMask(!0),null===n.textures)s.clearColor(o.r,o.g,o.b,o.a),s.clear(a);else{if(r&&this._setFramebuffer(n),t)for(let t=0;t<n.textures.length;t++)s.clearBufferfv(s.COLOR,t,[o.r,o.g,o.b,o.a]);e&&i?s.clearBufferfi(s.DEPTH_STENCIL,0,1,0):e?s.clearBufferfv(s.DEPTH,0,[1]):i&&s.clearBufferiv(s.STENCIL,0,[0])}}}beginCompute(t){const{state:e,gl:i}=this;e.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(t)}compute(t,e,i,n){const{state:r,gl:s}=this;this.discard||(s.enable(s.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:o,attributes:l}=this.get(n),h=this._getVaoKey(null,l),c=this.vaoCache[h];void 0===c?this._createVao(null,l):s.bindVertexArray(c),r.useProgram(a),this._bindUniforms(i);const u=this._getTransformFeedback(o);s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,u),s.beginTransformFeedback(s.POINTS),l[0].isStorageInstancedBufferAttribute?s.drawArraysInstanced(s.POINTS,0,1,e.count):s.drawArrays(s.POINTS,0,e.count),s.endTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null);for(let t=0;t<o.length;t++){const e=o[t];e.pbo&&this.textureUtils.copyBufferToTexture(e.transformBuffer,e.pbo),e.switchBuffers()}}finishCompute(t){const e=this.gl;this.discard=!1,e.disable(e.RASTERIZER_DISCARD),this.prepareTimestampBuffer(t),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(t){const{object:e,pipeline:i,material:n,context:r}=t,{programGPU:s}=this.get(i),{gl:a,state:o}=this,l=this.get(r),h=t.getDrawParameters();if(null===h)return;this._bindUniforms(t.getBindings());const c=e.isMesh&&e.matrixWorld.determinant()<0;o.setMaterial(n,c),o.useProgram(s);let u=t.staticVao;if(void 0===u){const e=this._getVaoKey(t.getIndex(),t.getAttributes());if(u=this.vaoCache[e],void 0===u){let e;({vaoGPU:u,staticVao:e}=this._createVao(t.getIndex(),t.getAttributes())),e&&(t.staticVao=u)}}a.bindVertexArray(u);const d=t.getIndex(),p=l.lastOcclusionObject;if(p!==e&&void 0!==p){if(null!==p&&!0===p.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===e.occlusionTest){const t=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,t),l.occlusionQueries[l.occlusionQueryIndex]=t,l.occlusionQueryObjects[l.occlusionQueryIndex]=e}l.lastOcclusionObject=e}const m=this.bufferRenderer;e.isPoints?m.mode=a.POINTS:e.isLineSegments?m.mode=a.LINES:e.isLine?m.mode=a.LINE_STRIP:e.isLineLoop?m.mode=a.LINE_LOOP:!0===n.wireframe?(o.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),m.mode=a.LINES):m.mode=a.TRIANGLES;const{vertexCount:f,instanceCount:g}=h;let{firstVertex:_}=h;if(m.object=e,null!==d){_*=d.array.BYTES_PER_ELEMENT;const t=this.get(d);m.index=d.count,m.type=t.type}else m.index=0;var y;e.isBatchedMesh?null!==e._multiDrawInstances?m.renderMultiDrawInstances(e._multiDrawStarts,e._multiDrawCounts,e._multiDrawCount,e._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?m.renderMultiDraw(e._multiDrawStarts,e._multiDrawCounts,e._multiDrawCount):(y="THREE.WebGLRenderer: WEBGL_multi_draw not supported.")in Dt||(Dt[y]=!0,console.warn(y)):g>1?m.renderInstances(_,f,g):m.render(_,f),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(t){this.textureUtils.createDefaultTexture(t)}createTexture(t,e){this.textureUtils.createTexture(t,e)}updateTexture(t,e){this.textureUtils.updateTexture(t,e)}generateMipmaps(t){this.textureUtils.generateMipmaps(t)}destroyTexture(t){this.textureUtils.destroyTexture(t)}copyTextureToBuffer(t,e,i,n,r,s){return this.textureUtils.copyTextureToBuffer(t,e,i,n,r,s)}createSampler(){}destroySampler(){}createNodeBuilder(t,e){return new By(t,e)}createProgram(t){const e=this.gl,{stage:i,code:n}=t,r="fragment"===i?e.createShader(e.FRAGMENT_SHADER):e.createShader(e.VERTEX_SHADER);e.shaderSource(r,n),e.compileShader(r),this.set(t,{shaderGPU:r})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(t,e){const i=this.gl,n=t.pipeline,{fragmentProgram:r,vertexProgram:s}=n,a=i.createProgram(),o=this.get(r).shaderGPU,l=this.get(s).shaderGPU;if(i.attachShader(a,o),i.attachShader(a,l),i.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:o,vertexShader:l}),null!==e&&this.parallel){const r=new Promise((e=>{const r=this.parallel,s=()=>{i.getProgramParameter(a,r.COMPLETION_STATUS_KHR)?(this._completeCompile(t,n),e()):requestAnimationFrame(s)};s()}));e.push(r)}else this._completeCompile(t,n)}_handleSource(t,e){const i=t.split("\n"),n=[],r=Math.max(e-6,0),s=Math.min(e+6,i.length);for(let t=r;t<s;t++){const r=t+1;n.push(`${r===e?">":" "} ${r}: ${i[t]}`)}return n.join("\n")}_getShaderErrors(t,e,i){const n=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(n&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const n=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+this._handleSource(t.getShaderSource(e),n)}return r}_logProgramError(t,e,i){if(this.renderer.debug.checkShaderErrors){const n=this.gl,r=n.getProgramInfoLog(t).trim();if(!1===n.getProgramParameter(t,n.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(n,t,i,e);else{const s=this._getShaderErrors(n,i,"vertex"),a=this._getShaderErrors(n,e,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(t,n.VALIDATE_STATUS)+"\n\nProgram Info Log: "+r+"\n"+s+"\n"+a)}else""!==r&&console.warn("THREE.WebGLProgram: Program Info Log:",r)}}_completeCompile(t,e){const{state:i,gl:n}=this,r=this.get(e),{programGPU:s,fragmentShader:a,vertexShader:o}=r;!1===n.getProgramParameter(s,n.LINK_STATUS)&&this._logProgramError(s,a,o),i.useProgram(s);const l=t.getBindings();this._setupBindings(l,s),this.set(e,{programGPU:s})}createComputePipeline(t,e){const{state:i,gl:n}=this,r={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(r);const{computeProgram:s}=t,a=n.createProgram(),o=this.get(r).shaderGPU,l=this.get(s).shaderGPU,h=s.transforms,c=[],u=[];for(let t=0;t<h.length;t++){const e=h[t];c.push(e.varyingName),u.push(e.attributeNode)}n.attachShader(a,o),n.attachShader(a,l),n.transformFeedbackVaryings(a,c,n.SEPARATE_ATTRIBS),n.linkProgram(a),!1===n.getProgramParameter(a,n.LINK_STATUS)&&this._logProgramError(a,o,l),i.useProgram(a),this._setupBindings(e,a);const d=s.attributes,p=[],m=[];for(let t=0;t<d.length;t++){const e=d[t].node.attribute;p.push(e),this.has(e)||this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER)}for(let t=0;t<u.length;t++){const e=u[t].attribute;this.has(e)||this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER);const i=this.get(e);m.push(i)}this.set(t,{programGPU:a,transformBuffers:m,attributes:p})}createBindings(t,e){if(!1===this._knownBindings.has(e)){this._knownBindings.add(e);let t=0,i=0;for(const n of e){this.set(n,{textures:i,uniformBuffers:t});for(const e of n.bindings)e.isUniformBuffer&&t++,e.isSampledTexture&&i++}}this.updateBindings(t,e)}updateBindings(t){const{gl:e}=this,i=this.get(t);let n=i.uniformBuffers,r=i.textures;for(const i of t.bindings)if(i.isUniformsGroup||i.isUniformBuffer){const t=i.buffer,r=e.createBuffer();e.bindBuffer(e.UNIFORM_BUFFER,r),e.bufferData(e.UNIFORM_BUFFER,t,e.DYNAMIC_DRAW),this.set(i,{index:n++,bufferGPU:r})}else if(i.isSampledTexture){const{textureGPU:t,glTextureType:e}=this.get(i.texture);this.set(i,{index:r++,textureGPU:t,glTextureType:e})}}updateBinding(t){const e=this.gl;if(t.isUniformsGroup||t.isUniformBuffer){const i=this.get(t).bufferGPU,n=t.buffer;e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,n,e.DYNAMIC_DRAW)}}createIndexAttribute(t){const e=this.gl;this.attributeUtils.createAttribute(t,e.ELEMENT_ARRAY_BUFFER)}createAttribute(t){if(this.has(t))return;const e=this.gl;this.attributeUtils.createAttribute(t,e.ARRAY_BUFFER)}createStorageAttribute(t){if(this.has(t))return;const e=this.gl;this.attributeUtils.createAttribute(t,e.ARRAY_BUFFER)}updateAttribute(t){this.attributeUtils.updateAttribute(t)}destroyAttribute(t){this.attributeUtils.destroyAttribute(t)}updateSize(){}hasFeature(t){const e=Object.keys(ix).filter((e=>ix[e]===t)),i=this.extensions;for(let t=0;t<e.length;t++)if(i.has(e[t]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(t,e,i,n,r){this.textureUtils.copyTextureToTexture(t,e,i,n,r)}copyFramebufferToTexture(t,e,i){this.textureUtils.copyFramebufferToTexture(t,e,i)}_setFramebuffer(t){const{gl:e,state:i}=this;let n=null;if(null!==t.textures){const r=t.renderTarget,s=this.get(r),{samples:a,depthBuffer:o,stencilBuffer:l}=r,h=!0===r.isWebGLCubeRenderTarget;let c=s.msaaFrameBuffer,u=s.depthRenderbuffer;const d=tf(t);let p;if(h?(s.cubeFramebuffers||(s.cubeFramebuffers={}),p=s.cubeFramebuffers[d]):(s.framebuffers||(s.framebuffers={}),p=s.framebuffers[d]),void 0===p){p=e.createFramebuffer(),i.bindFramebuffer(e.FRAMEBUFFER,p);const n=t.textures;if(h){s.cubeFramebuffers[d]=p;const{textureGPU:t}=this.get(n[0]),i=this.renderer._activeCubeFace;e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+i,t,0)}else{s.framebuffers[d]=p;for(let i=0;i<n.length;i++){const r=n[i],s=this.get(r);s.renderTarget=t.renderTarget,s.cacheKey=d;const a=e.COLOR_ATTACHMENT0+i;e.framebufferTexture2D(e.FRAMEBUFFER,a,e.TEXTURE_2D,s.textureGPU,0)}i.drawBuffers(t,p)}if(null!==t.depthTexture){const i=this.get(t.depthTexture),n=l?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;i.renderTarget=t.renderTarget,i.cacheKey=d,e.framebufferTexture2D(e.FRAMEBUFFER,n,e.TEXTURE_2D,i.textureGPU,0)}}if(a>0){if(void 0===c){const n=[];c=e.createFramebuffer(),i.bindFramebuffer(e.FRAMEBUFFER,c);const r=[],h=t.textures;for(let i=0;i<h.length;i++){if(r[i]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,r[i]),n.push(e.COLOR_ATTACHMENT0+i),o){const t=l?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;n.push(t)}const s=t.textures[i],h=this.get(s);e.renderbufferStorageMultisample(e.RENDERBUFFER,a,h.glInternalFormat,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+i,e.RENDERBUFFER,r[i])}if(s.msaaFrameBuffer=c,s.msaaRenderbuffers=r,void 0===u){u=e.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(u,t),s.depthRenderbuffer=u;const i=l?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;n.push(i)}s.invalidationArray=n}n=s.msaaFrameBuffer}else n=p}i.bindFramebuffer(e.FRAMEBUFFER,n)}_getVaoKey(t,e){let i=[];null!==t&&(i+=":"+this.get(t).id);for(let t=0;t<e.length;t++)i+=":"+this.get(e[t]).id;return i}_createVao(t,e){const{gl:i}=this,n=i.createVertexArray();let r="",s=!0;if(i.bindVertexArray(n),null!==t){const e=this.get(t);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.bufferGPU),r+=":"+e.id}for(let t=0;t<e.length;t++){const n=e[t],a=this.get(n);let o,l;r+=":"+a.id,i.bindBuffer(i.ARRAY_BUFFER,a.bufferGPU),i.enableVertexAttribArray(t),(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&(s=!1),!0===n.isInterleavedBufferAttribute?(o=n.data.stride*a.bytesPerElement,l=n.offset*a.bytesPerElement):(o=0,l=0),a.isInteger?i.vertexAttribIPointer(t,n.itemSize,a.type,o,l):i.vertexAttribPointer(t,n.itemSize,a.type,n.normalized,o,l),n.isInstancedBufferAttribute&&!n.isInterleavedBufferAttribute?i.vertexAttribDivisor(t,n.meshPerAttribute):n.isInterleavedBufferAttribute&&n.data.isInstancedInterleavedBuffer&&i.vertexAttribDivisor(t,n.data.meshPerAttribute)}return i.bindBuffer(i.ARRAY_BUFFER,null),this.vaoCache[r]=n,{vaoGPU:n,staticVao:s}}_getTransformFeedback(t){let e="";for(let i=0;i<t.length;i++)e+=":"+t[i].id;let i=this.transformFeedbackCache[e];if(void 0!==i)return i;const{gl:n}=this;i=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,i);for(let e=0;e<t.length;e++){const i=t[e];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,e,i.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[e]=i,i}_setupBindings(t,e){const i=this.gl;for(const n of t)for(const t of n.bindings){const n=this.get(t).index;if(t.isUniformsGroup||t.isUniformBuffer){const r=i.getUniformBlockIndex(e,t.name);i.uniformBlockBinding(e,r,n)}else if(t.isSampledTexture){const r=i.getUniformLocation(e,t.name);i.uniform1i(r,n)}}}_bindUniforms(t){const{gl:e,state:i}=this;for(const n of t)for(const t of n.bindings){const n=this.get(t),r=n.index;t.isUniformsGroup||t.isUniformBuffer?i.bindBufferBase(e.UNIFORM_BUFFER,r,n.bufferGPU):t.isSampledTexture&&i.bindTexture(n.glTextureType,n.textureGPU,e.TEXTURE0+r)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}class sx extends xy{constructor(t,e){super(t),this.texture=e,this.version=e?e.version:0,this.isSampler=!0}}class ax extends sx{constructor(t,e,i){super(t,e?e.value:null),this.textureNode=e,this.groupNode=i}update(){this.texture=this.textureNode.value}}class ox extends vy{constructor(t,e){super(t,e?e.array:null),this.attribute=e,this.isStorageBuffer=!0}}let lx=0;class hx extends ox{constructor(t,e){super("StorageBuffer_"+lx++,t?t.value:null),this.nodeUniform=t,this.access=t?t.access:jf,this.groupNode=e}get buffer(){return this.nodeUniform.value}}class cx extends Um{constructor(t){super(),this.device=t,this.mipmapSampler=t.createSampler({minFilter:Bf}),this.flipYSampler=t.createSampler({minFilter:Ff}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=t.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=t.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=t.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(t){let e=this.transferPipelines[t];return void 0===e&&(e=this.device.createRenderPipeline({label:`mipmap-${t}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:t}]},primitive:{topology:vf,stripIndexFormat:Lf},layout:"auto"}),this.transferPipelines[t]=e),e}getFlipYPipeline(t){let e=this.flipYPipelines[t];return void 0===e&&(e=this.device.createRenderPipeline({label:`flipY-${t}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:t}]},primitive:{topology:vf,stripIndexFormat:Lf},layout:"auto"}),this.flipYPipelines[t]=e),e}flipY(t,e,i=0){const n=e.format,{width:r,height:s}=e.size,a=this.getTransferPipeline(n),o=this.getFlipYPipeline(n),l=this.device.createTexture({size:{width:r,height:s,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),h=t.createView({baseMipLevel:0,mipLevelCount:1,dimension:Xf,baseArrayLayer:i}),c=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:Xf,baseArrayLayer:0}),u=this.device.createCommandEncoder({}),d=(t,e,i)=>{const n=t.getBindGroupLayout(0),r=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:e}]}),s=u.beginRenderPass({colorAttachments:[{view:i,loadOp:Pf,storeOp:Cf,clearValue:[0,0,0,0]}]});s.setPipeline(t),s.setBindGroup(0,r),s.draw(4,1,0,0),s.end()};d(a,h,c),d(o,c,h),this.device.queue.submit([u.finish()]),l.destroy()}generateMipmaps(t,e,i=0){const n=this.get(t);void 0===n.useCount&&(n.useCount=0,n.layers=[]);const r=n.layers[i]||this._mipmapCreateBundles(t,e,i),s=this.device.createCommandEncoder({});this._mipmapRunBundles(s,r),this.device.queue.submit([s.finish()]),0!==n.useCount&&(n.layers[i]=r),n.useCount++}_mipmapCreateBundles(t,e,i){const n=this.getTransferPipeline(e.format),r=n.getBindGroupLayout(0);let s=t.createView({baseMipLevel:0,mipLevelCount:1,dimension:Xf,baseArrayLayer:i});const a=[];for(let o=1;o<e.mipLevelCount;o++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:s}]}),h=t.createView({baseMipLevel:o,mipLevelCount:1,dimension:Xf,baseArrayLayer:i}),c={colorAttachments:[{view:h,loadOp:Pf,storeOp:Cf,clearValue:[0,0,0,0]}]},u=this.device.createRenderBundleEncoder({colorFormats:[e.format]});u.setPipeline(n),u.setBindGroup(0,l),u.draw(4,1,0,0),a.push({renderBundles:[u.finish()],passDescriptor:c}),s=h}return a}_mipmapRunBundles(t,e){const i=e.length;for(let n=0;n<i;n++){const i=e[n],r=t.beginRenderPass(i.passDescriptor);r.executeBundles(i.renderBundles),r.end()}}}const ux={512:"never",513:"less",514:"equal",515:"less-equal",516:"greater",518:"greater-equal",519:"always",517:"not-equal"},dx=[0,1,3,2,4,5];class px{constructor(t){this.backend=t,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Kn,this.depthTexture.name="depthBuffer"}createSampler(t){const e=this.backend,i=e.device,n=e.get(t),r={addressModeU:this._convertAddressMode(t.wrapS),addressModeV:this._convertAddressMode(t.wrapT),addressModeW:this._convertAddressMode(t.wrapR),magFilter:this._convertFilterMode(t.magFilter),minFilter:this._convertFilterMode(t.minFilter),mipmapFilter:this._convertFilterMode(t.minFilter),maxAnisotropy:1};r.magFilter===Bf&&r.minFilter===Bf&&r.mipmapFilter===Bf&&(r.maxAnisotropy=t.anisotropy),t.isDepthTexture&&null!==t.compareFunction&&(r.compare=ux[t.compareFunction]),n.sampler=i.createSampler(r)}createDefaultTexture(t){let e;const i=mx(t);t.isCubeTexture?e=this._getDefaultCubeTextureGPU(i):t.isVideoTexture?this.backend.get(t).externalTexture=this._getDefaultVideoFrame():e=this._getDefaultTextureGPU(i),this.backend.get(t).texture=e}createTexture(t,e={}){const i=this.backend,n=i.get(t);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===e.needsMipmaps&&(e.needsMipmaps=!1),void 0===e.levels&&(e.levels=1),void 0===e.depth&&(e.depth=1);const{width:r,height:s,depth:a,levels:o}=e;t.isFramebufferTexture&&(e.renderTarget?e.format=this.backend.utils.getCurrentColorFormat(e.renderTarget):e.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(t),h=t.internalFormat||e.format||mx(t,i.device);n.format=h;let c=void 0!==e.sampleCount?e.sampleCount:1;c=i.utils.getSampleCount(c);const u=t.isRenderTargetTexture&&!t.isMultisampleRenderTargetTexture?1:c;let d=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===t.isStorageTexture&&(d|=GPUTextureUsage.STORAGE_BINDING),!0!==t.isCompressedTexture&&!0!==t.isCompressedArrayTexture&&(d|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:t.name,size:{width:r,height:s,depthOrArrayLayers:a},mipLevelCount:o,sampleCount:u,dimension:l,format:h,usage:d};if(t.isVideoTexture){const e=t.source.data,i=new VideoFrame(e);p.size.width=i.displayWidth,p.size.height=i.displayHeight,i.close(),n.externalTexture=e}else{if(void 0===h)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(t);n.texture=i.device.createTexture(p)}if(t.isRenderTargetTexture&&c>1&&!t.isMultisampleRenderTargetTexture){const t=Object.assign({},p);t.label=t.label+"-msaa",t.sampleCount=c,n.msaaTexture=i.device.createTexture(t)}n.initialized=!0,n.textureDescriptorGPU=p}destroyTexture(t){const e=this.backend,i=e.get(t);i.texture.destroy(),void 0!==i.msaaTexture&&i.msaaTexture.destroy(),e.delete(t)}destroySampler(t){delete this.backend.get(t).sampler}generateMipmaps(t){const e=this.backend.get(t);if(t.isCubeTexture)for(let t=0;t<6;t++)this._generateMipmaps(e.texture,e.textureDescriptorGPU,t);else{const i=t.image.depth||1;for(let t=0;t<i;t++)this._generateMipmaps(e.texture,e.textureDescriptorGPU,t)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const t=this.backend,{width:e,height:i}=t.getDrawingBufferSize();return this.colorBuffer=t.device.createTexture({label:"colorBuffer",size:{width:e,height:i,depthOrArrayLayers:1},sampleCount:t.utils.getSampleCount(t.renderer.samples),format:t.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(t=!0,e=!1){const i=this.backend,{width:n,height:r}=i.getDrawingBufferSize(),s=this.depthTexture,a=i.get(s).texture;let o,l;if(e?(o=L,l=N):t&&(o=U,l=A),void 0!==a){if(s.image.width===n&&s.image.height===r&&s.format===o&&s.type===l)return a;this.destroyTexture(s)}return s.name="depthBuffer",s.format=o,s.type=l,s.image.width=n,s.image.height=r,this.createTexture(s,{sampleCount:i.utils.getSampleCount(i.renderer.samples),width:n,height:r}),i.get(s).texture}updateTexture(t,e){const i=this.backend.get(t),{textureDescriptorGPU:n}=i;if(!t.isRenderTargetTexture&&void 0!==n){if(t.isDataTexture)this._copyBufferToTexture(e.image,i.texture,n,0,t.flipY);else if(t.isDataArrayTexture||t.isData3DTexture)for(let r=0;r<e.image.depth;r++)this._copyBufferToTexture(e.image,i.texture,n,r,t.flipY,r);else if(t.isCompressedTexture||t.isCompressedArrayTexture)this._copyCompressedBufferToTexture(t.mipmaps,i.texture,n);else if(t.isCubeTexture)this._copyCubeMapToTexture(e.images,i.texture,n,t.flipY);else if(t.isVideoTexture){const e=t.source.data;i.externalTexture=e}else this._copyImageToTexture(e.image,i.texture,n,0,t.flipY);i.version=t.version,t.onUpdate&&t.onUpdate(t)}}async copyTextureToBuffer(t,e,i,n,r,s){const a=this.backend.device,o=this.backend.get(t),l=o.texture,h=o.textureDescriptorGPU.format,c=this._getBytesPerTexel(h);let u=n*c;u=256*Math.ceil(u/256);const d=a.createBuffer({size:n*r*c,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:e,y:i,z:s}},{buffer:d,bytesPerRow:u},{width:n,height:r});const m=this._getTypedArrayType(h);return a.queue.submit([p.finish()]),await d.mapAsync(GPUMapMode.READ),new m(d.getMappedRange())}_isEnvironmentTexture(t){const e=t.mapping;return e===u||e===d||e===h||e===c}_getDefaultTextureGPU(t){let e=this.defaultTexture[t];if(void 0===e){const i=new Kt;i.minFilter=g,i.magFilter=g,this.createTexture(i,{width:1,height:1,format:t}),this.defaultTexture[t]=e=i}return this.backend.get(e).texture}_getDefaultCubeTextureGPU(t){let e=this.defaultTexture[t];if(void 0===e){const i=new yn;i.minFilter=g,i.magFilter=g,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[t]=e=i}return this.backend.get(e).texture}_getDefaultVideoFrame(){let t=this.defaultVideoFrame;if(null===t){const e={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=t=new VideoFrame(new Uint8Array([0,0,0,255]),e)}return t}_copyCubeMapToTexture(t,e,i,n){for(let r=0;r<6;r++){const s=t[r],a=!0===n?dx[r]:r;s.isDataTexture?this._copyBufferToTexture(s.image,e,i,a,n):this._copyImageToTexture(s,e,i,a,n)}}_copyImageToTexture(t,e,i,n,r){this.backend.device.queue.copyExternalImageToTexture({source:t},{texture:e,mipLevel:0,origin:{x:0,y:0,z:n}},{width:t.width,height:t.height,depthOrArrayLayers:1}),!0===r&&this._flipY(e,i,n)}_getPassUtils(){let t=this._passUtils;return null===t&&(this._passUtils=t=new cx(this.backend.device)),t}_generateMipmaps(t,e,i=0){this._getPassUtils().generateMipmaps(t,e,i)}_flipY(t,e,i=0){this._getPassUtils().flipY(t,e,i)}_copyBufferToTexture(t,e,i,n,r,s=0){const a=this.backend.device,o=t.data,l=this._getBytesPerTexel(i.format),h=t.width*l;a.queue.writeTexture({texture:e,mipLevel:0,origin:{x:0,y:0,z:n}},o,{offset:t.width*t.height*l*s,bytesPerRow:h},{width:t.width,height:t.height,depthOrArrayLayers:1}),!0===r&&this._flipY(e,i,n)}_copyCompressedBufferToTexture(t,e,i){const n=this.backend.device,r=this._getBlockData(i.format),s=i.size.depthOrArrayLayers>1;for(let a=0;a<t.length;a++){const o=t[a],l=o.width,h=o.height,c=s?i.size.depthOrArrayLayers:1,u=Math.ceil(l/r.width)*r.byteLength,d=u*Math.ceil(h/r.height);for(let t=0;t<c;t++)n.queue.writeTexture({texture:e,mipLevel:a,origin:{x:0,y:0,z:t}},o.data,{offset:t*d,bytesPerRow:u,rowsPerImage:Math.ceil(h/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(h/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(t){return t===Df.BC1RGBAUnorm||t===Df.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:t===Df.BC2RGBAUnorm||t===Df.BC2RGBAUnormSRGB||t===Df.BC3RGBAUnorm||t===Df.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:t===Df.BC4RUnorm||t===Df.BC4RSNorm?{byteLength:8,width:4,height:4}:t===Df.BC5RGUnorm||t===Df.BC5RGSnorm||t===Df.BC6HRGBUFloat||t===Df.BC6HRGBFloat||t===Df.BC7RGBAUnorm||t===Df.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:t===Df.ETC2RGB8Unorm||t===Df.ETC2RGB8UnormSRGB||t===Df.ETC2RGB8A1Unorm||t===Df.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:t===Df.ETC2RGBA8Unorm||t===Df.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:t===Df.EACR11Unorm||t===Df.EACR11Snorm?{byteLength:8,width:4,height:4}:t===Df.EACRG11Unorm||t===Df.EACRG11Snorm||t===Df.ASTC4x4Unorm||t===Df.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:t===Df.ASTC5x4Unorm||t===Df.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:t===Df.ASTC5x5Unorm||t===Df.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:t===Df.ASTC6x5Unorm||t===Df.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:t===Df.ASTC6x6Unorm||t===Df.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:t===Df.ASTC8x5Unorm||t===Df.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:t===Df.ASTC8x6Unorm||t===Df.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:t===Df.ASTC8x8Unorm||t===Df.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:t===Df.ASTC10x5Unorm||t===Df.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:t===Df.ASTC10x6Unorm||t===Df.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:t===Df.ASTC10x8Unorm||t===Df.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:t===Df.ASTC10x10Unorm||t===Df.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:t===Df.ASTC12x10Unorm||t===Df.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:t===Df.ASTC12x12Unorm||t===Df.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(t){let e="clamp-to-edge";return t===p?e="repeat":t===f&&(e="mirror-repeat"),e}_convertFilterMode(t){let e=Bf;return t!==g&&t!==_&&t!==y||(e=Ff),e}_getBytesPerTexel(t){return t===Df.R8Unorm||t===Df.R8Snorm||t===Df.R8Uint||t===Df.R8Sint?1:t===Df.R16Uint||t===Df.R16Sint||t===Df.R16Float||t===Df.RG8Unorm||t===Df.RG8Snorm||t===Df.RG8Uint||t===Df.RG8Sint?2:t===Df.R32Uint||t===Df.R32Sint||t===Df.R32Float||t===Df.RG16Uint||t===Df.RG16Sint||t===Df.RG16Float||t===Df.RGBA8Unorm||t===Df.RGBA8UnormSRGB||t===Df.RGBA8Snorm||t===Df.RGBA8Uint||t===Df.RGBA8Sint||t===Df.BGRA8Unorm||t===Df.BGRA8UnormSRGB||t===Df.RGB9E5UFloat||t===Df.RGB10A2Unorm||t===Df.RG11B10UFloat||t===Df.Depth32Float||t===Df.Depth24Plus||t===Df.Depth24PlusStencil8||t===Df.Depth32FloatStencil8?4:t===Df.RG32Uint||t===Df.RG32Sint||t===Df.RG32Float||t===Df.RGBA16Uint||t===Df.RGBA16Sint||t===Df.RGBA16Float?8:t===Df.RGBA32Uint||t===Df.RGBA32Sint||t===Df.RGBA32Float?16:void 0}_getTypedArrayType(t){return t===Df.R8Uint?Uint8Array:t===Df.R8Sint?Int8Array:t===Df.R8Unorm?Uint8Array:t===Df.R8Snorm?Int8Array:t===Df.RG8Uint?Uint8Array:t===Df.RG8Sint?Int8Array:t===Df.RG8Unorm?Uint8Array:t===Df.RG8Snorm?Int8Array:t===Df.RGBA8Uint?Uint8Array:t===Df.RGBA8Sint?Int8Array:t===Df.RGBA8Unorm?Uint8Array:t===Df.RGBA8Snorm?Int8Array:t===Df.R16Uint?Uint16Array:t===Df.R16Sint?Int16Array:t===Df.RG16Uint?Uint16Array:t===Df.RG16Sint?Int16Array:t===Df.RGBA16Uint?Uint16Array:t===Df.RGBA16Sint?Int16Array:t===Df.R16Float||t===Df.RG16Float||t===Df.RGBA16Float?Uint16Array:t===Df.R32Uint?Uint32Array:t===Df.R32Sint?Int32Array:t===Df.R32Float?Float32Array:t===Df.RG32Uint?Uint32Array:t===Df.RG32Sint?Int32Array:t===Df.RG32Float?Float32Array:t===Df.RGBA32Uint?Uint32Array:t===Df.RGBA32Sint?Int32Array:t===Df.RGBA32Float?Float32Array:t===Df.BGRA8Unorm||t===Df.BGRA8UnormSRGB?Uint8Array:t===Df.RGB10A2Unorm||t===Df.RGB9E5UFloat||t===Df.RG11B10UFloat?Uint32Array:t===Df.Depth32Float?Float32Array:t===Df.Depth24Plus||t===Df.Depth24PlusStencil8?Uint32Array:t===Df.Depth32FloatStencil8?Float32Array:void 0}_getDimension(t){let e;return e=t.isData3DTexture?"3d":"2d",e}}function mx(t,e=null){const i=t.format,n=t.type,r=t.colorSpace;let s;if(!0===t.isCompressedTexture||!0===t.isCompressedArrayTexture)switch(i){case V:s=r===ct?Df.BC1RGBAUnormSRGB:Df.BC1RGBAUnorm;break;case G:s=r===ct?Df.BC2RGBAUnormSRGB:Df.BC2RGBAUnorm;break;case H:s=r===ct?Df.BC3RGBAUnormSRGB:Df.BC3RGBAUnorm;break;case W:s=r===ct?Df.ETC2RGB8UnormSRGB:Df.ETC2RGB8Unorm;break;case j:s=r===ct?Df.ETC2RGBA8UnormSRGB:Df.ETC2RGBA8Unorm;break;case X:s=r===ct?Df.ASTC4x4UnormSRGB:Df.ASTC4x4Unorm;break;case $:s=r===ct?Df.ASTC5x4UnormSRGB:Df.ASTC5x4Unorm;break;case q:s=r===ct?Df.ASTC5x5UnormSRGB:Df.ASTC5x5Unorm;break;case Y:s=r===ct?Df.ASTC6x5UnormSRGB:Df.ASTC6x5Unorm;break;case K:s=r===ct?Df.ASTC6x6UnormSRGB:Df.ASTC6x6Unorm;break;case Z:s=r===ct?Df.ASTC8x5UnormSRGB:Df.ASTC8x5Unorm;break;case J:s=r===ct?Df.ASTC8x6UnormSRGB:Df.ASTC8x6Unorm;break;case Q:s=r===ct?Df.ASTC8x8UnormSRGB:Df.ASTC8x8Unorm;break;case tt:s=r===ct?Df.ASTC10x5UnormSRGB:Df.ASTC10x5Unorm;break;case et:s=r===ct?Df.ASTC10x6UnormSRGB:Df.ASTC10x6Unorm;break;case it:s=r===ct?Df.ASTC10x8UnormSRGB:Df.ASTC10x8Unorm;break;case nt:s=r===ct?Df.ASTC10x10UnormSRGB:Df.ASTC10x10Unorm;break;case rt:s=r===ct?Df.ASTC12x10UnormSRGB:Df.ASTC12x10Unorm;break;case st:s=r===ct?Df.ASTC12x12UnormSRGB:Df.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",i)}else switch(i){case I:switch(n){case T:s=Df.RGBA8Snorm;break;case M:s=Df.RGBA16Sint;break;case E:s=Df.RGBA16Uint;break;case A:s=Df.RGBA32Uint;break;case w:s=Df.RGBA32Sint;break;case S:s=r===ct?Df.RGBA8UnormSRGB:Df.RGBA8Unorm;break;case C:s=Df.RGBA16Float;break;case R:s=Df.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case P:35902===n?s=Df.RGB9E5UFloat:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n);break;case D:switch(n){case T:s=Df.R8Snorm;break;case M:s=Df.R16Sint;break;case E:s=Df.R16Uint;break;case A:s=Df.R32Uint;break;case w:s=Df.R32Sint;break;case S:s=Df.R8Unorm;break;case C:s=Df.R16Float;break;case R:s=Df.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case F:switch(n){case T:s=Df.RG8Snorm;break;case M:s=Df.RG16Sint;break;case E:s=Df.RG16Uint;break;case A:s=Df.RG32Uint;break;case w:s=Df.RG32Sint;break;case S:s=Df.RG8Unorm;break;case C:s=Df.RG16Float;break;case R:s=Df.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case U:switch(n){case E:s=Df.Depth16Unorm;break;case A:s=Df.Depth24Plus;break;case R:s=Df.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case L:switch(n){case N:s=Df.Depth24PlusStencil8;break;case R:e&&!1===e.features.has(Zf.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=Df.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case B:switch(n){case w:s=Df.R32Sint;break;case A:s=Df.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case O:switch(n){case w:s=Df.RG32Sint;break;case A:s=Df.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case z:switch(n){case w:s=Df.RGBA32Sint;break;case A:s=Df.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",i)}return s}const fx=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,gx=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,_x={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class yx extends ty{constructor(t){const{type:e,inputs:i,name:n,inputsCode:r,blockCode:s,outputType:a}=(t=>{const e=(t=t.trim()).match(fx);if(null!==e&&4===e.length){const i=e[2],n=[];let r=null;for(;null!==(r=gx.exec(i));)n.push({name:r[1],type:r[2]});const s=[];for(let t=0;t<n.length;t++){const{name:e,type:i}=n[t];let r=i;r.startsWith("ptr")?r="pointer":(r.startsWith("texture")&&(r=i.split("<")[0]),r=_x[r]),s.push(new G_(r,e))}const a=t.substring(e[0].length),o=e[3]||"void",l=void 0!==e[1]?e[1]:"";return{type:_x[o]||o,inputs:s,name:l,inputsCode:i,blockCode:a,outputType:o}}throw new Error("FunctionNode: Function is not a WGSL code.")})(t);super(e,i,n),this.inputsCode=r,this.blockCode=s,this.outputType=a}getCode(t=this.name){const e="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${t} ( ${this.inputsCode.trim()} ) ${e}`+this.blockCode}}class xx extends Q_{parseFunction(t){return new yx(t)}}const vx=self.GPUShaderStage,bx={vertex:vx?vx.VERTEX:1,fragment:vx?vx.FRAGMENT:2,compute:vx?vx.COMPUTE:4},Sx={instance:!0,swizzleAssign:!1,storageBuffer:!0},Tx={"^^":"tsl_xor"},Mx={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Ex={tsl_xor:new dg("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new dg("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new dg("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new dg("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new dg("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new dg("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new dg("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new dg("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new dg("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new dg("\nfn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n"),biquadraticTexture:new dg("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {\n\n\tlet iRes = vec2i( textureDimensions( map, level ) );\n\tlet res = vec2f( iRes );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n\tlet rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n\tlet rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n\tlet rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},wx={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(Ex.pow_float=new dg("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),Ex.pow_vec2=new dg("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[Ex.pow_float]),Ex.pow_vec3=new dg("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[Ex.pow_float]),Ex.pow_vec4=new dg("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[Ex.pow_float]),wx.pow_float="tsl_pow_float",wx.pow_vec2="tsl_pow_vec2",wx.pow_vec3="tsl_pow_vec3",wx.pow_vec4="tsl_pow_vec4");let Ax="";!0!==/Firefox|Deno/g.test(navigator.userAgent)&&(Ax+="diagnostic( off, derivative_uniformity );\n");class Rx extends k_{constructor(t,e){super(t,e,new xx),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(t){return!0===t.isVideoTexture&&""!==t.colorSpace}_generateTextureSample(t,e,i,n,r=this.shaderStage){return"fragment"===r?n?`textureSample( ${e}, ${e}_sampler, ${i}, ${n} )`:`textureSample( ${e}, ${e}_sampler, ${i} )`:this.isFilteredTexture(t)?this.generateFilteredTexture(t,e,i):this.generateTextureLod(t,e,i,"0")}_generateVideoSample(t,e,i=this.shaderStage){if("fragment"===i)return`textureSampleBaseClampToEdge( ${t}, ${t}_sampler, vec2<f32>( ${e}.x, 1.0 - ${e}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${i} shader.`)}_generateTextureSampleLevel(t,e,i,n,r,s=this.shaderStage){return"fragment"===s&&!1===this.isUnfilterable(t)?`textureSampleLevel( ${e}, ${e}_sampler, ${i}, ${n} )`:this.isFilteredTexture(t)?this.generateFilteredTexture(t,e,i,n):this.generateTextureLod(t,e,i,n)}generateFilteredTexture(t,e,i,n="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${e}, ${i}, i32( ${n} ) )`}generateTextureLod(t,e,i,n="0"){return this._include("repeatWrapping"),`textureLoad( ${e}, tsl_repeatWrapping( ${i}, ${!0===t.isMultisampleRenderTargetTexture?`textureDimensions( ${e} )`:`textureDimensions( ${e}, 0 )`} ), i32( ${n} ) )`}generateTextureLoad(t,e,i,n,r="0u"){return n?`textureLoad( ${e}, ${i}, ${n}, ${r} )`:`textureLoad( ${e}, ${i}, ${r} )`}generateTextureStore(t,e,i,n){return`textureStore( ${e}, ${i}, ${n} )`}isUnfilterable(t){return"float"!==this.getComponentTypeFromTexture(t)||!this.isAvailable("float32Filterable")&&!0===t.isDataTexture&&t.type===R||!0===t.isMultisampleRenderTargetTexture}generateTexture(t,e,i,n,r=this.shaderStage){let s=null;return s=!0===t.isVideoTexture?this._generateVideoSample(e,i,r):this.isUnfilterable(t)?this.generateTextureLod(t,e,i,"0",n,r):this._generateTextureSample(t,e,i,n,r),s}generateTextureGrad(t,e,i,n,r,s=this.shaderStage){if("fragment"===s)return`textureSampleGrad( ${e}, ${e}_sampler, ${i},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${s} shader.`)}generateTextureCompare(t,e,i,n,r,s=this.shaderStage){if("fragment"===s)return`textureSampleCompare( ${e}, ${e}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${s} shader.`)}generateTextureLevel(t,e,i,n,r,s=this.shaderStage){let a=null;return a=!0===t.isVideoTexture?this._generateVideoSample(e,i,s):this._generateTextureSampleLevel(t,e,i,n,r,s),a}generateTextureBias(t,e,i,n,r,s=this.shaderStage){if("fragment"===s)return`textureSampleBias( ${e}, ${e}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${s} shader.`)}getPropertyName(t,e=this.shaderStage){if(!0===t.isNodeVarying&&!0===t.needsInterpolation){if("vertex"===e)return`varyings.${t.name}`}else if(!0===t.isNodeUniform){const e=t.name,i=t.type;return"texture"===i||"cubeTexture"===i||"storageTexture"===i||"texture3D"===i?e:"buffer"===i||"storageBuffer"===i||"indirectStorageBuffer"===i?`NodeBuffer_${t.id}.${e}`:t.groupNode.name+"."+e}return super.getPropertyName(t)}getOutputStructName(){return"output"}_getUniformGroupCount(t){return Object.keys(this.uniforms[t]).length}getFunctionOperator(t){const e=Tx[t];return void 0!==e?(this._include(e),e):null}getStorageAccess(t){if(t.isStorageTextureNode)switch(t.access){case"read-only":return"read";case"write-only":return"write";default:return"read_write"}else switch(t.access){case jf:return"read_write";case"read-only-storage":return"read";default:return"write"}}getUniformFromNode(t,e,i,n=null){const r=super.getUniformFromNode(t,e,i,n),s=this.getDataFromNode(t,i,this.globalCache);if(void 0===s.uniformGPU){let n;const a=t.groupNode,o=a.name,l=this.getBindGroupArray(o,i);if("texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e){let s=null;if("texture"===e||"storageTexture"===e?s=new Cy(r.name,r.node,a,t.access?t.access:null):"cubeTexture"===e?s=new Ny(r.name,r.node,a,t.access?t.access:null):"texture3D"===e&&(s=new Py(r.name,r.node,a,t.access?t.access:null)),s.store=!0===t.isStorageTextureNode,s.setVisibility(bx[i]),"fragment"===i&&!1===this.isUnfilterable(t.value)&&!1===s.store){const t=new ax(`${r.name}_sampler`,r.node,a);t.setVisibility(bx[i]),l.push(t,s),n=[t,s]}else l.push(s),n=[s]}else if("buffer"===e||"storageBuffer"===e||"indirectStorageBuffer"===e){const r=new("buffer"===e?Ty:hx)(t,a);r.setVisibility(bx[i]),l.push(r),n=r}else{const t=this.uniformGroups[i]||(this.uniformGroups[i]={});let s=t[o];void 0===s&&(s=new wy(o,a),s.setVisibility(bx[i]),t[o]=s,l.push(s)),n=this.getNodeUniform(r,e),s.addUniform(n)}s.uniformGPU=n}return r}getBuiltin(t,e,i,n=this.shaderStage){const r=this.builtins[n]||(this.builtins[n]=new Map);return!1===r.has(t)&&r.set(t,{name:t,property:e,type:i}),e}hasBuiltin(t,e=this.shaderStage){return void 0!==this.builtins[e]&&this.builtins[e].has(t)}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(t){const e=t.layout,i=this.flowShaderNode(t),n=[];for(const t of e.inputs)n.push(t.name+" : "+this.getType(t.type));let r=`fn ${e.name}( ${n.join(", ")} ) -> ${this.getType(e.type)} {\n${i.vars}\n${i.code}\n`;return i.result&&(r+=`\treturn ${i.result};\n`),r+="\n}\n",r}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(t,e=this.shaderStage){(this.directives[e]||(this.directives[e]=new Set)).add(t)}getDirectives(t){const e=[],i=this.directives[t];if(void 0!==i)for(const t of i)e.push(`enable ${t};`);return e.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(t){const e=[],i=this.builtins[t];if(void 0!==i)for(const{name:t,property:n,type:r}of i.values())e.push(`@builtin( ${t} ) ${n} : ${r}`);return e.join(",\n\t")}getScopedArray(t,e,i,n){return!1===this.scopedArrays.has(t)&&this.scopedArrays.set(t,{name:t,scope:e,bufferType:i,bufferCount:n}),t}getScopedArrays(t){if("compute"!==t)return;const e=[];for(const{name:t,scope:i,bufferType:n,bufferCount:r}of this.scopedArrays.values()){const s=this.getType(n);e.push(`var<${i}> ${t}: array< ${s}, ${r} >;`)}return e.join("\n")}getAttributes(t){const e=[];if("compute"===t&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",t),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),"vertex"===t||"compute"===t){const t=this.getBuiltins("attribute");t&&e.push(t);const i=this.getAttributesArray();for(let t=0,n=i.length;t<n;t++){const n=i[t],r=n.name,s=this.getType(n.type);e.push(`@location( ${t} ) ${r} : ${s}`)}}return e.join(",\n\t")}getStructMembers(t){const e=[],i=t.getMemberTypes();for(let t=0;t<i.length;t++){const n=i[t];e.push(`\t@location( ${t} ) m${t} : ${n}<f32>`)}const n=this.getBuiltins("output");return n&&e.push("\t"+n),e.join(",\n")}getStructs(t){const e=[],i=this.structs[t];for(let t=0,n=i.length;t<n;t++){const n=i[t],r=n.name;let s=`struct ${r} {\n`;s+=this.getStructMembers(n),s+="\n}",e.push(s),e.push(`\nvar<private> output : ${r};\n\n`)}return e.join("\n\n")}getVar(t,e){return`var ${e} : ${this.getType(t)}`}getVars(t){const e=[],i=this.vars[t];if(void 0!==i)for(const t of i)e.push(`\t${this.getVar(t.type,t.name)};`);return`\n${e.join("\n")}\n`}getVaryings(t){const e=[];if("vertex"===t&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===t||"fragment"===t){const i=this.varyings,n=this.vars[t];for(let r=0;r<i.length;r++){const s=i[r];if(s.needsInterpolation){let t=`@location( ${r} )`;/^(int|uint|ivec|uvec)/.test(s.type)&&(t+=" @interpolate( flat )"),e.push(`${t} ${s.name} : ${this.getType(s.type)}`)}else"vertex"===t&&!1===n.includes(s)&&n.push(s)}}const i=this.getBuiltins(t);i&&e.push(i);const n=e.join(",\n\t");return"vertex"===t?this._getWGSLStruct("VaryingsStruct","\t"+n):n}getUniforms(t){const e=this.uniforms[t],i=[],n=[],r=[],s={};for(const r of e){const e=r.groupNode.name,a=this.bindingsIndexes[e];if("texture"===r.type||"cubeTexture"===r.type||"storageTexture"===r.type||"texture3D"===r.type){const e=r.node.value;let n;"fragment"===t&&!1===this.isUnfilterable(e)&&!0!==r.node.isStorageTextureNode&&(!0===e.isDepthTexture&&null!==e.compareFunction?i.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${r.name}_sampler : sampler_comparison;`):i.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${r.name}_sampler : sampler;`));let s="";!0===e.isMultisampleRenderTargetTexture&&(s="_multisampled"),n=!0===e.isCubeTexture?"texture_cube<f32>":!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?"texture_2d_array<f32>":!0===e.isDepthTexture?`texture_depth${s}_2d`:!0===e.isVideoTexture?"texture_external":!0===e.isData3DTexture?"texture_3d<f32>":!0===r.node.isStorageTextureNode?`texture_storage_2d<${mx(e)}, ${this.getStorageAccess(r.node)}>`:`texture${s}_2d<${this.getComponentTypeFromTexture(e).charAt(0)}32>`,i.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${r.name} : ${n};`)}else if("buffer"===r.type||"storageBuffer"===r.type||"indirectStorageBuffer"===r.type){const t=r.node,e=this.getType(t.bufferType),i=t.bufferCount,s=i>0&&"buffer"===r.type?", "+i:"",o=t.isAtomic?`atomic<${e}>`:`${e}`,l=`\t${r.name} : array< ${o}${s} >\n`,h=t.isStorageBufferNode?`storage, ${this.getStorageAccess(t)}`:"uniform";n.push(this._getWGSLStructBinding("NodeBuffer_"+t.id,l,h,a.binding++,a.group))}else{const t=this.getType(this.getVectorType(r.type)),e=r.groupNode.name;(s[e]||(s[e]={index:a.binding++,id:a.group,snippets:[]})).snippets.push(`\t${r.name} : ${t}`)}}for(const t in s){const e=s[t];r.push(this._getWGSLStructBinding(t,e.snippets.join(",\n"),"uniform",e.index,e.id))}let a=i.join("\n");return a+=n.join("\n"),a+=r.join("\n"),a}buildCode(){const t=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const e in t){const i=t[e];i.uniforms=this.getUniforms(e),i.attributes=this.getAttributes(e),i.varyings=this.getVaryings(e),i.structs=this.getStructs(e),i.vars=this.getVars(e),i.codes=this.getCodes(e),i.directives=this.getDirectives(e),i.scopedArrays=this.getScopedArrays(e);let n="// code\n\n";n+=this.flowCode[e];const r=this.flowNodes[e],s=r[r.length-1],a=s.outputNode,o=void 0!==a&&!0===a.isOutputStructNode;for(const t of r){const r=this.getFlowData(t),l=t.name;if(l&&(n.length>0&&(n+="\n"),n+=`\t// flow -> ${l}\n\t`),n+=`${r.code}\n\t`,t===s&&"compute"!==e)if(n+="// result\n\n\t","vertex"===e)n+=`varyings.Vertex = ${r.result};`;else if("fragment"===e)if(o)i.returnType=a.nodeType,n+=`return ${r.result};`;else{let t="\t@location(0) color: vec4<f32>";const e=this.getBuiltins("output");e&&(t+=",\n\t"+e),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",t),i.structs+="\nvar<private> output : OutputStruct;\n\n",n+=`output.color = ${r.result};\n\n\treturn output;`}}i.flow=n}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(t.vertex),this.fragmentShader=this._getWGSLFragmentCode(t.fragment)):this.computeShader=this._getWGSLComputeCode(t.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(t,e=null){let i;return null!==e&&(i=this._getWGSLMethod(t+"_"+e)),void 0===i&&(i=this._getWGSLMethod(t)),i||t}getType(t){return Mx[t]||t}isAvailable(t){let e=Sx[t];return void 0===e&&("float32Filterable"===t&&(e=this.renderer.hasFeature("float32-filterable")),Sx[t]=e),e}_getWGSLMethod(t){return void 0!==Ex[t]&&this._include(t),wx[t]}_include(t){const e=Ex[t];return e.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(e),e}_getWGSLVertexCode(t){return`${this.getSignature()}\n// directives\n${t.directives}\n\n// uniforms\n${t.uniforms}\n\n// varyings\n${t.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${t.codes}\n\n@vertex\nfn main( ${t.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${t.vars}\n\n\t// flow\n\t${t.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(t){return`${this.getSignature()}\n// global\n${Ax}\n\n// uniforms\n${t.uniforms}\n\n// structs\n${t.structs}\n\n// codes\n${t.codes}\n\n@fragment\nfn main( ${t.varyings} ) -> ${t.returnType} {\n\n\t// vars\n\t${t.vars}\n\n\t// flow\n\t${t.flow}\n\n}\n`}_getWGSLComputeCode(t,e){return`${this.getSignature()}\n// directives\n${t.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${t.scopedArrays}\n\n// uniforms\n${t.uniforms}\n\n// codes\n${t.codes}\n\n@compute @workgroup_size( ${e} )\nfn main( ${t.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x + id.y * numWorkgroups.x * u32(${e}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${e});\n\n\t// vars\n\t${t.vars}\n\n\t// flow\n\t${t.flow}\n\n}\n`}_getWGSLStruct(t,e){return`\nstruct ${t} {\n${e}\n};`}_getWGSLStructBinding(t,e,i,n=0,r=0){const s=t+"Struct";return`${this._getWGSLStruct(s,e)}\n@binding( ${n} ) @group( ${r} )\nvar<${i}> ${t} : ${s};`}}class Cx{constructor(t){this.backend=t}getCurrentDepthStencilFormat(t){let e;return null!==t.depthTexture?e=this.getTextureFormatGPU(t.depthTexture):t.depth&&t.stencil?e=Df.Depth24PlusStencil8:t.depth&&(e=Df.Depth24Plus),e}getTextureFormatGPU(t){return this.backend.get(t).format}getCurrentColorFormat(t){let e;return e=null!==t.textures?this.getTextureFormatGPU(t.textures[0]):this.getPreferredCanvasFormat(),e}getCurrentColorSpace(t){return null!==t.textures?t.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(t,e){return t.isPoints?"point-list":t.isLineSegments||t.isMesh&&!0===e.wireframe?"line-list":t.isLine?"line-strip":t.isMesh?"triangle-list":void 0}getSampleCount(t){let e=1;return t>1&&(e=Math.pow(2,Math.floor(Math.log2(t))),2===e&&(e=4)),e}getSampleCountRenderContext(t){return null!==t.textures?this.getSampleCount(t.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?Df.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const Nx=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),Px=new Map([[Oi,["float16"]]]),Ix=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class Ux{constructor(t){this.backend=t}createAttribute(t,e){const i=this._getBufferAttribute(t),n=this.backend,r=n.get(i);let s=r.buffer;if(void 0===s){const a=n.device;let o=i.array;if(!1===t.normalized&&(o.constructor===Int16Array||o.constructor===Uint16Array)){const t=new Uint32Array(o.length);for(let e=0;e<o.length;e++)t[e]=o[e];o=t}if(i.array=o,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&3===i.itemSize){o=new o.constructor(4*i.count);for(let t=0;t<i.count;t++)o.set(i.array.subarray(3*t,3*t+3),4*t);i.itemSize=4,i.array=o}const l=o.byteLength+(4-o.byteLength%4)%4;s=a.createBuffer({label:i.name,size:l,usage:e,mappedAtCreation:!0}),new o.constructor(s.getMappedRange()).set(o),s.unmap(),r.buffer=s}}updateAttribute(t){const e=this._getBufferAttribute(t),i=this.backend,n=i.device,r=i.get(e).buffer,s=e.array,a=e.updateRanges;if(0===a.length)n.queue.writeBuffer(r,0,s,0);else{for(let t=0,e=a.length;t<e;t++){const e=a[t];n.queue.writeBuffer(r,0,s,e.start*s.BYTES_PER_ELEMENT,e.count*s.BYTES_PER_ELEMENT)}e.clearUpdateRanges()}}createShaderVertexBuffers(t){const e=t.getAttributes(),i=new Map;for(let t=0;t<e.length;t++){const n=e[t],r=n.array.BYTES_PER_ELEMENT,s=this._getBufferAttribute(n);let a=i.get(s);if(void 0===a){let t,e;!0===n.isInterleavedBufferAttribute?(t=n.data.stride*r,e=n.data.isInstancedInterleavedBuffer?Kf:Yf):(t=n.itemSize*r,e=n.isInstancedBufferAttribute?Kf:Yf),!1!==n.normalized||n.array.constructor!==Int16Array&&n.array.constructor!==Uint16Array||(t=4),a={arrayStride:t,attributes:[],stepMode:e},i.set(s,a)}const o=this._getVertexFormat(n),l=!0===n.isInterleavedBufferAttribute?n.offset*r:0;a.attributes.push({shaderLocation:t,offset:l,format:o})}return Array.from(i.values())}destroyAttribute(t){const e=this.backend;e.get(this._getBufferAttribute(t)).buffer.destroy(),e.delete(t)}async getArrayBufferAsync(t){const e=this.backend,i=e.device,n=e.get(this._getBufferAttribute(t)).buffer,r=n.size,s=i.createBuffer({label:t.name,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=i.createCommandEncoder({});a.copyBufferToBuffer(n,0,s,0,r),s.unmap();const o=a.finish();return i.queue.submit([o]),await s.mapAsync(GPUMapMode.READ),s.getMappedRange()}_getVertexFormat(t){const{itemSize:e,normalized:i}=t,n=t.array.constructor,r=t.constructor;let s;if(1==e)s=Ix.get(n);else{const t=(Px.get(r)||Nx.get(n))[i?1:0];if(t){const i=n.BYTES_PER_ELEMENT*e,r=4*Math.floor((i+3)/4)/n.BYTES_PER_ELEMENT;if(r%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");s=`${t}x${r}`}}return s||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),s}_getBufferAttribute(t){return t.isInterleavedBufferAttribute&&(t=t.data),t}}class Lx{constructor(t){this.backend=t,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(t){const e=this.backend.device,i=[];let n=0;for(const e of t.bindings){const t={binding:n++,visibility:e.visibility};if(e.isUniformBuffer||e.isStorageBuffer){const i={};e.isStorageBuffer&&(i.type=e.access),t.buffer=i}else if(e.isSampler){const i={};e.texture.isDepthTexture&&null!==e.texture.compareFunction&&(i.type="comparison"),t.sampler=i}else if(e.isSampledTexture&&e.texture.isVideoTexture)t.externalTexture={};else if(e.isSampledTexture&&e.store){const i=this.backend.get(e.texture).texture.format,n=e.access;t.storageTexture={format:i,access:n}}else if(e.isSampledTexture){const i={};if(!0===e.texture.isMultisampleRenderTargetTexture&&(i.multisampled=!0),e.texture.isDepthTexture)i.sampleType="depth";else if(e.texture.isDataTexture||e.texture.isDataArrayTexture||e.texture.isData3DTexture){const t=e.texture.type;t===w?i.sampleType="sint":t===A?i.sampleType="uint":t===R&&(this.backend.hasFeature("float32-filterable")?i.sampleType="float":i.sampleType="unfilterable-float")}e.isSampledCubeTexture?i.viewDimension=qf:e.texture.isDataArrayTexture||e.texture.isCompressedArrayTexture?i.viewDimension=$f:e.isSampledTexture3D&&(i.viewDimension="3d"),t.texture=i}else console.error(`WebGPUBindingUtils: Unsupported binding "${e}".`);i.push(t)}return e.createBindGroupLayout({entries:i})}createBindings(t){const{backend:e,bindGroupLayoutCache:i}=this,n=e.get(t);let r=i.get(t.bindingsReference);void 0===r&&(r=this.createBindingsLayout(t),i.set(t.bindingsReference,r));const s=this.createBindGroup(t,r);n.layout=r,n.group=s}updateBinding(t){const e=this.backend,i=e.device,n=t.buffer,r=e.get(t).buffer;i.queue.writeBuffer(r,0,n,0)}createBindGroup(t,e){const i=this.backend,n=i.device;let r=0;const s=[];for(const e of t.bindings){if(e.isUniformBuffer){const t=i.get(e);if(void 0===t.buffer){const i=e.byteLength,r=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,s=n.createBuffer({label:"bindingBuffer_"+e.name,size:i,usage:r});t.buffer=s}s.push({binding:r,resource:{buffer:t.buffer}})}else if(e.isStorageBuffer){const t=i.get(e);if(void 0===t.buffer){const n=e.attribute;t.buffer=i.get(n).buffer}s.push({binding:r,resource:{buffer:t.buffer}})}else if(e.isSampler){const t=i.get(e.texture);s.push({binding:r,resource:t.sampler})}else if(e.isSampledTexture){const t=i.get(e.texture);let a;if(void 0!==t.externalTexture)a=n.importExternalTexture({source:t.externalTexture});else{const i=e.store?1:t.texture.mipLevelCount,n=`view-${t.texture.width}-${t.texture.height}-${i}`;if(a=t[n],void 0===a){const r="all";let s;s=e.isSampledCubeTexture?qf:e.isSampledTexture3D?"3d":e.texture.isDataArrayTexture||e.texture.isCompressedArrayTexture?$f:Xf,a=t[n]=t.texture.createView({aspect:r,dimension:s,mipLevelCount:i})}}s.push({binding:r,resource:a})}r++}return n.createBindGroup({label:"bindGroup_"+t.name,layout:e,entries:s})}}class Dx{constructor(t){this.backend=t}_getSampleCount(t){return this.backend.utils.getSampleCountRenderContext(t)}createRenderPipeline(t,e){const{object:i,material:n,geometry:s,pipeline:a}=t,{vertexProgram:o,fragmentProgram:l}=a,h=this.backend,c=h.device,u=h.utils,d=h.get(a),p=[];for(const e of t.getBindings()){const t=h.get(e);p.push(t.layout)}const m=h.attributeUtils.createShaderVertexBuffers(t);let f;!0===n.transparent&&n.blending!==r&&(f=this._getBlending(n));let g={};!0===n.stencilWrite&&(g={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const _=this._getColorWriteMask(n),y=[];if(null!==t.context.textures){const e=t.context.textures;for(let t=0;t<e.length;t++){const i=u.getTextureFormatGPU(e[t]);y.push({format:i,blend:f,writeMask:_})}}else{const e=u.getCurrentColorFormat(t.context);y.push({format:e,blend:f,writeMask:_})}const x=h.get(o).module,v=h.get(l).module,b=this._getPrimitiveState(i,s,n),S=this._getDepthCompare(n),T=u.getCurrentDepthStencilFormat(t.context),M=this._getSampleCount(t.context),E={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},x,{buffers:m}),fragment:Object.assign({},v,{targets:y}),primitive:b,multisample:{count:M,alphaToCoverageEnabled:n.alphaToCoverage&&M>1},layout:c.createPipelineLayout({bindGroupLayouts:p})},w={},A=t.context.depth,R=t.context.stencil;if(!0!==A&&!0!==R||(!0===A&&(w.format=T,w.depthWriteEnabled=n.depthWrite,w.depthCompare=S),!0===R&&(w.stencilFront=g,w.stencilBack={},w.stencilReadMask=n.stencilFuncMask,w.stencilWriteMask=n.stencilWriteMask),E.depthStencil=w),null===e)d.pipeline=c.createRenderPipeline(E);else{const t=new Promise((t=>{c.createRenderPipelineAsync(E).then((e=>{d.pipeline=e,t()}))}));e.push(t)}}createBundleEncoder(t){const e=this.backend,{utils:i,device:n}=e,r=i.getCurrentDepthStencilFormat(t),s={label:"renderBundleEncoder",colorFormats:[i.getCurrentColorFormat(t)],depthStencilFormat:r,sampleCount:this._getSampleCount(t)};return n.createRenderBundleEncoder(s)}createComputePipeline(t,e){const i=this.backend,n=i.device,r=i.get(t.computeProgram).module,s=i.get(t),a=[];for(const t of e){const e=i.get(t);a.push(e.layout)}s.pipeline=n.createComputePipeline({compute:r,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(t){let e,i;const n=t.blending,r=t.blendSrc,s=t.blendDst,a=t.blendEquation;if(5===n){const n=null!==t.blendSrcAlpha?t.blendSrcAlpha:r,o=null!==t.blendDstAlpha?t.blendDstAlpha:s,l=null!==t.blendEquationAlpha?t.blendEquationAlpha:a;e={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(s),operation:this._getBlendOperation(a)},i={srcFactor:this._getBlendFactor(n),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(l)}}else{const r=(t,n,r,s)=>{e={srcFactor:t,dstFactor:n,operation:Wf},i={srcFactor:r,dstFactor:s,operation:Wf}};if(t.premultipliedAlpha)switch(n){case 1:r(zf,Hf,zf,Hf);break;case 2:r(zf,zf,zf,zf);break;case 3:r(Of,Vf,Of,zf);break;case 4:r(Of,kf,Of,Gf)}else switch(n){case 1:r(Gf,Hf,zf,Hf);break;case 2:r(Gf,zf,Gf,zf);break;case 3:r(Of,Vf,Of,zf);break;case 4:r(Of,kf,Of,kf)}}if(void 0!==e&&void 0!==i)return{color:e,alpha:i};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(t){let e;switch(t){case 200:e=Of;break;case 201:e=zf;break;case 202:e=kf;break;case 203:e=Vf;break;case a:e=Gf;break;case o:e=Hf;break;case 208:e="dst";break;case 209:e="one-minus-dst";break;case 206:e="dst-alpha";break;case 207:e="one-minus-dst-alpha";break;case 210:e="src-alpha-saturated";break;case 211:e="constant";break;case 212:e="one-minus-constant";break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",t)}return e}_getStencilCompare(t){let e;const i=t.stencilFunc;switch(i){case 512:e=bf;break;case 519:e=Rf;break;case 513:e=Sf;break;case 515:e=Mf;break;case 514:e=Tf;break;case 518:e=Af;break;case 516:e=Ef;break;case 517:e=wf;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",i)}return e}_getStencilOperation(t){let e;switch(t){case mt:e="keep";break;case 0:e="zero";break;case 7681:e="replace";break;case 5386:e="invert";break;case 7682:e="increment-clamp";break;case 7683:e="decrement-clamp";break;case 34055:e="increment-wrap";break;case 34056:e="decrement-wrap";break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",e)}return e}_getBlendOperation(t){let e;switch(t){case s:e=Wf;break;case 101:e="subtract";break;case 102:e="reverse-subtract";break;case 103:e="min";break;case 104:e="max";break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",t)}return e}_getPrimitiveState(t,e,i){const n={},r=this.backend.utils;switch(n.topology=r.getPrimitiveTopology(t,i),null!==e.index&&!0===t.isLine&&!0!==t.isLineSegments&&(n.stripIndexFormat=e.index.array instanceof Uint16Array?Uf:Lf),i.side){case 0:n.frontFace=If,n.cullMode="back";break;case 1:n.frontFace=If,n.cullMode="front";break;case 2:n.frontFace=If,n.cullMode="none";break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",i.side)}return n}_getColorWriteMask(t){return!0===t.colorWrite?15:0}_getDepthCompare(t){let e;if(!1===t.depthTest)e=Rf;else{const i=t.depthFunc;switch(i){case 0:e=bf;break;case 1:e=Rf;break;case 2:e=Sf;break;case 3:e=Mf;break;case 4:e=Tf;break;case 5:e=Af;break;case 6:e=Ef;break;case 7:e=wf;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",i)}}return e}}class Bx extends ky{constructor(t={}){super(t),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===t.alpha||t.alpha,this.parameters.requiredLimits=void 0===t.requiredLimits?{}:t.requiredLimits,this.trackTimestamp=!0===t.trackTimestamp,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new Cx(this),this.attributeUtils=new Ux(this),this.bindingUtils=new Lx(this),this.pipelineUtils=new Dx(this),this.textureUtils=new px(this),this.occludedResolveCache=new Map}async init(t){await super.init(t);const e=this.parameters;let i;if(void 0===e.device){const t={powerPreference:e.powerPreference},n=await navigator.gpu.requestAdapter(t);if(null===n)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const r=Object.values(Zf),s=[];for(const t of r)n.features.has(t)&&s.push(t);const a={requiredFeatures:s,requiredLimits:e.requiredLimits};i=await n.requestDevice(a)}else i=e.device;i.lost.then((e=>{const i={api:"WebGPU",message:e.message||"Unknown reason",reason:e.reason||null,originalEvent:e};t.onDeviceLost(i)}));const n=void 0!==e.context?e.context:t.domElement.getContext("webgpu");this.device=i,this.context=n;const r=e.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Zf.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r}),this.updateSize()}get coordinateSystem(){return yt}async getArrayBufferAsync(t){return await this.attributeUtils.getArrayBufferAsync(t)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let t=this.defaultRenderPassdescriptor;if(null===t){const e=this.renderer;t={colorAttachments:[{view:null}]},!0!==this.renderer.depth&&!0!==this.renderer.stencil||(t.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(e.depth,e.stencil).createView()});const i=t.colorAttachments[0];this.renderer.samples>0?i.view=this.colorBuffer.createView():i.resolveTarget=void 0,this.defaultRenderPassdescriptor=t}const e=t.colorAttachments[0];return this.renderer.samples>0?e.resolveTarget=this.context.getCurrentTexture().createView():e.view=this.context.getCurrentTexture().createView(),t}_getRenderPassDescriptor(t){const e=t.renderTarget,i=this.get(e);let n=i.descriptors;if(void 0===n||i.width!==e.width||i.height!==e.height||i.activeMipmapLevel!==e.activeMipmapLevel||i.samples!==e.samples){n={},i.descriptors=n;const t=()=>{e.removeEventListener("dispose",t),this.delete(e)};e.addEventListener("dispose",t)}const r=t.getCacheKey();let s=n[r];if(void 0===s){const a=t.textures,o=[];for(let e=0;e<a.length;e++){const i=this.get(a[e]),n=i.texture.createView({baseMipLevel:t.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:t.activeCubeFace,dimension:Xf});let r,s;void 0!==i.msaaTexture?(r=i.msaaTexture.createView(),s=n):(r=n,s=void 0),o.push({view:r,resolveTarget:s,loadOp:Nf,storeOp:Cf})}if(s={colorAttachments:o},t.depth){const e={view:this.get(t.depthTexture).texture.createView()};s.depthStencilAttachment=e}n[r]=s,i.width=e.width,i.height=e.height,i.samples=e.samples,i.activeMipmapLevel=e.activeMipmapLevel}return s}beginRender(t){const e=this.get(t),i=this.device,n=t.occlusionQueryCount;let r,s;n>0&&(e.currentOcclusionQuerySet&&e.currentOcclusionQuerySet.destroy(),e.currentOcclusionQueryBuffer&&e.currentOcclusionQueryBuffer.destroy(),e.currentOcclusionQuerySet=e.occlusionQuerySet,e.currentOcclusionQueryBuffer=e.occlusionQueryBuffer,e.currentOcclusionQueryObjects=e.occlusionQueryObjects,r=i.createQuerySet({type:"occlusion",count:n}),e.occlusionQuerySet=r,e.occlusionQueryIndex=0,e.occlusionQueryObjects=new Array(n),e.lastOcclusionObject=null),s=null===t.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(t),this.initTimestampQuery(t,s),s.occlusionQuerySet=r;const a=s.depthStencilAttachment;if(null!==t.textures){const e=s.colorAttachments;for(let i=0;i<e.length;i++){const n=e[i];t.clearColor?(n.clearValue=0===i?t.clearColorValue:{r:0,g:0,b:0,a:1},n.loadOp=Pf,n.storeOp=Cf):(n.loadOp=Nf,n.storeOp=Cf)}}else{const e=s.colorAttachments[0];t.clearColor?(e.clearValue=t.clearColorValue,e.loadOp=Pf,e.storeOp=Cf):(e.loadOp=Nf,e.storeOp=Cf)}t.depth&&(t.clearDepth?(a.depthClearValue=t.clearDepthValue,a.depthLoadOp=Pf,a.depthStoreOp=Cf):(a.depthLoadOp=Nf,a.depthStoreOp=Cf)),t.stencil&&(t.clearStencil?(a.stencilClearValue=t.clearStencilValue,a.stencilLoadOp=Pf,a.stencilStoreOp=Cf):(a.stencilLoadOp=Nf,a.stencilStoreOp=Cf));const o=i.createCommandEncoder({label:"renderContext_"+t.id}),l=o.beginRenderPass(s);if(e.descriptor=s,e.encoder=o,e.currentPass=l,e.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},e.renderBundles=[],t.viewport&&this.updateViewport(t),t.scissor){const{x:e,y:i,width:n,height:r}=t.scissorValue;l.setScissorRect(e,i,n,r)}}finishRender(t){const e=this.get(t),i=t.occlusionQueryCount;if(e.renderBundles.length>0&&e.currentPass.executeBundles(e.renderBundles),i>e.occlusionQueryIndex&&e.currentPass.endOcclusionQuery(),e.currentPass.end(),i>0){const n=8*i;let r=this.occludedResolveCache.get(n);void 0===r&&(r=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,r));const s=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});e.encoder.resolveQuerySet(e.occlusionQuerySet,0,i,r,0),e.encoder.copyBufferToBuffer(r,0,s,0,n),e.occlusionQueryBuffer=s,this.resolveOccludedAsync(t)}if(this.prepareTimestampBuffer(t,e.encoder),this.device.queue.submit([e.encoder.finish()]),null!==t.textures){const e=t.textures;for(let t=0;t<e.length;t++){const i=e[t];!0===i.generateMipmaps&&this.textureUtils.generateMipmaps(i)}}}isOccluded(t,e){const i=this.get(t);return i.occluded&&i.occluded.has(e)}async resolveOccludedAsync(t){const e=this.get(t),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:n}=e;if(i&&n){const t=new WeakSet;e.currentOcclusionQueryObjects=null,e.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const r=i.getMappedRange(),s=new BigUint64Array(r);for(let e=0;e<n.length;e++)s[e]!==BigInt(0)&&t.add(n[e]);i.destroy(),e.occluded=t}}updateViewport(t){const{currentPass:e}=this.get(t),{x:i,y:n,width:r,height:s,minDepth:a,maxDepth:o}=t.viewportValue;e.setViewport(i,n,r,s,a,o)}clear(t,e,i,n=null){const r=this.device,s=this.renderer;let a,o,l,h,c=[];if(t){const t=this.getClearColor();if(!0===this.renderer.alpha){const e=t.a;o={r:t.r*e,g:t.g*e,b:t.b*e,a:e}}else o={r:t.r,g:t.g,b:t.b,a:t.a}}if(null===n){l=s.depth,h=s.stencil;const e=this._getDefaultRenderPassDescriptor();if(t){c=e.colorAttachments;const t=c[0];t.clearValue=o,t.loadOp=Pf,t.storeOp=Cf}(l||h)&&(a=e.depthStencilAttachment)}else{if(l=n.depth,h=n.stencil,t)for(const t of n.textures){const e=this.get(t),i=e.texture.createView();let n,r;void 0!==e.msaaTexture?(n=e.msaaTexture.createView(),r=i):(n=i,r=void 0),c.push({view:n,resolveTarget:r,clearValue:o,loadOp:Pf,storeOp:Cf})}(l||h)&&(a={view:this.get(n.depthTexture).texture.createView()})}l&&(e?(a.depthLoadOp=Pf,a.depthClearValue=s.getClearDepth(),a.depthStoreOp=Cf):(a.depthLoadOp=Nf,a.depthStoreOp=Cf)),h&&(i?(a.stencilLoadOp=Pf,a.stencilClearValue=s.getClearStencil(),a.stencilStoreOp=Cf):(a.stencilLoadOp=Nf,a.stencilStoreOp=Cf));const u=r.createCommandEncoder({});u.beginRenderPass({colorAttachments:c,depthStencilAttachment:a}).end(),r.queue.submit([u.finish()])}beginCompute(t){const e=this.get(t),i={};this.initTimestampQuery(t,i),e.cmdEncoderGPU=this.device.createCommandEncoder(),e.passEncoderGPU=e.cmdEncoderGPU.beginComputePass(i)}compute(t,e,i,n){const{passEncoderGPU:r}=this.get(t),s=this.get(n).pipeline;r.setPipeline(s);for(let t=0,e=i.length;t<e;t++){const e=i[t],n=this.get(e);r.setBindGroup(t,n.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,o=this.get(e);void 0===o.dispatchSize&&(o.dispatchSize={x:0,y:1,z:1});const{dispatchSize:l}=o;e.dispatchCount>a?(l.x=Math.min(e.dispatchCount,a),l.y=Math.ceil(e.dispatchCount/a)):l.x=e.dispatchCount,r.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(t){const e=this.get(t);e.passEncoderGPU.end(),this.prepareTimestampBuffer(t,e.cmdEncoderGPU),this.device.queue.submit([e.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(t,e){const{object:i,context:n,pipeline:r}=t,s=t.getBindings(),a=this.get(n),o=this.get(r).pipeline,l=a.currentSets,h=a.currentPass,c=t.getDrawParameters();if(null===c)return;l.pipeline!==o&&(h.setPipeline(o),l.pipeline=o);const u=l.bindingGroups;for(let t=0,e=s.length;t<e;t++){const e=s[t],i=this.get(e);u[e.index]!==e.id&&(h.setBindGroup(e.index,i.group),u[e.index]=e.id)}const d=t.getIndex(),p=null!==d;if(!0===p&&l.index!==d){const t=this.get(d).buffer,e=d.array instanceof Uint16Array?Uf:Lf;h.setIndexBuffer(t,e),l.index=d}const m=t.getVertexBuffers();for(let t=0,e=m.length;t<e;t++){const e=m[t];if(l.attributes[t]!==e){const i=this.get(e).buffer;h.setVertexBuffer(t,i),l.attributes[t]=e}}if(void 0!==a.occlusionQuerySet){const t=a.lastOcclusionObject;t!==i&&(null!==t&&!0===t.occlusionTest&&(h.endOcclusionQuery(),a.occlusionQueryIndex++),!0===i.occlusionTest&&(h.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=i),a.lastOcclusionObject=i)}if(!0===i.isBatchedMesh){const t=i._multiDrawStarts,e=i._multiDrawCounts,n=i._multiDrawCount,r=i._multiDrawInstances,s=p?d.array.BYTES_PER_ELEMENT:1;for(let i=0;i<n;i++){const n=r?r[i]:1,a=n>1?0:i;h.drawIndexed(e[i],n,t[i]/s,0,a)}}else if(!0===p){const{vertexCount:n,instanceCount:r,firstVertex:s}=c,a=t.getIndirect();if(null!==a){const t=this.get(a).buffer;h.drawIndexedIndirect(t,0)}else h.drawIndexed(n,r,s,0,0);e.update(i,n,r)}else{const{vertexCount:n,instanceCount:r,firstVertex:s}=c,a=t.getIndirect();if(null!==a){const t=this.get(a).buffer;h.drawIndirect(t,0)}else h.draw(n,r,s,0);e.update(i,n,r)}}needsRenderUpdate(t){const e=this.get(t),{object:i,material:n}=t,r=this.utils,s=r.getSampleCountRenderContext(t.context),a=r.getCurrentColorSpace(t.context),o=r.getCurrentColorFormat(t.context),l=r.getCurrentDepthStencilFormat(t.context),h=r.getPrimitiveTopology(i,n);let c=!1;return e.material===n&&e.materialVersion===n.version&&e.transparent===n.transparent&&e.blending===n.blending&&e.premultipliedAlpha===n.premultipliedAlpha&&e.blendSrc===n.blendSrc&&e.blendDst===n.blendDst&&e.blendEquation===n.blendEquation&&e.blendSrcAlpha===n.blendSrcAlpha&&e.blendDstAlpha===n.blendDstAlpha&&e.blendEquationAlpha===n.blendEquationAlpha&&e.colorWrite===n.colorWrite&&e.depthWrite===n.depthWrite&&e.depthTest===n.depthTest&&e.depthFunc===n.depthFunc&&e.stencilWrite===n.stencilWrite&&e.stencilFunc===n.stencilFunc&&e.stencilFail===n.stencilFail&&e.stencilZFail===n.stencilZFail&&e.stencilZPass===n.stencilZPass&&e.stencilFuncMask===n.stencilFuncMask&&e.stencilWriteMask===n.stencilWriteMask&&e.side===n.side&&e.alphaToCoverage===n.alphaToCoverage&&e.sampleCount===s&&e.colorSpace===a&&e.colorFormat===o&&e.depthStencilFormat===l&&e.primitiveTopology===h&&e.clippingContextCacheKey===t.clippingContext.cacheKey||(e.material=n,e.materialVersion=n.version,e.transparent=n.transparent,e.blending=n.blending,e.premultipliedAlpha=n.premultipliedAlpha,e.blendSrc=n.blendSrc,e.blendDst=n.blendDst,e.blendEquation=n.blendEquation,e.blendSrcAlpha=n.blendSrcAlpha,e.blendDstAlpha=n.blendDstAlpha,e.blendEquationAlpha=n.blendEquationAlpha,e.colorWrite=n.colorWrite,e.depthWrite=n.depthWrite,e.depthTest=n.depthTest,e.depthFunc=n.depthFunc,e.stencilWrite=n.stencilWrite,e.stencilFunc=n.stencilFunc,e.stencilFail=n.stencilFail,e.stencilZFail=n.stencilZFail,e.stencilZPass=n.stencilZPass,e.stencilFuncMask=n.stencilFuncMask,e.stencilWriteMask=n.stencilWriteMask,e.side=n.side,e.alphaToCoverage=n.alphaToCoverage,e.sampleCount=s,e.colorSpace=a,e.colorFormat=o,e.depthStencilFormat=l,e.primitiveTopology=h,e.clippingContextCacheKey=t.clippingContext.cacheKey,c=!0),c}getRenderCacheKey(t){const{object:e,material:i}=t,n=this.utils,r=t.context;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,n.getSampleCountRenderContext(r),n.getCurrentColorSpace(r),n.getCurrentColorFormat(r),n.getCurrentDepthStencilFormat(r),n.getPrimitiveTopology(e,i),t.getGeometryCacheKey(),t.clippingContext.cacheKey].join()}createSampler(t){this.textureUtils.createSampler(t)}destroySampler(t){this.textureUtils.destroySampler(t)}createDefaultTexture(t){this.textureUtils.createDefaultTexture(t)}createTexture(t,e){this.textureUtils.createTexture(t,e)}updateTexture(t,e){this.textureUtils.updateTexture(t,e)}generateMipmaps(t){this.textureUtils.generateMipmaps(t)}destroyTexture(t){this.textureUtils.destroyTexture(t)}copyTextureToBuffer(t,e,i,n,r,s){return this.textureUtils.copyTextureToBuffer(t,e,i,n,r,s)}initTimestampQuery(t,e){if(!this.trackTimestamp)return;const i=this.get(t);if(!i.timeStampQuerySet){const t=this.device.createQuerySet({type:"timestamp",count:2}),n={querySet:t,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1};Object.assign(e,{timestampWrites:n}),i.timeStampQuerySet=t}}prepareTimestampBuffer(t,e){if(!this.trackTimestamp)return;const i=this.get(t),n=2*BigInt64Array.BYTES_PER_ELEMENT;void 0===i.currentTimestampQueryBuffers&&(i.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:r,resultBuffer:s,isMappingPending:a}=i.currentTimestampQueryBuffers;!0!==a&&(e.resolveQuerySet(i.timeStampQuerySet,0,2,r,0),e.copyBufferToBuffer(r,0,s,0,n))}async resolveTimestampAsync(t,e="render"){if(!this.trackTimestamp)return;const i=this.get(t);if(void 0===i.currentTimestampQueryBuffers)return;const{resultBuffer:n,isMappingPending:r}=i.currentTimestampQueryBuffers;!0!==r&&(i.currentTimestampQueryBuffers.isMappingPending=!0,n.mapAsync(GPUMapMode.READ).then((()=>{const t=new BigUint64Array(n.getMappedRange()),r=Number(t[1]-t[0])/1e6;this.renderer.info.updateTimestamp(e,r),n.unmap(),i.currentTimestampQueryBuffers.isMappingPending=!1})))}createNodeBuilder(t,e){return new Rx(t,e)}createProgram(t){this.get(t).module={module:this.device.createShaderModule({code:t.code,label:t.stage}),entryPoint:"main"}}destroyProgram(t){this.delete(t)}createRenderPipeline(t,e){this.pipelineUtils.createRenderPipeline(t,e)}createComputePipeline(t,e){this.pipelineUtils.createComputePipeline(t,e)}beginBundle(t){const e=this.get(t);e._currentPass=e.currentPass,e._currentSets=e.currentSets,e.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},e.currentPass=this.pipelineUtils.createBundleEncoder(t)}finishBundle(t,e){const i=this.get(t),n=i.currentPass.finish();this.get(e).bundleGPU=n,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(t,e){this.get(t).renderBundles.push(this.get(e).bundleGPU)}createBindings(t){this.bindingUtils.createBindings(t)}updateBindings(t){this.bindingUtils.createBindings(t)}updateBinding(t){this.bindingUtils.updateBinding(t)}createIndexAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(t){this.attributeUtils.updateAttribute(t)}destroyAttribute(t){this.attributeUtils.destroyAttribute(t)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(t){return this.device.features.has(t)}copyTextureToTexture(t,e,i=null,n=null,r=0){let s=0,a=0,o=0,l=0,h=0,c=0,u=t.image.width,d=t.image.height;null!==i&&(l=i.x,h=i.y,c=i.z||0,u=i.width,d=i.height),null!==n&&(s=n.x,a=n.y,o=n.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+t.id+"_"+e.id}),m=this.get(t).texture,f=this.get(e).texture;p.copyTextureToTexture({texture:m,mipLevel:r,origin:{x:l,y:h,z:c}},{texture:f,mipLevel:r,origin:{x:s,y:a,z:o}},[u,d,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(t,e,i){const n=this.get(e);let r=null;r=e.renderTarget?t.isDepthTexture?this.get(e.depthTexture).texture:this.get(e.textures[0]).texture:t.isDepthTexture?this.textureUtils.getDepthBuffer(e.depth,e.stencil):this.context.getCurrentTexture();const s=this.get(t).texture;if(r.format!==s.format)return void console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,s.format);let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+t.id}),a.copyTextureToTexture({texture:r,origin:{x:i.x,y:i.y,z:0}},{texture:s},[i.z,i.w]),t.generateMipmaps&&this.textureUtils.generateMipmaps(t),n.currentPass){const{descriptor:t}=n;for(let e=0;e<t.colorAttachments.length;e++)t.colorAttachments[e].loadOp=Nf;e.depth&&(t.depthStencilAttachment.depthLoadOp=Nf),e.stencil&&(t.depthStencilAttachment.stencilLoadOp=Nf),n.currentPass=a.beginRenderPass(t),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else this.device.queue.submit([a.finish()])}}class Fx extends Er{constructor(t,e,i,n,r,s){super(t,e,i,n,r,s),this.iesMap=null}copy(t,e){return super.copy(t,e),this.iesMap=t.iesMap,this}}class Ox extends hy{constructor(){super(),this.addMaterial(kd,ir),this.addMaterial(sm,tr),this.addMaterial(om,er),this.addMaterial(um,nr),this.addMaterial(Pd,Ri),this.addMaterial(Od,sr),this.addMaterial(_d,rr),this.addMaterial(fm,ar),this.addMaterial(pd,Dn),this.addMaterial(fd,or),this.addMaterial(_m,qn),this.addMaterial(bm,En),this.addMaterial(Mm,Qn),this.addLight(Gg,Nr),this.addLight(H_,Ur),this.addLight($_,Dr),this.addLight(q_,Er),this.addLight(K_,Lr),this.addLight(Z_,xr),this.addLight(J_,Fr),this.addLight(Y_,Fx),this.addToneMapping(ig,1),this.addToneMapping(ng,2),this.addToneMapping(rg,3),this.addToneMapping(ag,l),this.addToneMapping(cg,6),this.addToneMapping(ug,7)}}class zx extends yy{constructor(t={}){let e;t.forceWebGL?e=rx:(e=Bx,t.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new rx(t))),super(new e(t),t),this.library=new Ox,this.isWebGPURenderer=!0}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n)},580:(t,e,i)=>{i.d(e,{N:()=>m});var n=i(753);const r={type:"change"},s={type:"start"},a={type:"end"},o=new n.RlV,l=new n.Zcv,h=Math.cos(70*n.cj9.DEG2RAD),c=new n.Pq0,u=2*Math.PI,d=-1,p=1e-6;class m extends n.H2z{constructor(t,e=null){super(t,e),this.state=d,this.enabled=!0,this.target=new n.Pq0,this.cursor=new n.Pq0,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:n.kBv.ROTATE,MIDDLE:n.kBv.DOLLY,RIGHT:n.kBv.PAN},this.touches={ONE:n.wtR.ROTATE,TWO:n.wtR.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new n.Pq0,this._lastQuaternion=new n.PTz,this._lastTargetPosition=new n.Pq0,this._quat=(new n.PTz).setFromUnitVectors(t.up,new n.Pq0(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new n.YHV,this._sphericalDelta=new n.YHV,this._scale=1,this._panOffset=new n.Pq0,this._rotateStart=new n.I9Y,this._rotateEnd=new n.I9Y,this._rotateDelta=new n.I9Y,this._panStart=new n.I9Y,this._panEnd=new n.I9Y,this._panDelta=new n.I9Y,this._dollyStart=new n.I9Y,this._dollyEnd=new n.I9Y,this._dollyDelta=new n.I9Y,this._dollyDirection=new n.Pq0,this._mouse=new n.I9Y,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=g.bind(this),this._onPointerDown=f.bind(this),this._onPointerUp=_.bind(this),this._onContextMenu=M.bind(this),this._onMouseWheel=v.bind(this),this._onKeyDown=b.bind(this),this._onTouchStart=S.bind(this),this._onTouchMove=T.bind(this),this._onMouseDown=y.bind(this),this._onMouseMove=x.bind(this),this._interceptControlDown=E.bind(this),this._interceptControlUp=w.bind(this),null!==this.domElement&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(r),this.update(),this.state=d}update(t=null){const e=this.object.position;c.copy(e).sub(this.target),c.applyQuaternion(this._quat),this._spherical.setFromVector3(c),this.autoRotate&&this.state===d&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(i)&&isFinite(s)&&(i<-Math.PI?i+=u:i>Math.PI&&(i-=u),s<-Math.PI?s+=u:s>Math.PI&&(s-=u),this._spherical.theta=i<=s?Math.max(i,Math.min(s,this._spherical.theta)):this._spherical.theta>(i+s)/2?Math.max(i,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let a=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const t=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),a=t!=this._spherical.radius}if(c.setFromSpherical(this._spherical),c.applyQuaternion(this._quatInverse),e.copy(this.target).add(c),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let t=null;if(this.object.isPerspectiveCamera){const e=c.length();t=this._clampDistance(e*this._scale);const i=e-t;this.object.position.addScaledVector(this._dollyDirection,i),this.object.updateMatrixWorld(),a=!!i}else if(this.object.isOrthographicCamera){const e=new n.Pq0(this._mouse.x,this._mouse.y,0);e.unproject(this.object);const i=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),a=i!==this.object.zoom;const r=new n.Pq0(this._mouse.x,this._mouse.y,0);r.unproject(this.object),this.object.position.sub(r).add(e),this.object.updateMatrixWorld(),t=c.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==t&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(t).add(this.object.position):(o.origin.copy(this.object.position),o.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(o.direction))<h?this.object.lookAt(this.target):(l.setFromNormalAndCoplanarPoint(this.object.up,this.target),o.intersectPlane(l,this.target))))}else if(this.object.isOrthographicCamera){const t=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),t!==this.object.zoom&&(this.object.updateProjectionMatrix(),a=!0)}return this._scale=1,this._performCursorZoom=!1,!!(a||this._lastPosition.distanceToSquared(this.object.position)>p||8*(1-this._lastQuaternion.dot(this.object.quaternion))>p||this._lastTargetPosition.distanceToSquared(this.target)>p)&&(this.dispatchEvent(r),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(t){return null!==t?u/60*this.autoRotateSpeed*t:u/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(.01*t);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){c.setFromMatrixColumn(e,0),c.multiplyScalar(-t),this._panOffset.add(c)}_panUp(t,e){!0===this.screenSpacePanning?c.setFromMatrixColumn(e,1):(c.setFromMatrixColumn(e,0),c.crossVectors(this.object.up,c)),c.multiplyScalar(t),this._panOffset.add(c)}_pan(t,e){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;c.copy(n).sub(this.target);let r=c.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*r/i.clientHeight,this.object.matrix),this._panUp(2*e*r/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=t-i.left,r=e-i.top,s=i.width,a=i.height;this._mouse.x=n/s*2-1,this._mouse.y=-r/a*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(u*this._rotateDelta.x/e.clientHeight),this._rotateUp(u*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(u*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(-u*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(u*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(-u*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(1===this._pointers.length)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),n=.5*(t.pageY+e.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(t){if(1===this._pointers.length)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),n=.5*(t.pageY+e.y);this._panStart.set(i,n)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),i=t.pageX-e.x,n=t.pageY-e.y,r=Math.sqrt(i*i+n*n);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(1==this._pointers.length)this._rotateEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),n=.5*(t.pageY+e.y);this._rotateEnd.set(i,n)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(u*this._rotateDelta.x/e.clientHeight),this._rotateUp(u*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(1===this._pointers.length)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),n=.5*(t.pageY+e.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),i=t.pageX-e.x,n=t.pageY-e.y,r=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const s=.5*(t.pageX+e.x),a=.5*(t.pageY+e.y);this._updateZoomParameters(s,a)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return void this._pointers.splice(e,1)}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new n.I9Y,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,i={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100}return t.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function f(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(t)||(this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t)))}function g(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function _(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(a),this.state=d;break;case 1:const e=this._pointers[0],i=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:i.x,pageY:i.y})}}function y(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case n.kBv.DOLLY:if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this.state=1;break;case n.kBv.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=2}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=0}break;case n.kBv.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=0}else{if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=2}break;default:this.state=d}this.state!==d&&this.dispatchEvent(s)}function x(t){switch(this.state){case 0:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(t);break;case 1:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t);break;case 2:if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}function v(t){!1!==this.enabled&&!1!==this.enableZoom&&this.state===d&&(t.preventDefault(),this.dispatchEvent(s),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(a))}function b(t){!1!==this.enabled&&!1!==this.enablePan&&this._handleKeyDown(t)}function S(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case n.wtR.ROTATE:if(!1===this.enableRotate)return;this._handleTouchStartRotate(t),this.state=3;break;case n.wtR.PAN:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this.state=4;break;default:this.state=d}break;case 2:switch(this.touches.TWO){case n.wtR.DOLLY_PAN:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(t),this.state=5;break;case n.wtR.DOLLY_ROTATE:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(t),this.state=6;break;default:this.state=d}break;default:this.state=d}this.state!==d&&this.dispatchEvent(s)}function T(t){switch(this._trackPointer(t),this.state){case 3:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(t),this.update();break;case 4:if(!1===this.enablePan)return;this._handleTouchMovePan(t),this.update();break;case 5:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(t),this.update();break;case 6:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=d}}function M(t){!1!==this.enabled&&t.preventDefault()}function E(t){"Control"===t.key&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function w(t){"Control"===t.key&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}},785:(t,e,i)=>{i.d(e,{m:()=>r});var n=i(753);class r extends n.eaF{constructor(){const t=r.SkyShader,e=new n.BKk({name:t.name,uniforms:n.LlO.clone(t.uniforms),vertexShader:t.vertexShader,fragmentShader:t.fragmentShader,side:n.hsX,depthWrite:!1});super(new n.iNn(1,1,1),e),this.isSky=!0}}r.SkyShader={name:"SkyShader",uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new n.Pq0},up:{value:new n.Pq0(0,1,0)}},vertexShader:"\n\t\tuniform vec3 sunPosition;\n\t\tuniform float rayleigh;\n\t\tuniform float turbidity;\n\t\tuniform float mieCoefficient;\n\t\tuniform vec3 up;\n\n\t\tvarying vec3 vWorldPosition;\n\t\tvarying vec3 vSunDirection;\n\t\tvarying float vSunfade;\n\t\tvarying vec3 vBetaR;\n\t\tvarying vec3 vBetaM;\n\t\tvarying float vSunE;\n\n\t\t// constants for atmospheric scattering\n\t\tconst float e = 2.71828182845904523536028747135266249775724709369995957;\n\t\tconst float pi = 3.141592653589793238462643383279502884197169;\n\n\t\t// wavelength of used primaries, according to preetham\n\t\tconst vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );\n\t\t// this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:\n\t\t// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))\n\t\tconst vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );\n\n\t\t// mie stuff\n\t\t// K coefficient for the primaries\n\t\tconst float v = 4.0;\n\t\tconst vec3 K = vec3( 0.686, 0.678, 0.666 );\n\t\t// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K\n\t\tconst vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );\n\n\t\t// earth shadow hack\n\t\t// cutoffAngle = pi / 1.95;\n\t\tconst float cutoffAngle = 1.6110731556870734;\n\t\tconst float steepness = 1.5;\n\t\tconst float EE = 1000.0;\n\n\t\tfloat sunIntensity( float zenithAngleCos ) {\n\t\t\tzenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );\n\t\t\treturn EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );\n\t\t}\n\n\t\tvec3 totalMie( float T ) {\n\t\t\tfloat c = ( 0.2 * T ) * 10E-18;\n\t\t\treturn 0.434 * c * MieConst;\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\tvWorldPosition = worldPosition.xyz;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n\t\t\tvSunDirection = normalize( sunPosition );\n\n\t\t\tvSunE = sunIntensity( dot( vSunDirection, up ) );\n\n\t\t\tvSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );\n\n\t\t\tfloat rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );\n\n\t\t\t// extinction (absorbtion + out scattering)\n\t\t\t// rayleigh coefficients\n\t\t\tvBetaR = totalRayleigh * rayleighCoefficient;\n\n\t\t\t// mie coefficients\n\t\t\tvBetaM = totalMie( turbidity ) * mieCoefficient;\n\n\t\t}",fragmentShader:"\n\t\tvarying vec3 vWorldPosition;\n\t\tvarying vec3 vSunDirection;\n\t\tvarying float vSunfade;\n\t\tvarying vec3 vBetaR;\n\t\tvarying vec3 vBetaM;\n\t\tvarying float vSunE;\n\n\t\tuniform float mieDirectionalG;\n\t\tuniform vec3 up;\n\n\t\t// constants for atmospheric scattering\n\t\tconst float pi = 3.141592653589793238462643383279502884197169;\n\n\t\tconst float n = 1.0003; // refractive index of air\n\t\tconst float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)\n\n\t\t// optical length at zenith for molecules\n\t\tconst float rayleighZenithLength = 8.4E3;\n\t\tconst float mieZenithLength = 1.25E3;\n\t\t// 66 arc seconds -> degrees, and the cosine of that\n\t\tconst float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n\n\t\t// 3.0 / ( 16.0 * pi )\n\t\tconst float THREE_OVER_SIXTEENPI = 0.05968310365946075;\n\t\t// 1.0 / ( 4.0 * pi )\n\t\tconst float ONE_OVER_FOURPI = 0.07957747154594767;\n\n\t\tfloat rayleighPhase( float cosTheta ) {\n\t\t\treturn THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );\n\t\t}\n\n\t\tfloat hgPhase( float cosTheta, float g ) {\n\t\t\tfloat g2 = pow( g, 2.0 );\n\t\t\tfloat inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );\n\t\t\treturn ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec3 direction = normalize( vWorldPosition - cameraPosition );\n\n\t\t\t// optical length\n\t\t\t// cutoff angle at 90 to avoid singularity in next formula.\n\t\t\tfloat zenithAngle = acos( max( 0.0, dot( up, direction ) ) );\n\t\t\tfloat inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );\n\t\t\tfloat sR = rayleighZenithLength * inverse;\n\t\t\tfloat sM = mieZenithLength * inverse;\n\n\t\t\t// combined extinction factor\n\t\t\tvec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );\n\n\t\t\t// in scattering\n\t\t\tfloat cosTheta = dot( direction, vSunDirection );\n\n\t\t\tfloat rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );\n\t\t\tvec3 betaRTheta = vBetaR * rPhase;\n\n\t\t\tfloat mPhase = hgPhase( cosTheta, mieDirectionalG );\n\t\t\tvec3 betaMTheta = vBetaM * mPhase;\n\n\t\t\tvec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );\n\t\t\tLin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );\n\n\t\t\t// nightsky\n\t\t\tfloat theta = acos( direction.y ); // elevation --\x3e y-axis, [-pi/2, pi/2]\n\t\t\tfloat phi = atan( direction.z, direction.x ); // azimuth --\x3e x-axis [-pi/2, pi/2]\n\t\t\tvec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );\n\t\t\tvec3 L0 = vec3( 0.1 ) * Fex;\n\n\t\t\t// composition + solar disc\n\t\t\tfloat sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );\n\t\t\tL0 += ( vSunE * 19000.0 * Fex ) * sundisk;\n\n\t\t\tvec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );\n\n\t\t\tvec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );\n\n\t\t\tgl_FragColor = vec4( retColor, 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}"}}}]);
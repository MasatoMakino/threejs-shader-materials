(()=>{"use strict";var t,e={598:(t,e,n)=>{var i=n(753);class r{static getChunkName(){return""}static getChunk(){return""}static getDefines(){return{}}static registerChunk(){i.vxI&&null==i.vxI[this.getChunkName()]&&(i.vxI[this.getChunkName()]=this.getChunk())}static getUniform(){return{}}}var a,o=n(710);class s extends r{static registerChunk(){l.registerChunk(),u.registerChunk(),d.registerChunk(),c.registerChunk()}static getUniform(){return o.LlO.merge([i.fCn.sprite,i.fCn.fog,i.fCn.lights])}}class l extends r{static getChunkName(){return"sprite_vertex_uniform_chunk"}static getChunk(){return"\n      uniform float rotation;\n      uniform vec2 center;\n    "}}class u extends r{static getChunkName(){return"sprite_fragment_uniform_chunk"}static getChunk(){return"\n      uniform vec3 diffuse;\n      uniform float opacity;\n    "}}class d extends r{static getChunkName(){return"sprite_diffuse_color_chunk"}static getChunk(){return"\n      vec3 outgoingLight = vec3( 0.0 );\n      vec4 diffuseColor = vec4( diffuse, opacity );\n    "}}class c extends r{static getChunkName(){return"sprite_mv_position_chunk"}static getChunk(){return"\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n    "}}!function(t){t[t.vertical=4]="vertical",t[t.horizontal=3]="horizontal",t[t.radial=5]="radial"}(a||(a={})),o.BKk;class m extends o.BKk{constructor(t,e,n){super(n),this.sizeAttenuation=!0,this._opacity=1,n??={},t??="\n#include <sprite_vertex_uniform_chunk>\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\t#include <uv_vertex>\n\t#include <sprite_mv_position_chunk>\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",e??="\n#include <sprite_fragment_uniform_chunk>\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\n}",this.initChunks(),this.initUniforms(),this.initDefines(),this.vertexShader=t,this.fragmentShader=e,this.initDefaultSetting(n)}initChunks(){s.registerChunk()}initUniforms(){this.uniforms=o.LlO.merge([s.getUniform(),{uvTransform:{value:new o.dwI}}])}initDefines(){this.defines=Object.assign({},s.getDefines(),this.defines)}initDefaultSetting(t){this.uniformOpacity=this._opacity}get opacity(){return this._opacity}get uniformOpacity(){return this._opacity}set opacity(t){this.uniformOpacity=t}set uniformOpacity(t){this._opacity=t,this.uniforms?.opacity&&(this.uniforms.opacity.value=t)}get color(){return this.uniforms.diffuse.value}set color(t){this.uniforms.diffuse.value=t}get center(){return this.uniforms.center.value}set center(t){this.uniforms.center.value=t}get rotation(){return this.uniforms.rotation.value}set rotation(t){this.uniforms.rotation.value=t}get uvTransform(){return this.uniforms.uvTransform.value}set uvTransform(t){this.uniforms.uvTransform.value=t}get map(){return this.uniforms.map.value}set map(t){this.uniforms.map.value=t}get alphaMap(){return this.uniforms.alphaMap.value}set alphaMap(t){this.uniforms.alphaMap.value=t}}o.BKk,o.BKk;var f=n(603);class p extends m{constructor(t){super(null,"\n\nuniform float rimStrength;\nuniform float bottomStrength;\nuniform vec3 rimColor;\nuniform vec3 skyColor;\n\nuniform float rimCenter;\nuniform float rimRange;\n#include <sprite_fragment_uniform_chunk>\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n  vec3 color = diffuse;\n  #include <clipping_planes_fragment>\n  #include <sprite_diffuse_color_chunk>\n\t#include <logdepthbuf_fragment>\n\t\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\t\n\tfloat bottom = 0.0;\t\n  \n\t#ifdef USE_MAP\n    bottom = 1.0 - texture2D( map, vUv ).g;\n    bottom *= bottomStrength;\n  #endif\n    \n  float edge = 0.0;\n  #ifdef USE_MAP\n    float a = texture2D( map, vUv ).a ;\n    edge = \n        smoothstep( rimCenter-rimRange, rimCenter, a )\n      - smoothstep( rimCenter, rimCenter+rimRange, a );\n  #endif\n    \n  outgoingLight = mix( diffuse, skyColor, bottom);\n  outgoingLight += rimColor * edge * rimStrength;\n\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\n}",t)}initUniforms(){super.initUniforms(),this.uniforms=o.LlO.merge([this.uniforms,{rimStrength:{value:.2},bottomStrength:{value:.75},rimColor:{value:new o.Q1f(16777215)},skyColor:{value:new o.Q1f(13421772)},rimCenter:{value:.6},rimRange:{value:.15}}])}initDefines(){this.defines=Object.assign({USE_UV:!0},s.getDefines(),this.defines)}initDefaultSetting(t){super.initDefaultSetting(t)}get rimCenter(){return this.uniforms.rimCenter.value}set rimCenter(t){this.uniforms.rimCenter.value=t}get rimRange(){return this.uniforms.rimRange.value}set rimRange(t){this.uniforms.rimRange.value=t}get rimStrength(){return this.uniforms.rimStrength.value}set rimStrength(t){this.uniforms.rimStrength.value=t}get bottomStrength(){return this.uniforms.bottomStrength.value}set bottomStrength(t){this.uniforms.bottomStrength.value=t}get rimColor(){return this.uniforms.rimColor.value}set rimColor(t){this.uniforms.rimColor.value=t}get skyColor(){return this.uniforms.skyColor.value}set skyColor(t){this.uniforms.skyColor.value=t}}class g{static initColorGUI(t,e,n="color"){const i={},r=e[n];return i[n]=r.getHex(),t.addColor(i,n).onChange((t=>{r.setHex(t)})),i}static initColorNodeGUI(t,e,n="color"){const i={},r=e[n];return i[n]=r.value.getHex(),t.addColor(i,n).onChange((t=>{r.value.setHex(t)})),i}static initBasicMaterialGUI(t,e,n="Material"){const i=t.addFolder(n);return this.initMaterialFolder(i,e),i.open(),i}static initMaterialGUI(t,e,n="Material"){const i=this.initBasicMaterialGUI(t,e,n);this.initColorGUI(i,e,"emissive")}static initMaterialFolder(t,e,n=!1){this.initColorGUI(t,e),t.add(e,"transparent");const i=n?"opacity":"uniformOpacity";t.add(e,i,0,1)}static initSpriteMaterialGUI(t,e,n="Material"){const i=t.addFolder(n);this.initMaterialFolder(i,e),i.open()}static initGridMaterialGUI(t,e){this.initMaterialGUI(t,e);const n={mask:"",alphaMap:""},i=t.addFolder("WavyGridMaterial");return i.add(e,"isReversed"),i.add(e,"division",2,256).step(1),i.add(e,"divisionScaleX",0,4).step(1),i.add(n,"mask",{none:"",earth:"./textures/landmask.png"}).onChange((t=>{e.maskTexture=""===t?null:(new o.Tap).load(t)})),i.add(n,"alphaMap",{none:"",earth:"./textures/landmask.png"}).onChange((t=>{e.alphaMap=""===t?null:(new o.Tap).load(t)})),i.open(),i}static initWavyMaterialGUI(t,e){const n=this.initGridMaterialGUI(t,e).addFolder("WavyAnimation");n.add(e,"isAnimate"),n.add(e,"speed",-2,2),n.add(e,"waveFrequency",0,1),n.add(e,"wavePow",0,4),n.add(e,"direction",{horizontal:a.horizontal,vertical:a.vertical,radial:a.radial}),n.add(e,"raisedBottom",0,1),n.open()}static initAnimationGUI(t,e,n="Animation"){const i=t.addFolder(n);i.add(e,"isAnimate"),i.add(e,"speed",-2,2),i.open()}static initRimGUI(t,e,n="Rim Effect Material"){const i=t.addFolder(n);g.initColorGUI(i,e,"rimColor"),i.add(e,"rimStrength",0,4).step(.01),i.add(e,"rimPow",0,4).step(.01),g.initColorGUI(i,e,"insideColor"),i.add(e,"insideStrength",0,4).step(.01),i.add(e,"insidePow",0,8).step(.01),i.open()}static initExpansionGUI(t,e,n="ExpansionMaterial"){const i=t.addFolder("ExpansionMaterial");i.add(e,"expansionStrength",-12,12).step(.01),i.open()}static initFBMTilingGUI(t,e,n="FBM Tiling"){const i=t.addFolder("FBM Tiling");i.add(e,"tiles",1,8).step(1),i.add(e,"hashLoop",2,16).step(1),i.add(e,"amp",0,2).step(.01),i.open()}static initSkyGUI(t,e,n,i){const r={turbidity:10,rayleigh:.15,mieCoefficient:.005,mieDirectionalG:.8,inclination:.07,azimuth:.25,exposure:.75},a=4e5;function o(){const t=e.material.uniforms;t.turbidity.value=r.turbidity,t.rayleigh.value=r.rayleigh,t.mieCoefficient.value=r.mieCoefficient,t.mieDirectionalG.value=r.mieDirectionalG;const o=Math.PI*(r.inclination-.5),s=2*Math.PI*(r.azimuth-.5);n.position.x=a*Math.cos(s),n.position.y=a*Math.sin(s)*Math.sin(o),n.position.z=a*Math.sin(s)*Math.cos(o),t.sunPosition.value.copy(n.position),i.toneMappingExposure=r.exposure}o();const s=t.addFolder("Sky");s.add(r,"turbidity",1,20,.1).onChange(o),s.add(r,"rayleigh",0,4,.001).onChange(o),s.add(r,"mieCoefficient",0,.1,.001).onChange(o),s.add(r,"mieDirectionalG",0,1,.001).onChange(o),s.add(r,"inclination",0,1,1e-4).onChange(o),s.add(r,"azimuth",0,1,1e-4).onChange(o),s.add(r,"exposure",0,1,1e-4).onChange(o),s.open()}}var h=n(580),v=n(785);class _{static initScene(){return new o.Z58}static initLight(t){const e=new o.$p8(16777215,Math.PI);return t.add(e),e}static initCamera(t,e,n,i=400){const r=new o.ubm(45,e/n,1,i);return r.position.set(0,0,100),r.updateMatrixWorld(!1),t.add(r),r}static initControl(t,e){let n;null!=e&&(n=e.domElement);const i=new h.N(t,n);return i.update(),i}static initRenderer(t,e,n=0,r=!0){const a=new i.JeP({antialias:r});return a.setClearColor(new o.Q1f(n)),a.setSize(t,e),a.setPixelRatio(window.devicePixelRatio),a.domElement.style.backgroundColor="#"+n.toString(16).padStart(6,"0"),document.body.appendChild(a.domElement),console.log("three.js revision: ",o.sPf),a}static initHelper(t){const e=new o.IzY(30);t.add(e)}static initSky(t,e,n){n.toneMapping=o.FV;const i=new o.eaF(new o.Gu$(2e4,16,8),new o.V9B({color:16777215}));i.position.y=-7e5,i.visible=!1,t.add(i);const r=new v.m;r.scale.setScalar(45e3),t.add(r),g.initSkyGUI(e,r,i,n)}}var C=n(638);class x{constructor(){const t=_.initScene();t.fog=new o.jUj(5601177,300,600),_.initLight(t);const e=_.initCamera(t,640,480),n=_.initRenderer(640,480);_.initControl(e,n),_.initHelper(t);const i=this.initObject(t),r=new C.Ay;_.initSky(t,r,n),this.initGUI(r,i),f.w.on("tick",(i=>{n.render(t,e)}))}initObject(t){const e=new p({fog:void 0!==t.fog,transparent:!0});e.color=new o.Q1f(14540253);const n=new o.Tap;e.map=n.load("./textures/cloud.png"),e.skyColor=new o.Q1f(10070715),e.rimColor=new o.Q1f(16777215);const i=new o.kxk(e);return i.scale.set(40,40,1),i.position.x=0,t.add(i),e}initGUI(t,e){g.initSpriteMaterialGUI(t,e);const n=t.addFolder("SpriteCloud");g.initColorGUI(n,e,"skyColor"),n.add(e,"bottomStrength",0,5),g.initColorGUI(n,e,"rimColor"),n.add(e,"rimStrength",0,5),n.add(e,"rimCenter",0,1),n.add(e,"rimRange",0,1),n.open()}}window.onload=()=>{new x}}},n={};function i(t){var r=n[t];if(void 0!==r)return r.exports;var a=n[t]={exports:{}};return e[t](a,a.exports,i),a.exports}i.m=e,t=[],i.O=(e,n,r,a)=>{if(!n){var o=1/0;for(d=0;d<t.length;d++){for(var[n,r,a]=t[d],s=!0,l=0;l<n.length;l++)(!1&a||o>=a)&&Object.keys(i.O).every((t=>i.O[t](n[l])))?n.splice(l--,1):(s=!1,a<o&&(o=a));if(s){t.splice(d--,1);var u=r();void 0!==u&&(e=u)}}return e}a=a||0;for(var d=t.length;d>0&&t[d-1][2]>a;d--)t[d]=t[d-1];t[d]=[n,r,a]},i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.j=372,(()=>{var t={372:0};i.O.j=e=>0===t[e];var e=(e,n)=>{var r,a,[o,s,l]=n,u=0;if(o.some((e=>0!==t[e]))){for(r in s)i.o(s,r)&&(i.m[r]=s[r]);if(l)var d=l(i)}for(e&&e(n);u<o.length;u++)a=o[u],i.o(t,a)&&t[a]&&t[a][0](),t[a]=0;return i.O(d)},n=self.webpackChunk_masatomakino_threejs_shader_materials=self.webpackChunk_masatomakino_threejs_shader_materials||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))})();var r=i.O(void 0,[121],(()=>i(598)));r=i.O(r)})();
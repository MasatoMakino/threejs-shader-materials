(()=>{"use strict";var n,e={275:(n,e,t)=>{var i,a=t(753);class r{static getChunkName(){return""}static getChunk(){return""}static getDefines(){return{}}static registerChunk(){a.vxI&&null==a.vxI[this.getChunkName()]&&(a.vxI[this.getChunkName()]=this.getChunk())}static getUniform(){return{}}}class o extends r{static registerChunk(){s.registerChunk(),l.registerChunk()}static getDefines(){return{USE_SURFACE_NORMAL:!1}}static getUniform(){return{}}}class s extends r{static getChunkName(){return"surface_normal_varying_chunk"}static getChunk(){return"\n    #ifdef USE_SURFACE_NORMAL\n      varying vec3 surfaceNormal;\n    #endif\n    "}}class l extends r{static getChunkName(){return"surface_normal_vertex_chunk"}static getChunk(){return"\n    #ifdef USE_SURFACE_NORMAL\n      surfaceNormal = normalize( transformedNormal );\n    #endif\n    "}}!function(n){n[n.vertical=4]="vertical",n[n.horizontal=3]="horizontal",n[n.radial=5]="radial"}(i||(i={})),a.BKk,a.BKk;class d extends a.BKk{constructor(n,e,t){super(t),this._opacity=1,this.uniforms=d.getBasicUniforms(),this.vertexShader=n??"\n\n#include <surface_normal_varying_chunk>\nvarying vec3 vViewPosition;\nvarying vec2 uvPosition;\n\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\tuvPosition = uv;\n\t\n    #include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\n\t#endif\n\t\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n    //For Rim Effect\n    #include <beginnormal_vertex>\n    #include <defaultnormal_vertex>\n    #include <surface_normal_vertex_chunk>\n    vViewPosition = - mvPosition.xyz;\n  \n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\t\n}",this.fragmentShader=e??"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n    varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\t\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t\n\t#include <envmap_fragment>\n\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\t\n}",o.registerChunk(),this.initDefines(),this.uniformOpacity=this._opacity}static getBasicUniforms(){return a.LlO.merge([a.fCn.common,a.fCn.specularmap,a.fCn.envmap,a.fCn.aomap,a.fCn.lightmap,a.fCn.fog])}get color(){return this.uniforms.diffuse.value}set color(n){this.uniforms.diffuse.value=n}get uniformOpacity(){return this._opacity}set uniformOpacity(n){this._opacity=n,this.uniforms?.opacity&&(this.uniforms.opacity.value=n)}initDefines(){this.defines=Object.assign({},o.getDefines(),this.defines)}}a.BKk;var c=t(293);c.zE5;var u=t(603);(0,c.Fn)((([n,e,t,i,a,r])=>p(n,e,t,i,a,r,(0,c.eR5)(0,0,1))));const p=(0,c.Fn)((([n,e,t,i,a,r,o])=>{const s=(0,c.eR5)(0,0,0).toVar(),l=(0,c.T9B)(0,c.ono.dot((0,c.eR5)(o))),d=(0,c.jbE)(1,l);d.assign((0,c.n7C)(d,e)),s.rgb.addAssign(n.mul(d.mul(t)));const u=(0,c.n7C)(l,a);return s.rgb.addAssign(i.mul(u.mul(r))),s}));c.P8l;class m{static initColorGUI(n,e,t="color"){const i={},a=e[t];return i[t]=a.getHex(),n.addColor(i,t).onChange((n=>{a.setHex(n)})),i}static initColorNodeGUI(n,e,t="color"){const i={},a=e[t];return i[t]=a.value.getHex(),n.addColor(i,t).onChange((n=>{a.value.setHex(n)})),i}static initBasicMaterialGUI(n,e,t="Material"){const i=n.addFolder(t);return this.initMaterialFolder(i,e),i.open(),i}static initMaterialGUI(n,e,t="Material"){const i=this.initBasicMaterialGUI(n,e,t);this.initColorGUI(i,e,"emissive")}static initMaterialFolder(n,e,t=!1){this.initColorGUI(n,e),n.add(e,"transparent");const i=t?"opacity":"uniformOpacity";n.add(e,i,0,1)}static initSpriteMaterialGUI(n,e,t="Material"){const i=n.addFolder(t);this.initMaterialFolder(i,e),i.open()}static initGridMaterialGUI(n,e){this.initMaterialGUI(n,e);const t={mask:"",alphaMap:""},i=n.addFolder("WavyGridMaterial");return i.add(e,"isReversed"),i.add(e,"division",2,256).step(1),i.add(e,"divisionScaleX",0,4).step(1),i.add(t,"mask",{none:"",earth:"./textures/landmask.png"}).onChange((n=>{e.maskTexture=""===n?null:(new a.Tap).load(n)})),i.add(t,"alphaMap",{none:"",earth:"./textures/landmask.png"}).onChange((n=>{e.alphaMap=""===n?null:(new a.Tap).load(n)})),i.open(),i}static initWavyMaterialGUI(n,e){const t=this.initGridMaterialGUI(n,e).addFolder("WavyAnimation");t.add(e,"isAnimate"),t.add(e,"speed",-2,2),t.add(e,"waveFrequency",0,1),t.add(e,"wavePow",0,4),t.add(e,"direction",{horizontal:i.horizontal,vertical:i.vertical,radial:i.radial}),t.add(e,"raisedBottom",0,1),t.open()}static initAnimationGUI(n,e,t="Animation"){const i=n.addFolder(t);i.add(e,"isAnimate"),i.add(e,"speed",-2,2),i.open()}static initRimGUI(n,e,t="Rim Effect Material"){const i=n.addFolder(t);m.initColorGUI(i,e,"rimColor"),i.add(e,"rimStrength",0,4).step(.01),i.add(e,"rimPow",0,4).step(.01),m.initColorGUI(i,e,"insideColor"),i.add(e,"insideStrength",0,4).step(.01),i.add(e,"insidePow",0,8).step(.01),i.open()}static initExpansionGUI(n,e,t="ExpansionMaterial"){const i=n.addFolder("ExpansionMaterial");i.add(e,"expansionStrength",-12,12).step(.01),i.open()}static initFBMTilingGUI(n,e,t="FBM Tiling"){const i=n.addFolder("FBM Tiling");i.add(e,"tiles",1,8).step(1),i.add(e,"hashLoop",2,16).step(1),i.add(e,"amp",0,2).step(.01),i.open()}static initSkyGUI(n,e,t,i){const a={turbidity:10,rayleigh:.15,mieCoefficient:.005,mieDirectionalG:.8,inclination:.07,azimuth:.25,exposure:.75},r=4e5;function o(){const n=e.material.uniforms;n.turbidity.value=a.turbidity,n.rayleigh.value=a.rayleigh,n.mieCoefficient.value=a.mieCoefficient,n.mieDirectionalG.value=a.mieDirectionalG;const o=Math.PI*(a.inclination-.5),s=2*Math.PI*(a.azimuth-.5);t.position.x=r*Math.cos(s),t.position.y=r*Math.sin(s)*Math.sin(o),t.position.z=r*Math.sin(s)*Math.cos(o),n.sunPosition.value.copy(t.position),i.toneMappingExposure=a.exposure}o();const s=n.addFolder("Sky");s.add(a,"turbidity",1,20,.1).onChange(o),s.add(a,"rayleigh",0,4,.001).onChange(o),s.add(a,"mieCoefficient",0,.1,.001).onChange(o),s.add(a,"mieDirectionalG",0,1,.001).onChange(o),s.add(a,"inclination",0,1,1e-4).onChange(o),s.add(a,"azimuth",0,1,1e-4).onChange(o),s.add(a,"exposure",0,1,1e-4).onChange(o),s.open()}}var f=t(580),g=t(785);class h{static initScene(){return new a.Z58}static initLight(n){const e=new a.$p8(16777215,Math.PI);return n.add(e),e}static initCamera(n,e,t,i=400){const r=new a.ubm(45,e/t,1,i);return r.position.set(0,0,100),r.updateMatrixWorld(!1),n.add(r),r}static initControl(n,e){let t;null!=e&&(t=e.domElement);const i=new f.N(n,t);return i.update(),i}static initRenderer(n,e,t=0,i=!0){const r=new a.JeP({antialias:i});return r.setClearColor(new a.Q1f(t)),r.setSize(n,e),r.setPixelRatio(window.devicePixelRatio),r.domElement.style.backgroundColor="#"+t.toString(16).padStart(6,"0"),document.body.appendChild(r.domElement),console.log("three.js revision: ",a.sPf),r}static initHelper(n){const e=new a.IzY(30);n.add(e)}static initSky(n,e,t){t.toneMapping=a.FV;const i=new a.eaF(new a.Gu$(2e4,16,8),new a.V9B({color:16777215}));i.position.y=-7e5,i.visible=!1,n.add(i);const r=new g.m;r.scale.setScalar(45e3),n.add(r),m.initSkyGUI(e,r,i,t)}}var _=t(638);class v{constructor(){const n=h.initScene();n.fog=new a.jUj(0,80,160),h.initLight(n);const e=h.initCamera(n,640,480),t=h.initRenderer(640,480);h.initControl(e,t),h.initHelper(n);const i=this.initObject(n);u.w.on("tick",(i=>{t.render(n,e)})),this.initGUI(i)}initObject(n){const e=new a.bdM(20,20),t=new d(null,null,{fog:void 0!==n.fog});t.color=new a.Q1f(16777215),t.uniformOpacity=1,t.transparent=!0;const i=new a.eaF(e,t);return n.add(i),t}initGUI(n){const e=new _.Ay;m.initBasicMaterialGUI(e,n)}}window.onload=()=>{new v}}},t={};function i(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}i.m=e,n=[],i.O=(e,t,a,r)=>{if(!t){var o=1/0;for(c=0;c<n.length;c++){for(var[t,a,r]=n[c],s=!0,l=0;l<t.length;l++)(!1&r||o>=r)&&Object.keys(i.O).every((n=>i.O[n](t[l])))?t.splice(l--,1):(s=!1,r<o&&(o=r));if(s){n.splice(c--,1);var d=a();void 0!==d&&(e=d)}}return e}r=r||0;for(var c=n.length;c>0&&n[c-1][2]>r;c--)n[c]=n[c-1];n[c]=[t,a,r]},i.d=(n,e)=>{for(var t in e)i.o(e,t)&&!i.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},i.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),i.j=701,(()=>{var n={701:0};i.O.j=e=>0===n[e];var e=(e,t)=>{var a,r,[o,s,l]=t,d=0;if(o.some((e=>0!==n[e]))){for(a in s)i.o(s,a)&&(i.m[a]=s[a]);if(l)var c=l(i)}for(e&&e(t);d<o.length;d++)r=o[d],i.o(n,r)&&n[r]&&n[r][0](),n[r]=0;return i.O(c)},t=self.webpackChunk_masatomakino_threejs_shader_materials=self.webpackChunk_masatomakino_threejs_shader_materials||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var a=i.O(void 0,[121],(()=>i(275)));a=i.O(a)})();
(()=>{"use strict";var e,n={840:(e,n,t)=>{var i=t(753);class a{static getChunkName(){return""}static getChunk(){return""}static getDefines(){return{}}static registerChunk(){i.vxI&&null==i.vxI[this.getChunkName()]&&(i.vxI[this.getChunkName()]=this.getChunk())}static getUniform(){return{}}}var r,o=t(710);class s extends a{static registerChunk(){l.registerChunk(),d.registerChunk()}static getDefines(){return{USE_SURFACE_NORMAL:!1}}static getUniform(){return{}}}class l extends a{static getChunkName(){return"surface_normal_varying_chunk"}static getChunk(){return"\n    #ifdef USE_SURFACE_NORMAL\n      varying vec3 surfaceNormal;\n    #endif\n    "}}class d extends a{static getChunkName(){return"surface_normal_vertex_chunk"}static getChunk(){return"\n    #ifdef USE_SURFACE_NORMAL\n      surfaceNormal = normalize( transformedNormal );\n    #endif\n    "}}!function(e){e[e.vertical=4]="vertical",e[e.horizontal=3]="horizontal",e[e.radial=5]="radial"}(r||(r={})),o.BKk,o.BKk;class c extends o.BKk{constructor(e,n,t){super(t),this._opacity=1,this.uniforms=c.getBasicUniforms(),this.vertexShader=e??"\n\n#include <surface_normal_varying_chunk>\nvarying vec3 vViewPosition;\nvarying vec2 uvPosition;\n\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\tuvPosition = uv;\n\t\n    #include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\n\t#endif\n\t\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n    //For Rim Effect\n    #include <beginnormal_vertex>\n    #include <defaultnormal_vertex>\n    #include <surface_normal_vertex_chunk>\n    vViewPosition = - mvPosition.xyz;\n  \n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\t\n}",this.fragmentShader=n??"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n    varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\t\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t\n\t#include <envmap_fragment>\n\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\t\n}",s.registerChunk(),this.initDefines(),this.uniformOpacity=this._opacity}static getBasicUniforms(){return o.LlO.merge([i.fCn.common,i.fCn.specularmap,i.fCn.envmap,i.fCn.aomap,i.fCn.lightmap,i.fCn.fog])}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get uniformOpacity(){return this._opacity}set uniformOpacity(e){this._opacity=e,this.uniforms?.opacity&&(this.uniforms.opacity.value=e)}initDefines(){this.defines=Object.assign({},s.getDefines(),this.defines)}}o.BKk;var u=t(603);class p{static initColorGUI(e,n,t="color"){const i={},a=n[t];return i[t]=a.getHex(),e.addColor(i,t).onChange((e=>{a.setHex(e)})),i}static initColorNodeGUI(e,n,t="color"){const i={},a=n[t];return i[t]=a.value.getHex(),e.addColor(i,t).onChange((e=>{a.value.setHex(e)})),i}static initBasicMaterialGUI(e,n,t="Material"){const i=e.addFolder(t);return this.initMaterialFolder(i,n),i.open(),i}static initMaterialGUI(e,n,t="Material"){const i=this.initBasicMaterialGUI(e,n,t);this.initColorGUI(i,n,"emissive")}static initMaterialFolder(e,n,t=!1){this.initColorGUI(e,n),e.add(n,"transparent");const i=t?"opacity":"uniformOpacity";e.add(n,i,0,1)}static initSpriteMaterialGUI(e,n,t="Material"){const i=e.addFolder(t);this.initMaterialFolder(i,n),i.open()}static initGridMaterialGUI(e,n){this.initMaterialGUI(e,n);const t={mask:"",alphaMap:""},i=e.addFolder("WavyGridMaterial");return i.add(n,"isReversed"),i.add(n,"division",2,256).step(1),i.add(n,"divisionScaleX",0,4).step(1),i.add(t,"mask",{none:"",earth:"./textures/landmask.png"}).onChange((e=>{n.maskTexture=""===e?null:(new o.Tap).load(e)})),i.add(t,"alphaMap",{none:"",earth:"./textures/landmask.png"}).onChange((e=>{n.alphaMap=""===e?null:(new o.Tap).load(e)})),i.open(),i}static initWavyMaterialGUI(e,n){const t=this.initGridMaterialGUI(e,n).addFolder("WavyAnimation");t.add(n,"isAnimate"),t.add(n,"speed",-2,2),t.add(n,"waveFrequency",0,1),t.add(n,"wavePow",0,4),t.add(n,"direction",{horizontal:r.horizontal,vertical:r.vertical,radial:r.radial}),t.add(n,"raisedBottom",0,1),t.open()}static initAnimationGUI(e,n,t="Animation"){const i=e.addFolder(t);i.add(n,"isAnimate"),i.add(n,"speed",-2,2),i.open()}static initRimGUI(e,n,t="Rim Effect Material"){const i=e.addFolder(t);p.initColorGUI(i,n,"rimColor"),i.add(n,"rimStrength",0,4).step(.01),i.add(n,"rimPow",0,4).step(.01),p.initColorGUI(i,n,"insideColor"),i.add(n,"insideStrength",0,4).step(.01),i.add(n,"insidePow",0,8).step(.01),i.open()}static initExpansionGUI(e,n,t="ExpansionMaterial"){const i=e.addFolder("ExpansionMaterial");i.add(n,"expansionStrength",-12,12).step(.01),i.open()}static initFBMTilingGUI(e,n,t="FBM Tiling"){const i=e.addFolder("FBM Tiling");i.add(n,"tiles",1,8).step(1),i.add(n,"hashLoop",2,16).step(1),i.add(n,"amp",0,2).step(.01),i.open()}static initSkyGUI(e,n,t,i){const a={turbidity:10,rayleigh:.15,mieCoefficient:.005,mieDirectionalG:.8,inclination:.07,azimuth:.25,exposure:.75},r=4e5;function o(){const e=n.material.uniforms;e.turbidity.value=a.turbidity,e.rayleigh.value=a.rayleigh,e.mieCoefficient.value=a.mieCoefficient,e.mieDirectionalG.value=a.mieDirectionalG;const o=Math.PI*(a.inclination-.5),s=2*Math.PI*(a.azimuth-.5);t.position.x=r*Math.cos(s),t.position.y=r*Math.sin(s)*Math.sin(o),t.position.z=r*Math.sin(s)*Math.cos(o),e.sunPosition.value.copy(t.position),i.toneMappingExposure=a.exposure}o();const s=e.addFolder("Sky");s.add(a,"turbidity",1,20,.1).onChange(o),s.add(a,"rayleigh",0,4,.001).onChange(o),s.add(a,"mieCoefficient",0,.1,.001).onChange(o),s.add(a,"mieDirectionalG",0,1,.001).onChange(o),s.add(a,"inclination",0,1,1e-4).onChange(o),s.add(a,"azimuth",0,1,1e-4).onChange(o),s.add(a,"exposure",0,1,1e-4).onChange(o),s.open()}}var f=t(580),m=t(785);class g{static initScene(){return new o.Z58}static initLight(e){const n=new o.$p8(16777215,Math.PI);return e.add(n),n}static initCamera(e,n,t,i=400){const a=new o.ubm(45,n/t,1,i);return a.position.set(0,0,100),a.updateMatrixWorld(!1),e.add(a),a}static initControl(e,n){let t;null!=n&&(t=n.domElement);const i=new f.N(e,t);return i.update(),i}static initRenderer(e,n,t=0,a=!0){const r=new i.JeP({antialias:a});return r.setClearColor(new o.Q1f(t)),r.setSize(e,n),r.setPixelRatio(window.devicePixelRatio),r.domElement.style.backgroundColor="#"+t.toString(16).padStart(6,"0"),document.body.appendChild(r.domElement),console.log("three.js revision: ",o.sPf),r}static initHelper(e){const n=new o.IzY(30);e.add(n)}static initSky(e,n,t){t.toneMapping=o.FV;const i=new o.eaF(new o.Gu$(2e4,16,8),new o.V9B({color:16777215}));i.position.y=-7e5,i.visible=!1,e.add(i);const a=new m.m;a.scale.setScalar(45e3),e.add(a),p.initSkyGUI(n,a,i,t)}}var h=t(638);class _{constructor(){const e=g.initScene();e.fog=new o.jUj(0,80,160),g.initLight(e);const n=g.initCamera(e,640,480),t=g.initRenderer(640,480);g.initControl(n,t),g.initHelper(e);const i=this.initObject(e);u.w.on("tick",(i=>{t.render(e,n)})),this.initGUI(i)}initObject(e){const n=new o.bdM(20,20),t=new c(null,null,{fog:void 0!==e.fog});t.color=new o.Q1f(16777215),t.uniformOpacity=1,t.transparent=!0;const i=new o.eaF(n,t);return e.add(i),t}initGUI(e){const n=new h.Ay;p.initBasicMaterialGUI(n,e)}}window.onload=()=>{new _}}},t={};function i(e){var a=t[e];if(void 0!==a)return a.exports;var r=t[e]={exports:{}};return n[e](r,r.exports,i),r.exports}i.m=n,e=[],i.O=(n,t,a,r)=>{if(!t){var o=1/0;for(c=0;c<e.length;c++){for(var[t,a,r]=e[c],s=!0,l=0;l<t.length;l++)(!1&r||o>=r)&&Object.keys(i.O).every((e=>i.O[e](t[l])))?t.splice(l--,1):(s=!1,r<o&&(o=r));if(s){e.splice(c--,1);var d=a();void 0!==d&&(n=d)}}return n}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[t,a,r]},i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),i.j=701,(()=>{var e={701:0};i.O.j=n=>0===e[n];var n=(n,t)=>{var a,r,[o,s,l]=t,d=0;if(o.some((n=>0!==e[n]))){for(a in s)i.o(s,a)&&(i.m[a]=s[a]);if(l)var c=l(i)}for(n&&n(t);d<o.length;d++)r=o[d],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(c)},t=self.webpackChunk_masatomakino_threejs_shader_materials=self.webpackChunk_masatomakino_threejs_shader_materials||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var a=i.O(void 0,[121],(()=>i(840)));a=i.O(a)})();
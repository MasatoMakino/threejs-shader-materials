import { Color, Vector3 } from "three";
import { ShaderNodeObject, UniformNode } from "three/src/nodes/Nodes.js";
type UniformType<T> = ShaderNodeObject<UniformNode<T>>;
export declare const rimEffect: (args_0: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<Color>>, args_1: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_2: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_3: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<Color>>, args_4: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_5: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>) => ShaderNodeObject<import("three/src/nodes/Nodes.js").VarNode>;
export declare const rimAngleEffect: (args_0: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<Color>>, args_1: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_2: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_3: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<Color>>, args_4: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_5: import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<number>>, args_6: Vector3 | import("three/src/nodes/Nodes.js").NodeRepresentation<UniformType<Vector3>>) => ShaderNodeObject<import("three/src/nodes/Nodes.js").VarNode>;
export {};
//# sourceMappingURL=RimFunction.d.ts.map
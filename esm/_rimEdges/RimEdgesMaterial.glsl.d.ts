export declare const vertex = "\nattribute vec3 control0;\nattribute vec3 control1;\nattribute vec3 direction;\nattribute float collapse;\nattribute vec3 instPos;\n\nuniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n    vLineDistance = scale * lineDistance;\n    #include <color_vertex>\n\n    // Transform the line segment ends and control points into camera clip space\n    vec4 c0 = projectionMatrix * modelViewMatrix * vec4( control0 + instPos, 1.0 );\n    vec4 c1 = projectionMatrix * modelViewMatrix * vec4( control1 + instPos, 1.0 );\n    vec4 p0 = projectionMatrix * modelViewMatrix * vec4( position + instPos, 1.0 );\n    vec4 p1 = projectionMatrix * modelViewMatrix * vec4( position + instPos + direction, 1.0 );\n\n    c0.xy /= c0.w;\n    c1.xy /= c1.w;\n    p0.xy /= p0.w;\n    p1.xy /= p1.w;\n\n    // Get the direction of the segment and an orthogonal vector\n    vec2 dir = p1.xy - p0.xy;\n    vec2 norm = vec2( -dir.y, dir.x );\n\n    // Get control point directions from the line\n    vec2 c0dir = c0.xy - p1.xy;\n    vec2 c1dir = c1.xy - p1.xy;\n\n    // If the vectors to the controls points are pointed in different directions away\n    // from the line segment then the line should not be drawn.\n    float d0 = dot( normalize( norm ), normalize( c0dir ) );\n    float d1 = dot( normalize( norm ), normalize( c1dir ) );\n    float discardFlag = float( sign( d0 ) != sign( d1 ) );\n\n    vec3 p = position + instPos + ((discardFlag > 0.5) ? direction * collapse : vec3(0));\n    vec4 mvPosition = modelViewMatrix * vec4( p, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    #include <morphcolor_vertex>\n//  #include <begin_vertex>\n//  #include <morphtarget_vertex>\n//  #include <project_vertex>\n    #include <logdepthbuf_vertex>\n    #include <clipping_planes_vertex>\n    #include <fog_vertex>\n}\n";
//# sourceMappingURL=RimEdgesMaterial.glsl.d.ts.map